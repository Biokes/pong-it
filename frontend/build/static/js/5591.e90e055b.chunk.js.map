{"version":3,"file":"static/js/5591.e90e055b.chunk.js","mappings":"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","sources":["../../node_modules/zustand/esm/middleware.mjs","../../node_modules/zustand/esm/vanilla.mjs","../../src/sdk-info.ts","../../../src/store/store.ts","../../../../src/core/telemetry/initCCA.ts","../../../../src/core/telemetry/telemetry-content.ts","../../../../../src/sign/scw/utils/constants.ts","../../../../src/core/error/constants.ts","../../../../src/core/error/utils.ts","../../../../src/core/error/errors.ts","../../../src/util/assertPresence.ts","../../../src/util/checkCrossOriginOpenerPolicy.ts","../../../src/util/validatePreferences.ts","../../../src/util/provider.ts","../../../src/core/constants.ts","../../../../src/core/telemetry/logEvent.ts","../../../../../src/core/telemetry/events/communicator.ts","../../../../../src/core/telemetry/events/snackbar.ts","../../../../../src/sign/walletlink/relay/ui/components/cssReset/cssReset.ts","../../../../../src/sign/walletlink/relay/ui/components/cssReset/cssReset-css.ts","../../../../../src/sign/walletlink/relay/ui/components/util.ts","../../../../../src/sign/walletlink/relay/ui/components/Snackbar/Snackbar.tsx","../../../../../src/sign/walletlink/relay/ui/components/Snackbar/Snackbar-css.ts","../../../../../src/sign/walletlink/relay/ui/WalletLinkRelayUI.ts","../../../src/util/web.ts","../../../../src/core/communicator/Communicator.ts","../../../../../src/sign/walletlink/relay/type/Web3Response.ts","../../../../src/core/error/serialize.ts","../../../../src/core/provider/interface.ts","../../../../src/core/storage/ScopedLocalStorage.ts","../../../../src/core/type/index.ts","../../../../src/core/type/util.ts","../../../../src/store/correlation-ids/store.ts","../../../../../src/core/telemetry/events/scw-signer.ts","../../../../src/core/telemetry/utils.ts","../../node_modules/viem/errors/account.ts","../../node_modules/viem/account-abstraction/errors/bundler.ts","../../node_modules/viem/account-abstraction/errors/userOperation.ts","../../node_modules/viem/account-abstraction/utils/errors/getBundlerError.ts","../../node_modules/viem/account-abstraction/utils/errors/getUserOperationError.ts","../../node_modules/viem/account-abstraction/utils/formatters/userOperationRequest.ts","../../node_modules/viem/account-abstraction/actions/paymaster/getPaymasterData.ts","../../node_modules/viem/account-abstraction/actions/paymaster/getPaymasterStubData.ts","../../node_modules/viem/account-abstraction/actions/bundler/prepareUserOperation.ts","../../node_modules/viem/actions/wallet/prepareAuthorization.ts","../../node_modules/viem/account-abstraction/actions/bundler/estimateUserOperationGas.ts","../../node_modules/viem/account-abstraction/utils/formatters/userOperationGas.ts","../../node_modules/viem/account-abstraction/utils/formatters/userOperation.ts","../../node_modules/viem/account-abstraction/actions/bundler/getUserOperationReceipt.ts","../../node_modules/viem/account-abstraction/utils/formatters/userOperationReceipt.ts","../../node_modules/viem/account-abstraction/clients/decorators/bundler.ts","../../node_modules/viem/account-abstraction/actions/bundler/getSupportedEntryPoints.ts","../../node_modules/viem/account-abstraction/actions/bundler/getUserOperation.ts","../../node_modules/viem/account-abstraction/actions/bundler/sendUserOperation.ts","../../node_modules/viem/account-abstraction/actions/bundler/waitForUserOperationReceipt.ts","../../../../src/store/chain-clients/store.ts","../../../../src/store/chain-clients/utils.ts","../../node_modules/viem/account-abstraction/clients/createBundlerClient.ts","../../../src/util/assertSubAccount.ts","../../../src/util/cipher.ts","../../node_modules/ox/node_modules/@noble/hashes/src/crypto.ts","../../node_modules/ox/node_modules/@noble/hashes/src/utils.ts","../../node_modules/ox/node_modules/@noble/hashes/src/_md.ts","../../node_modules/ox/node_modules/@noble/hashes/src/_u64.ts","../../node_modules/ox/node_modules/@noble/hashes/src/sha2.ts","../../node_modules/ox/node_modules/@noble/hashes/src/hmac.ts","../../node_modules/ox/node_modules/@noble/curves/src/utils.ts","../../node_modules/ox/node_modules/@noble/curves/src/abstract/modular.ts","../../node_modules/ox/node_modules/@noble/curves/src/abstract/curve.ts","../../node_modules/ox/node_modules/@noble/curves/src/abstract/weierstrass.ts","../../node_modules/ox/node_modules/@noble/curves/src/_shortw_utils.ts","../../node_modules/ox/node_modules/@noble/curves/src/nist.ts","../../node_modules/ox/node_modules/@noble/curves/src/p256.ts","../../node_modules/ox/core/Errors.ts","../../node_modules/ox/core/version.ts","../../node_modules/ox/core/Json.ts","../../node_modules/ox/core/internal/hex.ts","../../node_modules/ox/core/Hex.ts","../../node_modules/ox/core/internal/bytes.ts","../../node_modules/ox/core/Bytes.ts","../../node_modules/ox/core/PublicKey.ts","../../node_modules/ox/core/Base64.ts","../../node_modules/ox/node_modules/@noble/hashes/src/sha256.ts","../../node_modules/ox/core/Hash.ts","../../node_modules/ox/core/WebAuthnP256.ts","../../node_modules/ox/core/Solidity.ts","../../node_modules/ox/core/Signature.ts","../../node_modules/idb-keyval/dist/index.js","../../../../src/kms/crypto-key/index.ts","../../../../src/kms/crypto-key/storage.ts","../../node_modules/ox/core/WebCryptoP256.ts","../../../../src/sign/scw/SCWKeyManager.ts","../../../src/util/get.ts","../../node_modules/viem/errors/calls.ts","../../node_modules/viem/actions/wallet/sendCalls.ts","../../node_modules/viem/actions/wallet/getCallsStatus.ts","../../node_modules/viem/actions/wallet/waitForCallsStatus.ts","../../../../src/sign/scw/utils.ts","../../../src/util/encoding.ts","../../node_modules/viem/utils/abi/encodePacked.ts","../../node_modules/viem/account-abstraction/constants/abis.ts","../../node_modules/viem/utils/nonceManager.ts","../../node_modules/viem/utils/signature/serializeErc6492Signature.ts","../../node_modules/viem/constants/bytes.ts","../../node_modules/viem/account-abstraction/utils/userOperation/getInitCode.ts","../../node_modules/viem/account-abstraction/utils/userOperation/toPackedUserOperation.ts","../../node_modules/viem/account-abstraction/utils/userOperation/getUserOperationTypedData.ts","../../node_modules/viem/account-abstraction/utils/userOperation/getUserOperationHash.ts","../../../../../src/sign/scw/utils/createSmartAccount.ts","../../node_modules/viem/account-abstraction/constants/address.ts","../../node_modules/viem/account-abstraction/accounts/toSmartAccount.ts","../../node_modules/viem/utils/signature/parseSignature.ts","../../../../../src/sign/scw/utils/createSubAccountSigner.ts","../../../../../src/sign/scw/utils/findOwnerIndex.ts","../../../../../src/sign/scw/utils/handleAddSubAccountOwner.ts","../../../../../src/sign/scw/utils/presentAddOwnerDialog.ts","../../../../../src/sign/scw/utils/handleInsufficientBalance.ts","../../../../src/sign/scw/SCWSigner.ts","../../../../../src/core/telemetry/events/scw-sub-account.ts","../../../../../src/core/telemetry/events/walletlink-signer.ts","../../../../../src/sign/walletlink/relay/constants.ts","../../../../../src/sign/walletlink/relay/connection/WalletLinkCipher.ts","../../../../../src/sign/walletlink/relay/connection/WalletLinkHTTP.ts","../../../../../src/sign/walletlink/relay/connection/WalletLinkWebSocket.ts","../../../../../src/sign/walletlink/relay/connection/WalletLinkConnection.ts","../../../../../src/sign/walletlink/relay/RelayEventManager.ts","../../node_modules/@noble/hashes/src/_assert.ts","../../node_modules/@noble/hashes/src/utils.ts","../../node_modules/@noble/hashes/src/_md.ts","../../node_modules/@noble/hashes/src/sha256.ts","../../../../../src/sign/walletlink/relay/type/WalletLinkSession.ts","../../../../../src/sign/walletlink/relay/ui/components/RedirectDialog/RedirectDialog.tsx","../../../../../src/sign/walletlink/relay/ui/components/RedirectDialog/RedirectDialog-css.ts","../../../../../src/sign/walletlink/relay/ui/WLMobileRelayUI.ts","../../../../../src/sign/walletlink/relay/WalletLinkRelay.ts","../../../../src/sign/walletlink/WalletLinkSigner.ts","../../../src/sign/util.ts","../../src/CoinbaseWalletProvider.ts","../../../../../src/core/telemetry/events/provider.ts","../../../../../src/core/telemetry/events/signer-selection.ts","../../src/createCoinbaseWalletSDK.ts","../../src/createCoinbaseWalletProvider.ts"],"sourcesContent":["const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api) return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === undefined) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extensionConnector) {\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording) return r;\n    const action = nameOrAction === undefined ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === undefined) {\n      connection == null ? undefined : connection.send(action, get());\n      return r;\n    }\n    connection == null ? undefined : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? undefined : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? undefined : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if ((import.meta.env ? import.meta.env.MODE : undefined) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === undefined) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format.\n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === undefined || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools) return;\n            if (typeof api.dispatch !== \"function\") return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === undefined) {\n              return connection == null ? undefined : connection.init(api.getState());\n            }\n            return connection == null ? undefined : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === undefined) {\n              connection == null ? undefined : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? undefined : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === undefined) {\n                setStateFromDevtools(state);\n                connection == null ? undefined : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? undefined : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === undefined) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? undefined : _a.state;\n            if (!lastComputedState) return;\n            if (store === undefined) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? undefined : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== undefined) f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? undefined : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? undefined : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? undefined : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(\n      name,\n      JSON.stringify(newValue, options == null ? undefined : options.replacer)\n    ),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst persistImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  api.getInitialState = () => configResult;\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? undefined : _b.call(options, (_a = get()) != null ? _a : configResult)) || undefined;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            const migration = options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n            if (migration instanceof Promise) {\n              return migration.then((result) => [true, result]);\n            }\n            return [true, migration];\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return [false, deserializedStorageValue.state];\n        }\n      }\n      return [false, undefined];\n    }).then((migrationResult) => {\n      var _a2;\n      const [migrated, migratedState] = migrationResult;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      if (migrated) {\n        return setItem();\n      }\n    }).then(() => {\n      postRehydrationCallback == null ? undefined : postRehydrationCallback(stateFromStorage, undefined);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? undefined : postRehydrationCallback(undefined, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? undefined : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n","const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const api = { setState, getState, getInitialState, subscribe };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\n\nexport { createStore };\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"import { BaseError } from './base.js'\n\nexport type AccountNotFoundErrorType = AccountNotFoundError & {\n  name: 'AccountNotFoundError'\n}\nexport class AccountNotFoundError extends BaseError {\n  constructor({ docsPath }: { docsPath?: string | undefined } = {}) {\n    super(\n      [\n        'Could not find an Account to execute with this Action.',\n        'Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the Client.',\n      ].join('\\n'),\n      {\n        docsPath,\n        docsSlug: 'account',\n        name: 'AccountNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AccountTypeNotSupportedErrorType = AccountTypeNotSupportedError & {\n  name: 'AccountTypeNotSupportedError'\n}\nexport class AccountTypeNotSupportedError extends BaseError {\n  constructor({\n    docsPath,\n    metaMessages,\n    type,\n  }: {\n    docsPath?: string | undefined\n    metaMessages?: string[] | undefined\n    type: string\n  }) {\n    super(`Account type \"${type}\" is not supported.`, {\n      docsPath,\n      metaMessages,\n      name: 'AccountTypeNotSupportedError',\n    })\n  }\n}\n","import type { Address } from 'abitype'\nimport { BaseError } from '../../errors/base.js'\nimport type { Hex } from '../../types/misc.js'\n\nexport type AccountNotDeployedErrorType = AccountNotDeployedError & {\n  name: 'AccountNotDeployedError'\n}\nexport class AccountNotDeployedError extends BaseError {\n  static message = /aa20/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('Smart Account is not deployed.', {\n      cause,\n      metaMessages: [\n        'This could arise when:',\n        '- No `factory`/`factoryData` or `initCode` properties are provided for Smart Account deployment.',\n        '- An incorrect `sender` address is provided.',\n      ],\n      name: 'AccountNotDeployedError',\n    })\n  }\n}\n\nexport type ExecutionRevertedErrorType = ExecutionRevertedError & {\n  code: -32521\n  name: 'ExecutionRevertedError'\n}\nexport class ExecutionRevertedError extends BaseError {\n  static code = -32521\n  static message = /execution reverted/\n\n  data?: { revertData?: Hex } | undefined\n\n  constructor({\n    cause,\n    data,\n    message,\n  }: {\n    cause?: BaseError | undefined\n    data?: { revertData?: Hex } | undefined\n    message?: string | undefined\n  } = {}) {\n    const reason = message\n      ?.replace('execution reverted: ', '')\n      ?.replace('execution reverted', '')\n    super(\n      `Execution reverted ${\n        reason ? `with reason: ${reason}` : 'for an unknown reason'\n      }.`,\n      {\n        cause,\n        name: 'ExecutionRevertedError',\n      },\n    )\n\n    this.data = data\n  }\n}\n\nexport type FailedToSendToBeneficiaryErrorType =\n  FailedToSendToBeneficiaryError & {\n    name: 'FailedToSendToBeneficiaryError'\n  }\nexport class FailedToSendToBeneficiaryError extends BaseError {\n  static message = /aa91/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('Failed to send funds to beneficiary.', {\n      cause,\n      name: 'FailedToSendToBeneficiaryError',\n    })\n  }\n}\n\nexport type GasValuesOverflowErrorType = GasValuesOverflowError & {\n  name: 'GasValuesOverflowError'\n}\nexport class GasValuesOverflowError extends BaseError {\n  static message = /aa94/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('Gas value overflowed.', {\n      cause,\n      metaMessages: [\n        'This could arise when:',\n        '- one of the gas values exceeded 2**120 (uint120)',\n      ].filter(Boolean) as string[],\n      name: 'GasValuesOverflowError',\n    })\n  }\n}\n\nexport type HandleOpsOutOfGasErrorType = HandleOpsOutOfGasError & {\n  name: 'HandleOpsOutOfGasError'\n}\nexport class HandleOpsOutOfGasError extends BaseError {\n  static message = /aa95/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super(\n      'The `handleOps` function was called by the Bundler with a gas limit too low.',\n      {\n        cause,\n        name: 'HandleOpsOutOfGasError',\n      },\n    )\n  }\n}\n\nexport type InitCodeFailedErrorType = InitCodeFailedError & {\n  name: 'InitCodeFailedError'\n}\nexport class InitCodeFailedError extends BaseError {\n  static message = /aa13/\n  constructor({\n    cause,\n    factory,\n    factoryData,\n    initCode,\n  }: {\n    cause?: BaseError | undefined\n    factory?: Address | undefined\n    factoryData?: Hex | undefined\n    initCode?: Hex | undefined\n  }) {\n    super('Failed to simulate deployment for Smart Account.', {\n      cause,\n      metaMessages: [\n        'This could arise when:',\n        '- Invalid `factory`/`factoryData` or `initCode` properties are present',\n        '- Smart Account deployment execution ran out of gas (low `verificationGasLimit` value)',\n        '- Smart Account deployment execution reverted with an error\\n',\n        factory && `factory: ${factory}`,\n        factoryData && `factoryData: ${factoryData}`,\n        initCode && `initCode: ${initCode}`,\n      ].filter(Boolean) as string[],\n      name: 'InitCodeFailedError',\n    })\n  }\n}\n\nexport type InitCodeMustCreateSenderErrorType =\n  InitCodeMustCreateSenderError & {\n    name: 'InitCodeMustCreateSenderError'\n  }\nexport class InitCodeMustCreateSenderError extends BaseError {\n  static message = /aa15/\n  constructor({\n    cause,\n    factory,\n    factoryData,\n    initCode,\n  }: {\n    cause?: BaseError | undefined\n    factory?: Address | undefined\n    factoryData?: Hex | undefined\n    initCode?: Hex | undefined\n  }) {\n    super(\n      'Smart Account initialization implementation did not create an account.',\n      {\n        cause,\n        metaMessages: [\n          'This could arise when:',\n          '- `factory`/`factoryData` or `initCode` properties are invalid',\n          '- Smart Account initialization implementation is incorrect\\n',\n          factory && `factory: ${factory}`,\n          factoryData && `factoryData: ${factoryData}`,\n          initCode && `initCode: ${initCode}`,\n        ].filter(Boolean) as string[],\n        name: 'InitCodeMustCreateSenderError',\n      },\n    )\n  }\n}\n\nexport type InitCodeMustReturnSenderErrorType =\n  InitCodeMustReturnSenderError & {\n    name: 'InitCodeMustReturnSenderError'\n  }\nexport class InitCodeMustReturnSenderError extends BaseError {\n  static message = /aa14/\n  constructor({\n    cause,\n    factory,\n    factoryData,\n    initCode,\n    sender,\n  }: {\n    cause?: BaseError | undefined\n    factory?: Address | undefined\n    factoryData?: Hex | undefined\n    initCode?: Hex | undefined\n    sender?: Address | undefined\n  }) {\n    super(\n      'Smart Account initialization implementation does not return the expected sender.',\n      {\n        cause,\n        metaMessages: [\n          'This could arise when:',\n          'Smart Account initialization implementation does not return a sender address\\n',\n          factory && `factory: ${factory}`,\n          factoryData && `factoryData: ${factoryData}`,\n          initCode && `initCode: ${initCode}`,\n          sender && `sender: ${sender}`,\n        ].filter(Boolean) as string[],\n        name: 'InitCodeMustReturnSenderError',\n      },\n    )\n  }\n}\n\nexport type InsufficientPrefundErrorType = InsufficientPrefundError & {\n  name: 'InsufficientPrefundError'\n}\nexport class InsufficientPrefundError extends BaseError {\n  static message = /aa21/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super(\n      'Smart Account does not have sufficient funds to execute the User Operation.',\n      {\n        cause,\n        metaMessages: [\n          'This could arise when:',\n          '- the Smart Account does not have sufficient funds to cover the required prefund, or',\n          '- a Paymaster was not provided',\n        ].filter(Boolean) as string[],\n        name: 'InsufficientPrefundError',\n      },\n    )\n  }\n}\n\nexport type InternalCallOnlyErrorType = InternalCallOnlyError & {\n  name: 'InternalCallOnlyError'\n}\nexport class InternalCallOnlyError extends BaseError {\n  static message = /aa92/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('Bundler attempted to call an invalid function on the EntryPoint.', {\n      cause,\n      name: 'InternalCallOnlyError',\n    })\n  }\n}\n\nexport type InvalidAggregatorErrorType = InvalidAggregatorError & {\n  name: 'InvalidAggregatorError'\n}\nexport class InvalidAggregatorError extends BaseError {\n  static message = /aa96/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super(\n      'Bundler used an invalid aggregator for handling aggregated User Operations.',\n      {\n        cause,\n        name: 'InvalidAggregatorError',\n      },\n    )\n  }\n}\n\nexport type InvalidAccountNonceErrorType = InvalidAccountNonceError & {\n  name: 'InvalidAccountNonceError'\n}\nexport class InvalidAccountNonceError extends BaseError {\n  static message = /aa25/\n  constructor({\n    cause,\n    nonce,\n  }: {\n    cause?: BaseError | undefined\n    nonce?: bigint | undefined\n  }) {\n    super('Invalid Smart Account nonce used for User Operation.', {\n      cause,\n      metaMessages: [nonce && `nonce: ${nonce}`].filter(Boolean) as string[],\n      name: 'InvalidAccountNonceError',\n    })\n  }\n}\n\nexport type InvalidBeneficiaryErrorType = InvalidBeneficiaryError & {\n  name: 'InvalidBeneficiaryError'\n}\nexport class InvalidBeneficiaryError extends BaseError {\n  static message = /aa90/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('Bundler has not set a beneficiary address.', {\n      cause,\n      name: 'InvalidBeneficiaryError',\n    })\n  }\n}\n\nexport type InvalidFieldsErrorType = InvalidFieldsError & {\n  name: 'InvalidFieldsError'\n}\nexport class InvalidFieldsError extends BaseError {\n  static code = -32602\n\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('Invalid fields set on User Operation.', {\n      cause,\n      name: 'InvalidFieldsError',\n    })\n  }\n}\n\nexport type InvalidPaymasterAndDataErrorType = InvalidPaymasterAndDataError & {\n  name: 'InvalidPaymasterAndDataError'\n}\nexport class InvalidPaymasterAndDataError extends BaseError {\n  static message = /aa93/\n  constructor({\n    cause,\n    paymasterAndData,\n  }: {\n    cause?: BaseError | undefined\n    paymasterAndData?: Hex | undefined\n  }) {\n    super('Paymaster properties provided are invalid.', {\n      cause,\n      metaMessages: [\n        'This could arise when:',\n        '- the `paymasterAndData` property is of an incorrect length\\n',\n        paymasterAndData && `paymasterAndData: ${paymasterAndData}`,\n      ].filter(Boolean) as string[],\n      name: 'InvalidPaymasterAndDataError',\n    })\n  }\n}\n\nexport type PaymasterDepositTooLowErrorType = PaymasterDepositTooLowError & {\n  code: -32508\n  name: 'PaymasterDepositTooLowError'\n}\nexport class PaymasterDepositTooLowError extends BaseError {\n  static code = -32508\n  static message = /aa31/\n\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('Paymaster deposit for the User Operation is too low.', {\n      cause,\n      metaMessages: [\n        'This could arise when:',\n        '- the Paymaster has deposited less than the expected amount via the `deposit` function',\n      ].filter(Boolean) as string[],\n      name: 'PaymasterDepositTooLowError',\n    })\n  }\n}\n\nexport type PaymasterFunctionRevertedErrorType =\n  PaymasterFunctionRevertedError & {\n    name: 'PaymasterFunctionRevertedError'\n  }\nexport class PaymasterFunctionRevertedError extends BaseError {\n  static message = /aa33/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('The `validatePaymasterUserOp` function on the Paymaster reverted.', {\n      cause,\n      name: 'PaymasterFunctionRevertedError',\n    })\n  }\n}\n\nexport type PaymasterNotDeployedErrorType = PaymasterNotDeployedError & {\n  name: 'PaymasterNotDeployedError'\n}\nexport class PaymasterNotDeployedError extends BaseError {\n  static message = /aa30/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('The Paymaster contract has not been deployed.', {\n      cause,\n      name: 'PaymasterNotDeployedError',\n    })\n  }\n}\n\nexport type PaymasterRateLimitErrorType = PaymasterRateLimitError & {\n  code: -32504\n  name: 'PaymasterRateLimitError'\n}\nexport class PaymasterRateLimitError extends BaseError {\n  static code = -32504\n\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super(\n      'UserOperation rejected because paymaster (or signature aggregator) is throttled/banned.',\n      {\n        cause,\n        name: 'PaymasterRateLimitError',\n      },\n    )\n  }\n}\n\nexport type PaymasterStakeTooLowErrorType = PaymasterStakeTooLowError & {\n  code: -32505\n  name: 'PaymasterStakeTooLowError'\n}\nexport class PaymasterStakeTooLowError extends BaseError {\n  static code = -32505\n\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super(\n      'UserOperation rejected because paymaster (or signature aggregator) is throttled/banned.',\n      {\n        cause,\n        name: 'PaymasterStakeTooLowError',\n      },\n    )\n  }\n}\n\nexport type PaymasterPostOpFunctionRevertedErrorType =\n  PaymasterPostOpFunctionRevertedError & {\n    name: 'PaymasterPostOpFunctionRevertedError'\n  }\nexport class PaymasterPostOpFunctionRevertedError extends BaseError {\n  static message = /aa50/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('Paymaster `postOp` function reverted.', {\n      cause,\n      name: 'PaymasterPostOpFunctionRevertedError',\n    })\n  }\n}\n\nexport type SenderAlreadyConstructedErrorType =\n  SenderAlreadyConstructedError & {\n    name: 'SenderAlreadyConstructedError'\n  }\nexport class SenderAlreadyConstructedError extends BaseError {\n  static message = /aa10/\n  constructor({\n    cause,\n    factory,\n    factoryData,\n    initCode,\n  }: {\n    cause?: BaseError | undefined\n    factory?: Address | undefined\n    factoryData?: Hex | undefined\n    initCode?: Hex | undefined\n  }) {\n    super('Smart Account has already been deployed.', {\n      cause,\n      metaMessages: [\n        'Remove the following properties and try again:',\n        factory && '`factory`',\n        factoryData && '`factoryData`',\n        initCode && '`initCode`',\n      ].filter(Boolean) as string[],\n      name: 'SenderAlreadyConstructedError',\n    })\n  }\n}\n\nexport type SignatureCheckFailedErrorType = SignatureCheckFailedError & {\n  code: -32507\n  name: 'SignatureCheckFailedError'\n}\nexport class SignatureCheckFailedError extends BaseError {\n  static code = -32507\n\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super(\n      'UserOperation rejected because account signature check failed (or paymaster signature, if the paymaster uses its data as signature).',\n      {\n        cause,\n        name: 'SignatureCheckFailedError',\n      },\n    )\n  }\n}\n\nexport type SmartAccountFunctionRevertedErrorType =\n  SmartAccountFunctionRevertedError & {\n    name: 'SmartAccountFunctionRevertedError'\n  }\nexport class SmartAccountFunctionRevertedError extends BaseError {\n  static message = /aa23/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('The `validateUserOp` function on the Smart Account reverted.', {\n      cause,\n      name: 'SmartAccountFunctionRevertedError',\n    })\n  }\n}\n\nexport type UnsupportedSignatureAggregatorErrorType =\n  UnsupportedSignatureAggregatorError & {\n    code: -32506\n    name: 'UnsupportedSignatureAggregatorError'\n  }\nexport class UnsupportedSignatureAggregatorError extends BaseError {\n  static code = -32506\n\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super(\n      'UserOperation rejected because account specified unsupported signature aggregator.',\n      {\n        cause,\n        name: 'UnsupportedSignatureAggregatorError',\n      },\n    )\n  }\n}\n\nexport type UserOperationExpiredErrorType = UserOperationExpiredError & {\n  name: 'UserOperationExpiredError'\n}\nexport class UserOperationExpiredError extends BaseError {\n  static message = /aa22/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('User Operation expired.', {\n      cause,\n      metaMessages: [\n        'This could arise when:',\n        '- the `validAfter` or `validUntil` values returned from `validateUserOp` on the Smart Account are not satisfied',\n      ].filter(Boolean) as string[],\n      name: 'UserOperationExpiredError',\n    })\n  }\n}\n\nexport type UserOperationPaymasterExpiredErrorType =\n  UserOperationPaymasterExpiredError & {\n    name: 'UserOperationPaymasterExpiredError'\n  }\nexport class UserOperationPaymasterExpiredError extends BaseError {\n  static message = /aa32/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('Paymaster for User Operation expired.', {\n      cause,\n      metaMessages: [\n        'This could arise when:',\n        '- the `validAfter` or `validUntil` values returned from `validatePaymasterUserOp` on the Paymaster are not satisfied',\n      ].filter(Boolean) as string[],\n      name: 'UserOperationPaymasterExpiredError',\n    })\n  }\n}\n\nexport type UserOperationSignatureErrorType = UserOperationSignatureError & {\n  name: 'UserOperationSignatureError'\n}\nexport class UserOperationSignatureError extends BaseError {\n  static message = /aa24/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('Signature provided for the User Operation is invalid.', {\n      cause,\n      metaMessages: [\n        'This could arise when:',\n        '- the `signature` for the User Operation is incorrectly computed, and unable to be verified by the Smart Account',\n      ].filter(Boolean) as string[],\n      name: 'UserOperationSignatureError',\n    })\n  }\n}\n\nexport type UserOperationPaymasterSignatureErrorType =\n  UserOperationPaymasterSignatureError & {\n    name: 'UserOperationPaymasterSignatureError'\n  }\nexport class UserOperationPaymasterSignatureError extends BaseError {\n  static message = /aa34/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('Signature provided for the User Operation is invalid.', {\n      cause,\n      metaMessages: [\n        'This could arise when:',\n        '- the `signature` for the User Operation is incorrectly computed, and unable to be verified by the Paymaster',\n      ].filter(Boolean) as string[],\n      name: 'UserOperationPaymasterSignatureError',\n    })\n  }\n}\n\nexport type UserOperationRejectedByEntryPointErrorType =\n  UserOperationRejectedByEntryPointError & {\n    code: -32500\n    name: 'UserOperationRejectedByEntryPointError'\n  }\nexport class UserOperationRejectedByEntryPointError extends BaseError {\n  static code = -32500\n\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super(\n      \"User Operation rejected by EntryPoint's `simulateValidation` during account creation or validation.\",\n      {\n        cause,\n        name: 'UserOperationRejectedByEntryPointError',\n      },\n    )\n  }\n}\n\nexport type UserOperationRejectedByPaymasterErrorType =\n  UserOperationRejectedByPaymasterError & {\n    code: -32501\n    name: 'UserOperationRejectedByPaymasterError'\n  }\nexport class UserOperationRejectedByPaymasterError extends BaseError {\n  static code = -32501\n\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super(\"User Operation rejected by Paymaster's `validatePaymasterUserOp`.\", {\n      cause,\n      name: 'UserOperationRejectedByPaymasterError',\n    })\n  }\n}\n\nexport type UserOperationRejectedByOpCodeErrorType =\n  UserOperationRejectedByOpCodeError & {\n    code: -32502\n    name: 'UserOperationRejectedByOpCodeError'\n  }\nexport class UserOperationRejectedByOpCodeError extends BaseError {\n  static code = -32502\n\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super('User Operation rejected with op code validation error.', {\n      cause,\n      name: 'UserOperationRejectedByOpCodeError',\n    })\n  }\n}\n\nexport type UserOperationOutOfTimeRangeErrorType =\n  UserOperationOutOfTimeRangeError & {\n    code: -32503\n    name: 'UserOperationOutOfTimeRangeError'\n  }\nexport class UserOperationOutOfTimeRangeError extends BaseError {\n  static code = -32503\n\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super(\n      'UserOperation out of time-range: either wallet or paymaster returned a time-range, and it is already expired (or will expire soon).',\n      {\n        cause,\n        name: 'UserOperationOutOfTimeRangeError',\n      },\n    )\n  }\n}\n\nexport type UnknownBundlerErrorType = UnknownBundlerError & {\n  name: 'UnknownBundlerError'\n}\nexport class UnknownBundlerError extends BaseError {\n  constructor({ cause }: { cause?: BaseError | undefined }) {\n    super(\n      `An error occurred while executing user operation: ${cause?.shortMessage}`,\n      {\n        cause,\n        name: 'UnknownBundlerError',\n      },\n    )\n  }\n}\n\nexport type VerificationGasLimitExceededErrorType =\n  VerificationGasLimitExceededError & {\n    name: 'VerificationGasLimitExceededError'\n  }\nexport class VerificationGasLimitExceededError extends BaseError {\n  static message = /aa40/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('User Operation verification gas limit exceeded.', {\n      cause,\n      metaMessages: [\n        'This could arise when:',\n        '- the gas used for verification exceeded the `verificationGasLimit`',\n      ].filter(Boolean) as string[],\n      name: 'VerificationGasLimitExceededError',\n    })\n  }\n}\n\nexport type VerificationGasLimitTooLowErrorType =\n  VerificationGasLimitTooLowError & {\n    name: 'VerificationGasLimitTooLowError'\n  }\nexport class VerificationGasLimitTooLowError extends BaseError {\n  static message = /aa41/\n  constructor({\n    cause,\n  }: {\n    cause?: BaseError | undefined\n  }) {\n    super('User Operation verification gas limit is too low.', {\n      cause,\n      metaMessages: [\n        'This could arise when:',\n        '- the `verificationGasLimit` is too low to verify the User Operation',\n      ].filter(Boolean) as string[],\n      name: 'VerificationGasLimitTooLowError',\n    })\n  }\n}\n","import { BaseError } from '../../errors/base.js'\nimport { prettyPrint } from '../../errors/transaction.js'\nimport type { Hash } from '../../types/misc.js'\nimport { formatGwei } from '../../utils/index.js'\nimport type { UserOperation } from '../types/userOperation.js'\n\nexport type UserOperationExecutionErrorType = UserOperationExecutionError & {\n  name: 'UserOperationExecutionError'\n}\nexport class UserOperationExecutionError extends BaseError {\n  override cause: BaseError\n\n  constructor(\n    cause: BaseError,\n    {\n      callData,\n      callGasLimit,\n      docsPath,\n      factory,\n      factoryData,\n      initCode,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      paymaster,\n      paymasterAndData,\n      paymasterData,\n      paymasterPostOpGasLimit,\n      paymasterVerificationGasLimit,\n      preVerificationGas,\n      sender,\n      signature,\n      verificationGasLimit,\n    }: UserOperation & {\n      docsPath?: string | undefined\n    },\n  ) {\n    const prettyArgs = prettyPrint({\n      callData,\n      callGasLimit,\n      factory,\n      factoryData,\n      initCode,\n      maxFeePerGas:\n        typeof maxFeePerGas !== 'undefined' &&\n        `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas:\n        typeof maxPriorityFeePerGas !== 'undefined' &&\n        `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n      paymaster,\n      paymasterAndData,\n      paymasterData,\n      paymasterPostOpGasLimit,\n      paymasterVerificationGasLimit,\n      preVerificationGas,\n      sender,\n      signature,\n      verificationGasLimit,\n    })\n\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [\n        ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n        'Request Arguments:',\n        prettyArgs,\n      ].filter(Boolean) as string[],\n      name: 'UserOperationExecutionError',\n    })\n    this.cause = cause\n  }\n}\n\nexport type UserOperationReceiptNotFoundErrorType =\n  UserOperationReceiptNotFoundError & {\n    name: 'UserOperationReceiptNotFoundError'\n  }\nexport class UserOperationReceiptNotFoundError extends BaseError {\n  constructor({ hash }: { hash: Hash }) {\n    super(\n      `User Operation receipt with hash \"${hash}\" could not be found. The User Operation may not have been processed yet.`,\n      { name: 'UserOperationReceiptNotFoundError' },\n    )\n  }\n}\n\nexport type UserOperationNotFoundErrorType = UserOperationNotFoundError & {\n  name: 'UserOperationNotFoundError'\n}\nexport class UserOperationNotFoundError extends BaseError {\n  constructor({ hash }: { hash: Hash }) {\n    super(`User Operation with hash \"${hash}\" could not be found.`, {\n      name: 'UserOperationNotFoundError',\n    })\n  }\n}\n\nexport type WaitForUserOperationReceiptTimeoutErrorType =\n  WaitForUserOperationReceiptTimeoutError & {\n    name: 'WaitForUserOperationReceiptTimeoutError'\n  }\nexport class WaitForUserOperationReceiptTimeoutError extends BaseError {\n  constructor({ hash }: { hash: Hash }) {\n    super(\n      `Timed out while waiting for User Operation with hash \"${hash}\" to be confirmed.`,\n      { name: 'WaitForUserOperationReceiptTimeoutError' },\n    )\n  }\n}\n","import type { BaseError } from '../../../errors/base.js'\nimport type { ExactPartial } from '../../../types/utils.js'\nimport {\n  AccountNotDeployedError,\n  type AccountNotDeployedErrorType,\n  ExecutionRevertedError,\n  type ExecutionRevertedErrorType,\n  FailedToSendToBeneficiaryError,\n  type FailedToSendToBeneficiaryErrorType,\n  GasValuesOverflowError,\n  type GasValuesOverflowErrorType,\n  HandleOpsOutOfGasError,\n  type HandleOpsOutOfGasErrorType,\n  InitCodeFailedError,\n  type InitCodeFailedErrorType,\n  InitCodeMustCreateSenderError,\n  type InitCodeMustCreateSenderErrorType,\n  InitCodeMustReturnSenderError,\n  type InitCodeMustReturnSenderErrorType,\n  InsufficientPrefundError,\n  type InsufficientPrefundErrorType,\n  InternalCallOnlyError,\n  type InternalCallOnlyErrorType,\n  InvalidAccountNonceError,\n  type InvalidAccountNonceErrorType,\n  InvalidAggregatorError,\n  type InvalidAggregatorErrorType,\n  InvalidBeneficiaryError,\n  type InvalidBeneficiaryErrorType,\n  InvalidFieldsError,\n  type InvalidFieldsErrorType,\n  InvalidPaymasterAndDataError,\n  type InvalidPaymasterAndDataErrorType,\n  PaymasterDepositTooLowError,\n  type PaymasterDepositTooLowErrorType,\n  PaymasterFunctionRevertedError,\n  type PaymasterFunctionRevertedErrorType,\n  PaymasterNotDeployedError,\n  type PaymasterNotDeployedErrorType,\n  PaymasterPostOpFunctionRevertedError,\n  type PaymasterPostOpFunctionRevertedErrorType,\n  PaymasterRateLimitError,\n  type PaymasterRateLimitErrorType,\n  PaymasterStakeTooLowError,\n  type PaymasterStakeTooLowErrorType,\n  SenderAlreadyConstructedError,\n  type SenderAlreadyConstructedErrorType,\n  SignatureCheckFailedError,\n  type SignatureCheckFailedErrorType,\n  SmartAccountFunctionRevertedError,\n  type SmartAccountFunctionRevertedErrorType,\n  UnknownBundlerError,\n  type UnknownBundlerErrorType,\n  UnsupportedSignatureAggregatorError,\n  type UnsupportedSignatureAggregatorErrorType,\n  UserOperationExpiredError,\n  type UserOperationExpiredErrorType,\n  UserOperationOutOfTimeRangeError,\n  type UserOperationOutOfTimeRangeErrorType,\n  UserOperationPaymasterExpiredError,\n  type UserOperationPaymasterExpiredErrorType,\n  UserOperationPaymasterSignatureError,\n  type UserOperationPaymasterSignatureErrorType,\n  UserOperationRejectedByEntryPointError,\n  type UserOperationRejectedByEntryPointErrorType,\n  UserOperationRejectedByOpCodeError,\n  type UserOperationRejectedByOpCodeErrorType,\n  UserOperationRejectedByPaymasterError,\n  type UserOperationRejectedByPaymasterErrorType,\n  UserOperationSignatureError,\n  type UserOperationSignatureErrorType,\n  VerificationGasLimitExceededError,\n  type VerificationGasLimitExceededErrorType,\n  VerificationGasLimitTooLowError,\n  type VerificationGasLimitTooLowErrorType,\n} from '../../errors/bundler.js'\nimport type { UserOperation } from '../../types/userOperation.js'\n\nconst bundlerErrors = [\n  ExecutionRevertedError,\n  InvalidFieldsError,\n  PaymasterDepositTooLowError,\n  PaymasterRateLimitError,\n  PaymasterStakeTooLowError,\n  SignatureCheckFailedError,\n  UnsupportedSignatureAggregatorError,\n  UserOperationOutOfTimeRangeError,\n  UserOperationRejectedByEntryPointError,\n  UserOperationRejectedByPaymasterError,\n  UserOperationRejectedByOpCodeError,\n]\n\nexport type GetBundlerErrorParameters = ExactPartial<UserOperation>\n\nexport type GetBundlerErrorReturnType =\n  | AccountNotDeployedErrorType\n  | ExecutionRevertedErrorType\n  | FailedToSendToBeneficiaryErrorType\n  | GasValuesOverflowErrorType\n  | HandleOpsOutOfGasErrorType\n  | InitCodeFailedErrorType\n  | InitCodeMustCreateSenderErrorType\n  | InitCodeMustReturnSenderErrorType\n  | InsufficientPrefundErrorType\n  | InternalCallOnlyErrorType\n  | InvalidAccountNonceErrorType\n  | InvalidAggregatorErrorType\n  | InvalidBeneficiaryErrorType\n  | InvalidFieldsErrorType\n  | InvalidPaymasterAndDataErrorType\n  | PaymasterDepositTooLowErrorType\n  | PaymasterFunctionRevertedErrorType\n  | PaymasterNotDeployedErrorType\n  | PaymasterPostOpFunctionRevertedErrorType\n  | PaymasterRateLimitErrorType\n  | PaymasterStakeTooLowErrorType\n  | SignatureCheckFailedErrorType\n  | SenderAlreadyConstructedErrorType\n  | SmartAccountFunctionRevertedErrorType\n  | UnsupportedSignatureAggregatorErrorType\n  | UserOperationOutOfTimeRangeErrorType\n  | UserOperationRejectedByEntryPointErrorType\n  | UserOperationRejectedByOpCodeErrorType\n  | UserOperationRejectedByPaymasterErrorType\n  | UnknownBundlerErrorType\n  | UserOperationExpiredErrorType\n  | UserOperationPaymasterExpiredErrorType\n  | UserOperationPaymasterSignatureErrorType\n  | UserOperationSignatureErrorType\n  | VerificationGasLimitExceededErrorType\n  | VerificationGasLimitTooLowErrorType\n\nexport function getBundlerError(\n  err: BaseError,\n  args: GetBundlerErrorParameters,\n): GetBundlerErrorReturnType {\n  const message = (err.details || '').toLowerCase()\n\n  if (AccountNotDeployedError.message.test(message))\n    return new AccountNotDeployedError({\n      cause: err,\n    }) as any\n  if (FailedToSendToBeneficiaryError.message.test(message))\n    return new FailedToSendToBeneficiaryError({\n      cause: err,\n    }) as any\n  if (GasValuesOverflowError.message.test(message))\n    return new GasValuesOverflowError({\n      cause: err,\n    }) as any\n  if (HandleOpsOutOfGasError.message.test(message))\n    return new HandleOpsOutOfGasError({\n      cause: err,\n    }) as any\n  if (InitCodeFailedError.message.test(message))\n    return new InitCodeFailedError({\n      cause: err,\n      factory: args.factory,\n      factoryData: args.factoryData,\n      initCode: args.initCode,\n    }) as any\n  if (InitCodeMustCreateSenderError.message.test(message))\n    return new InitCodeMustCreateSenderError({\n      cause: err,\n      factory: args.factory,\n      factoryData: args.factoryData,\n      initCode: args.initCode,\n    }) as any\n  if (InitCodeMustReturnSenderError.message.test(message))\n    return new InitCodeMustReturnSenderError({\n      cause: err,\n      factory: args.factory,\n      factoryData: args.factoryData,\n      initCode: args.initCode,\n      sender: args.sender,\n    }) as any\n  if (InsufficientPrefundError.message.test(message))\n    return new InsufficientPrefundError({\n      cause: err,\n    }) as any\n  if (InternalCallOnlyError.message.test(message))\n    return new InternalCallOnlyError({\n      cause: err,\n    }) as any\n  if (InvalidAccountNonceError.message.test(message))\n    return new InvalidAccountNonceError({\n      cause: err,\n      nonce: args.nonce,\n    }) as any\n  if (InvalidAggregatorError.message.test(message))\n    return new InvalidAggregatorError({\n      cause: err,\n    }) as any\n  if (InvalidBeneficiaryError.message.test(message))\n    return new InvalidBeneficiaryError({\n      cause: err,\n    }) as any\n  if (InvalidPaymasterAndDataError.message.test(message))\n    return new InvalidPaymasterAndDataError({\n      cause: err,\n    }) as any\n  if (PaymasterDepositTooLowError.message.test(message))\n    return new PaymasterDepositTooLowError({\n      cause: err,\n    }) as any\n  if (PaymasterFunctionRevertedError.message.test(message))\n    return new PaymasterFunctionRevertedError({\n      cause: err,\n    }) as any\n  if (PaymasterNotDeployedError.message.test(message))\n    return new PaymasterNotDeployedError({\n      cause: err,\n    }) as any\n  if (PaymasterPostOpFunctionRevertedError.message.test(message))\n    return new PaymasterPostOpFunctionRevertedError({\n      cause: err,\n    }) as any\n  if (SmartAccountFunctionRevertedError.message.test(message))\n    return new SmartAccountFunctionRevertedError({\n      cause: err,\n    }) as any\n  if (SenderAlreadyConstructedError.message.test(message))\n    return new SenderAlreadyConstructedError({\n      cause: err,\n      factory: args.factory,\n      factoryData: args.factoryData,\n      initCode: args.initCode,\n    }) as any\n  if (UserOperationExpiredError.message.test(message))\n    return new UserOperationExpiredError({\n      cause: err,\n    }) as any\n  if (UserOperationPaymasterExpiredError.message.test(message))\n    return new UserOperationPaymasterExpiredError({\n      cause: err,\n    }) as any\n  if (UserOperationPaymasterSignatureError.message.test(message))\n    return new UserOperationPaymasterSignatureError({\n      cause: err,\n    }) as any\n  if (UserOperationSignatureError.message.test(message))\n    return new UserOperationSignatureError({\n      cause: err,\n    }) as any\n  if (VerificationGasLimitExceededError.message.test(message))\n    return new VerificationGasLimitExceededError({\n      cause: err,\n    }) as any\n  if (VerificationGasLimitTooLowError.message.test(message))\n    return new VerificationGasLimitTooLowError({\n      cause: err,\n    }) as any\n\n  const error = err.walk((e) =>\n    bundlerErrors.some((error) => error.code === (e as { code: number }).code),\n  ) as BaseError & { code: number; data: any }\n\n  if (error) {\n    if (error.code === ExecutionRevertedError.code)\n      return new ExecutionRevertedError({\n        cause: err,\n        data: error.data,\n        message: error.details,\n      }) as any\n    if (error.code === InvalidFieldsError.code)\n      return new InvalidFieldsError({\n        cause: err,\n      }) as any\n    if (error.code === PaymasterDepositTooLowError.code)\n      return new PaymasterDepositTooLowError({\n        cause: err,\n      }) as any\n    if (error.code === PaymasterRateLimitError.code)\n      return new PaymasterRateLimitError({\n        cause: err,\n      }) as any\n    if (error.code === PaymasterStakeTooLowError.code)\n      return new PaymasterStakeTooLowError({\n        cause: err,\n      }) as any\n    if (error.code === SignatureCheckFailedError.code)\n      return new SignatureCheckFailedError({\n        cause: err,\n      }) as any\n    if (error.code === UnsupportedSignatureAggregatorError.code)\n      return new UnsupportedSignatureAggregatorError({\n        cause: err,\n      }) as any\n    if (error.code === UserOperationOutOfTimeRangeError.code)\n      return new UserOperationOutOfTimeRangeError({\n        cause: err,\n      }) as any\n    if (error.code === UserOperationRejectedByEntryPointError.code)\n      return new UserOperationRejectedByEntryPointError({\n        cause: err,\n      }) as any\n    if (error.code === UserOperationRejectedByPaymasterError.code)\n      return new UserOperationRejectedByPaymasterError({\n        cause: err,\n      }) as any\n    if (error.code === UserOperationRejectedByOpCodeError.code)\n      return new UserOperationRejectedByOpCodeError({\n        cause: err,\n      }) as any\n  }\n\n  return new UnknownBundlerError({\n    cause: err,\n  }) as any\n}\n","import type { Abi, Address } from 'abitype'\nimport { BaseError } from '../../../errors/base.js'\nimport {\n  ContractFunctionExecutionError,\n  ContractFunctionRevertedError,\n  ContractFunctionZeroDataError,\n} from '../../../errors/contract.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Call } from '../../../types/calls.js'\nimport type { Hex } from '../../../types/misc.js'\nimport { decodeErrorResult } from '../../../utils/abi/decodeErrorResult.js'\nimport type { GetContractErrorReturnType } from '../../../utils/errors/getContractError.js'\nimport { ExecutionRevertedError } from '../../errors/bundler.js'\nimport {\n  UserOperationExecutionError,\n  type UserOperationExecutionErrorType,\n} from '../../errors/userOperation.js'\nimport type { UserOperation } from '../../types/userOperation.js'\nimport {\n  type GetBundlerErrorParameters,\n  getBundlerError,\n} from './getBundlerError.js'\n\ntype GetNodeErrorReturnType = ErrorType\n\nexport type GetUserOperationErrorParameters = UserOperation & {\n  calls?: readonly unknown[] | undefined\n  docsPath?: string | undefined\n}\n\nexport type GetUserOperationErrorReturnType<cause = ErrorType> = Omit<\n  UserOperationExecutionErrorType,\n  'cause'\n> & { cause: cause | GetNodeErrorReturnType }\n\nexport type GetUserOperationErrorErrorType = ErrorType\n\nexport function getUserOperationError<err extends ErrorType<string>>(\n  err: err,\n  { calls, docsPath, ...args }: GetUserOperationErrorParameters,\n): GetUserOperationErrorReturnType<err> {\n  const cause = (() => {\n    const cause = getBundlerError(\n      err as {} as BaseError,\n      args as GetBundlerErrorParameters,\n    )\n    if (calls && cause instanceof ExecutionRevertedError) {\n      const revertData = getRevertData(cause)\n      const contractCalls = calls?.filter(\n        (call: any) => call.abi,\n      ) as readonly Call[]\n      if (revertData && contractCalls.length > 0)\n        return getContractError({ calls: contractCalls, revertData })\n    }\n    return cause\n  })()\n  return new UserOperationExecutionError(cause, {\n    docsPath,\n    ...args,\n  }) as GetUserOperationErrorReturnType<err>\n}\n\n/////////////////////////////////////////////////////////////////////////////////\n\nfunction getRevertData(error: BaseError) {\n  let revertData: Hex | undefined\n  error.walk((e) => {\n    const error = e as any\n    if (\n      typeof error.data === 'string' ||\n      typeof error.data?.revertData === 'string' ||\n      (!(error instanceof BaseError) && typeof error.message === 'string')\n    ) {\n      const match = (\n        error.data?.revertData ||\n        error.data ||\n        error.message\n      ).match?.(/(0x[A-Za-z0-9]*)/)\n      if (match) {\n        revertData = match[1]\n        return true\n      }\n    }\n    return false\n  })\n  return revertData\n}\n\nfunction getContractError(parameters: {\n  calls: readonly Call[]\n  revertData: Hex\n}) {\n  const { calls, revertData } = parameters\n\n  const { abi, functionName, args, to } = (() => {\n    const contractCalls = calls?.filter((call) =>\n      Boolean(call.abi),\n    ) as readonly Call[]\n\n    if (contractCalls.length === 1) return contractCalls[0]\n\n    const compatContractCalls = contractCalls.filter((call) => {\n      try {\n        return Boolean(\n          decodeErrorResult({\n            abi: call.abi,\n            data: revertData,\n          }),\n        )\n      } catch {\n        return false\n      }\n    })\n    if (compatContractCalls.length === 1) return compatContractCalls[0]\n\n    return {\n      abi: [],\n      functionName: contractCalls.reduce(\n        (acc, call) => `${acc ? `${acc} | ` : ''}${call.functionName}`,\n        '',\n      ),\n      args: undefined,\n      to: undefined,\n    }\n  })() as {\n    abi: Abi\n    functionName: string\n    args: unknown[]\n    to: Address\n  }\n\n  const cause = (() => {\n    if (revertData === '0x')\n      return new ContractFunctionZeroDataError({ functionName })\n    return new ContractFunctionRevertedError({\n      abi,\n      data: revertData,\n      functionName,\n    })\n  })()\n  return new ContractFunctionExecutionError(cause as BaseError, {\n    abi,\n    args,\n    contractAddress: to,\n    functionName,\n  }) as GetContractErrorReturnType\n}\n","import type { ErrorType } from '../../../errors/utils.js'\nimport type { SignedAuthorization } from '../../../types/authorization.js'\nimport type { ExactPartial } from '../../../types/utils.js'\nimport { numberToHex } from '../../../utils/encoding/toHex.js'\nimport { pad } from '../../../utils/index.js'\nimport type { RpcUserOperation } from '../../types/rpc.js'\nimport type { UserOperation } from '../../types/userOperation.js'\n\nexport type FormatUserOperationRequestErrorType = ErrorType\n\nexport function formatUserOperationRequest(\n  request: ExactPartial<UserOperation>,\n) {\n  const rpcRequest = {} as RpcUserOperation\n\n  if (typeof request.callData !== 'undefined')\n    rpcRequest.callData = request.callData\n  if (typeof request.callGasLimit !== 'undefined')\n    rpcRequest.callGasLimit = numberToHex(request.callGasLimit)\n  if (typeof request.factory !== 'undefined')\n    rpcRequest.factory = request.factory\n  if (typeof request.factoryData !== 'undefined')\n    rpcRequest.factoryData = request.factoryData\n  if (typeof request.initCode !== 'undefined')\n    rpcRequest.initCode = request.initCode\n  if (typeof request.maxFeePerGas !== 'undefined')\n    rpcRequest.maxFeePerGas = numberToHex(request.maxFeePerGas)\n  if (typeof request.maxPriorityFeePerGas !== 'undefined')\n    rpcRequest.maxPriorityFeePerGas = numberToHex(request.maxPriorityFeePerGas)\n  if (typeof request.nonce !== 'undefined')\n    rpcRequest.nonce = numberToHex(request.nonce)\n  if (typeof request.paymaster !== 'undefined')\n    rpcRequest.paymaster = request.paymaster\n  if (typeof request.paymasterAndData !== 'undefined')\n    rpcRequest.paymasterAndData = request.paymasterAndData || '0x'\n  if (typeof request.paymasterData !== 'undefined')\n    rpcRequest.paymasterData = request.paymasterData\n  if (typeof request.paymasterPostOpGasLimit !== 'undefined')\n    rpcRequest.paymasterPostOpGasLimit = numberToHex(\n      request.paymasterPostOpGasLimit,\n    )\n  if (typeof request.paymasterVerificationGasLimit !== 'undefined')\n    rpcRequest.paymasterVerificationGasLimit = numberToHex(\n      request.paymasterVerificationGasLimit,\n    )\n  if (typeof request.preVerificationGas !== 'undefined')\n    rpcRequest.preVerificationGas = numberToHex(request.preVerificationGas)\n  if (typeof request.sender !== 'undefined') rpcRequest.sender = request.sender\n  if (typeof request.signature !== 'undefined')\n    rpcRequest.signature = request.signature\n  if (typeof request.verificationGasLimit !== 'undefined')\n    rpcRequest.verificationGasLimit = numberToHex(request.verificationGasLimit)\n  if (typeof request.authorization !== 'undefined')\n    rpcRequest.eip7702Auth = formatAuthorization(request.authorization)\n\n  return rpcRequest\n}\n\nfunction formatAuthorization(authorization: SignedAuthorization) {\n  return {\n    address: authorization.address,\n    chainId: numberToHex(authorization.chainId),\n    nonce: numberToHex(authorization.nonce),\n    r: authorization.r\n      ? numberToHex(BigInt(authorization.r), { size: 32 })\n      : pad('0x', { size: 32 }),\n    s: authorization.s\n      ? numberToHex(BigInt(authorization.s), { size: 32 })\n      : pad('0x', { size: 32 }),\n    yParity: authorization.yParity\n      ? numberToHex(authorization.yParity, { size: 1 })\n      : pad('0x', { size: 32 }),\n  }\n}\n","import type { Address } from 'abitype'\nimport type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Hex } from '../../../types/misc.js'\nimport type { OneOf, PartialBy, Prettify } from '../../../types/utils.js'\nimport { hexToBigInt } from '../../../utils/encoding/fromHex.js'\nimport { numberToHex } from '../../../utils/encoding/toHex.js'\nimport type { UserOperation } from '../../types/userOperation.js'\nimport {\n  type FormatUserOperationRequestErrorType,\n  formatUserOperationRequest,\n} from '../../utils/formatters/userOperationRequest.js'\n\nexport type GetPaymasterDataParameters = OneOf<\n  | PartialBy<\n      Pick<\n        UserOperation<'0.6'>,\n        | 'callData'\n        | 'callGasLimit'\n        | 'initCode'\n        | 'maxFeePerGas'\n        | 'maxPriorityFeePerGas'\n        | 'nonce'\n        | 'sender'\n        | 'preVerificationGas'\n        | 'verificationGasLimit'\n      >,\n      | 'callGasLimit'\n      | 'initCode'\n      | 'maxFeePerGas'\n      | 'maxPriorityFeePerGas'\n      | 'preVerificationGas'\n      | 'verificationGasLimit'\n    >\n  | PartialBy<\n      Pick<\n        UserOperation<'0.7'>,\n        | 'callData'\n        | 'callGasLimit'\n        | 'factory'\n        | 'factoryData'\n        | 'maxFeePerGas'\n        | 'maxPriorityFeePerGas'\n        | 'nonce'\n        | 'sender'\n        | 'preVerificationGas'\n        | 'verificationGasLimit'\n        | 'paymasterPostOpGasLimit'\n        | 'paymasterVerificationGasLimit'\n      >,\n      | 'callGasLimit'\n      | 'factory'\n      | 'factoryData'\n      | 'maxFeePerGas'\n      | 'maxPriorityFeePerGas'\n      | 'preVerificationGas'\n      | 'verificationGasLimit'\n    >\n  | PartialBy<\n      Pick<\n        UserOperation<'0.8'>,\n        | 'callData'\n        | 'callGasLimit'\n        | 'factory'\n        | 'factoryData'\n        | 'maxFeePerGas'\n        | 'maxPriorityFeePerGas'\n        | 'nonce'\n        | 'sender'\n        | 'preVerificationGas'\n        | 'verificationGasLimit'\n        | 'paymasterPostOpGasLimit'\n        | 'paymasterVerificationGasLimit'\n      >,\n      | 'callGasLimit'\n      | 'factory'\n      | 'factoryData'\n      | 'maxFeePerGas'\n      | 'maxPriorityFeePerGas'\n      | 'preVerificationGas'\n      | 'verificationGasLimit'\n    >\n> & {\n  context?: unknown | undefined\n  chainId: number\n  entryPointAddress: Address\n}\n\nexport type GetPaymasterDataReturnType = Prettify<\n  OneOf<\n    | { paymasterAndData: Hex }\n    | {\n        paymaster: Address\n        paymasterData: Hex\n        paymasterPostOpGasLimit?: bigint | undefined\n        paymasterVerificationGasLimit?: bigint | undefined\n      }\n  >\n>\n\nexport type GetPaymasterDataErrorType =\n  | FormatUserOperationRequestErrorType\n  | ErrorType\n\n/**\n * Retrieves paymaster-related User Operation properties to be used for sending the User Operation.\n *\n * - Docs: https://viem.sh/account-abstraction/actions/paymaster/getPaymasterData\n *\n * @param client - Client to use\n * @param parameters - {@link GetPaymasterDataParameters}\n * @returns Paymaster-related User Operation properties. {@link GetPaymasterDataReturnType}\n *\n * @example\n * import { http } from 'viem'\n * import { createPaymasterClient, getPaymasterData } from 'viem/account-abstraction'\n *\n * const paymasterClient = createPaymasterClient({\n *   transport: http('https://...'),\n * })\n *\n * const userOperation = { ... }\n *\n * const values = await getPaymasterData(paymasterClient, {\n *   chainId: 1,\n *   entryPointAddress: '0x...',\n *   ...userOperation,\n * })\n */\nexport async function getPaymasterData(\n  client: Client<Transport>,\n  parameters: GetPaymasterDataParameters,\n): Promise<GetPaymasterDataReturnType> {\n  const { chainId, entryPointAddress, context, ...userOperation } = parameters\n  const request = formatUserOperationRequest(userOperation)\n  const { paymasterPostOpGasLimit, paymasterVerificationGasLimit, ...rest } =\n    await client.request({\n      method: 'pm_getPaymasterData',\n      params: [\n        {\n          ...request,\n          callGasLimit: request.callGasLimit ?? '0x0',\n          verificationGasLimit: request.verificationGasLimit ?? '0x0',\n          preVerificationGas: request.preVerificationGas ?? '0x0',\n        },\n        entryPointAddress,\n        numberToHex(chainId),\n        context,\n      ],\n    })\n  return {\n    ...rest,\n    ...(paymasterPostOpGasLimit && {\n      paymasterPostOpGasLimit: hexToBigInt(paymasterPostOpGasLimit),\n    }),\n    ...(paymasterVerificationGasLimit && {\n      paymasterVerificationGasLimit: hexToBigInt(paymasterVerificationGasLimit),\n    }),\n  } as unknown as GetPaymasterDataReturnType\n}\n","import type { Address } from 'abitype'\nimport type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Hex } from '../../../types/misc.js'\nimport type { OneOf, PartialBy, Prettify } from '../../../types/utils.js'\nimport { hexToBigInt } from '../../../utils/encoding/fromHex.js'\nimport { numberToHex } from '../../../utils/encoding/toHex.js'\nimport type { UserOperation } from '../../types/userOperation.js'\nimport {\n  type FormatUserOperationRequestErrorType,\n  formatUserOperationRequest,\n} from '../../utils/formatters/userOperationRequest.js'\n\nexport type GetPaymasterStubDataParameters = OneOf<\n  | PartialBy<\n      Pick<\n        UserOperation<'0.6'>,\n        | 'callData'\n        | 'callGasLimit'\n        | 'initCode'\n        | 'maxFeePerGas'\n        | 'maxPriorityFeePerGas'\n        | 'nonce'\n        | 'sender'\n        | 'preVerificationGas'\n        | 'verificationGasLimit'\n      >,\n      | 'callGasLimit'\n      | 'initCode'\n      | 'maxFeePerGas'\n      | 'maxPriorityFeePerGas'\n      | 'preVerificationGas'\n      | 'verificationGasLimit'\n    >\n  | PartialBy<\n      Pick<\n        UserOperation<'0.7'>,\n        | 'callData'\n        | 'callGasLimit'\n        | 'factory'\n        | 'factoryData'\n        | 'maxFeePerGas'\n        | 'maxPriorityFeePerGas'\n        | 'nonce'\n        | 'sender'\n        | 'preVerificationGas'\n        | 'verificationGasLimit'\n      >,\n      | 'callGasLimit'\n      | 'factory'\n      | 'factoryData'\n      | 'maxFeePerGas'\n      | 'maxPriorityFeePerGas'\n      | 'preVerificationGas'\n      | 'verificationGasLimit'\n    >\n> & {\n  context?: unknown | undefined\n  chainId: number\n  entryPointAddress: Address\n}\n\nexport type GetPaymasterStubDataReturnType = Prettify<\n  OneOf<\n    | { paymasterAndData: Hex }\n    | {\n        paymaster: Address\n        paymasterData: Hex\n        paymasterVerificationGasLimit?: bigint | undefined\n        paymasterPostOpGasLimit: bigint\n      }\n  > & {\n    sponsor?: { name: string; icon?: string | undefined } | undefined\n    isFinal?: boolean | undefined\n  }\n>\n\nexport type GetPaymasterStubDataErrorType =\n  | FormatUserOperationRequestErrorType\n  | ErrorType\n\n/**\n * Retrieves paymaster-related User Operation properties to be used for gas estimation.\n *\n * - Docs: https://viem.sh/account-abstraction/actions/paymaster/getPaymasterStubData\n *\n * @param client - Client to use\n * @param parameters - {@link GetPaymasterStubDataParameters}\n * @returns Paymaster-related User Operation properties. {@link GetPaymasterStubDataReturnType}\n *\n * @example\n * import { http } from 'viem'\n * import { createPaymasterClient, getPaymasterStubData } from 'viem/account-abstraction'\n *\n * const paymasterClient = createPaymasterClient({\n *   transport: http('https://...'),\n * })\n *\n * const userOperation = { ... }\n *\n * const values = await getPaymasterStubData(paymasterClient, {\n *   chainId: 1,\n *   entryPointAddress: '0x...',\n *   ...userOperation,\n * })\n */\nexport async function getPaymasterStubData(\n  client: Client<Transport>,\n  parameters: GetPaymasterStubDataParameters,\n): Promise<GetPaymasterStubDataReturnType> {\n  const { chainId, entryPointAddress, context, ...userOperation } = parameters\n  const request = formatUserOperationRequest(userOperation)\n  const { paymasterPostOpGasLimit, paymasterVerificationGasLimit, ...rest } =\n    await client.request({\n      method: 'pm_getPaymasterStubData',\n      params: [\n        {\n          ...request,\n          callGasLimit: request.callGasLimit ?? '0x0',\n          verificationGasLimit: request.verificationGasLimit ?? '0x0',\n          preVerificationGas: request.preVerificationGas ?? '0x0',\n        },\n        entryPointAddress,\n        numberToHex(chainId),\n        context,\n      ],\n    })\n  return {\n    ...rest,\n    ...(paymasterPostOpGasLimit && {\n      paymasterPostOpGasLimit: hexToBigInt(paymasterPostOpGasLimit),\n    }),\n    ...(paymasterVerificationGasLimit && {\n      paymasterVerificationGasLimit: hexToBigInt(paymasterVerificationGasLimit),\n    }),\n  } as unknown as GetPaymasterStubDataReturnType\n}\n","import type { Address, Narrow } from 'abitype'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../../accounts/utils/parseAccount.js'\nimport { prepareAuthorization } from '../../../actions/index.js'\nimport {\n  type EstimateFeesPerGasErrorType,\n  estimateFeesPerGas,\n} from '../../../actions/public/estimateFeesPerGas.js'\nimport { getChainId as getChainId_ } from '../../../actions/public/getChainId.js'\nimport type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport { AccountNotFoundError } from '../../../errors/account.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { SignedAuthorization } from '../../../types/authorization.js'\nimport type { Call, Calls } from '../../../types/calls.js'\nimport type { Chain } from '../../../types/chain.js'\nimport type { Hex } from '../../../types/misc.js'\nimport type { StateOverride } from '../../../types/stateOverride.js'\nimport type {\n  Assign,\n  OneOf,\n  Prettify,\n  UnionOmit,\n} from '../../../types/utils.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../../utils/abi/encodeFunctionData.js'\nimport { type ConcatErrorType, concat } from '../../../utils/data/concat.js'\nimport { getAction } from '../../../utils/getAction.js'\nimport type { SmartAccount } from '../../accounts/types.js'\nimport type { BundlerClient } from '../../clients/createBundlerClient.js'\nimport type { PaymasterActions } from '../../clients/decorators/paymaster.js'\nimport type {\n  DeriveSmartAccount,\n  GetSmartAccountParameter,\n} from '../../types/account.js'\nimport type {\n  DeriveEntryPointVersion,\n  EntryPointVersion,\n} from '../../types/entryPointVersion.js'\nimport type {\n  UserOperation,\n  UserOperationRequest,\n} from '../../types/userOperation.js'\nimport {\n  type GetPaymasterDataErrorType,\n  getPaymasterData as getPaymasterData_,\n} from '../paymaster/getPaymasterData.js'\nimport {\n  type GetPaymasterStubDataErrorType,\n  getPaymasterStubData as getPaymasterStubData_,\n} from '../paymaster/getPaymasterStubData.js'\nimport {\n  type EstimateUserOperationGasParameters,\n  estimateUserOperationGas,\n} from './estimateUserOperationGas.js'\n\nconst defaultParameters = [\n  'factory',\n  'fees',\n  'gas',\n  'paymaster',\n  'nonce',\n  'signature',\n  'authorization',\n] as const\n\nexport type PrepareUserOperationParameterType =\n  | 'factory'\n  | 'fees'\n  | 'gas'\n  | 'paymaster'\n  | 'nonce'\n  | 'signature'\n  | 'authorization'\n\ntype FactoryProperties<\n  entryPointVersion extends EntryPointVersion = EntryPointVersion,\n> =\n  | (entryPointVersion extends '0.8'\n      ? {\n          factory: UserOperation['factory']\n          factoryData: UserOperation['factoryData']\n        }\n      : never)\n  | (entryPointVersion extends '0.7'\n      ? {\n          factory: UserOperation['factory']\n          factoryData: UserOperation['factoryData']\n        }\n      : never)\n  | (entryPointVersion extends '0.6'\n      ? {\n          initCode: UserOperation['initCode']\n        }\n      : never)\n\ntype GasProperties<\n  entryPointVersion extends EntryPointVersion = EntryPointVersion,\n> =\n  | (entryPointVersion extends '0.8'\n      ? {\n          callGasLimit: UserOperation['callGasLimit']\n          preVerificationGas: UserOperation['preVerificationGas']\n          verificationGasLimit: UserOperation['verificationGasLimit']\n          paymasterPostOpGasLimit: UserOperation['paymasterPostOpGasLimit']\n          paymasterVerificationGasLimit: UserOperation['paymasterVerificationGasLimit']\n        }\n      : never)\n  | (entryPointVersion extends '0.7'\n      ? {\n          callGasLimit: UserOperation['callGasLimit']\n          preVerificationGas: UserOperation['preVerificationGas']\n          verificationGasLimit: UserOperation['verificationGasLimit']\n          paymasterPostOpGasLimit: UserOperation['paymasterPostOpGasLimit']\n          paymasterVerificationGasLimit: UserOperation['paymasterVerificationGasLimit']\n        }\n      : never)\n  | (entryPointVersion extends '0.6'\n      ? {\n          callGasLimit: UserOperation['callGasLimit']\n          preVerificationGas: UserOperation['preVerificationGas']\n          verificationGasLimit: UserOperation['verificationGasLimit']\n        }\n      : never)\n\ntype FeeProperties = {\n  maxFeePerGas: UserOperation['maxFeePerGas']\n  maxPriorityFeePerGas: UserOperation['maxPriorityFeePerGas']\n}\n\ntype NonceProperties = {\n  nonce: UserOperation['nonce']\n}\n\ntype PaymasterProperties<\n  entryPointVersion extends EntryPointVersion = EntryPointVersion,\n> =\n  | (entryPointVersion extends '0.8'\n      ? {\n          paymaster: UserOperation['paymaster']\n          paymasterData: UserOperation['paymasterData']\n          paymasterPostOpGasLimit: UserOperation['paymasterPostOpGasLimit']\n          paymasterVerificationGasLimit: UserOperation['paymasterVerificationGasLimit']\n        }\n      : never)\n  | (entryPointVersion extends '0.7'\n      ? {\n          paymaster: UserOperation['paymaster']\n          paymasterData: UserOperation['paymasterData']\n          paymasterPostOpGasLimit: UserOperation['paymasterPostOpGasLimit']\n          paymasterVerificationGasLimit: UserOperation['paymasterVerificationGasLimit']\n        }\n      : never)\n  | (entryPointVersion extends '0.6'\n      ? {\n          paymasterAndData: UserOperation['paymasterAndData']\n        }\n      : never)\n\ntype SignatureProperties = {\n  signature: UserOperation['signature']\n}\n\ntype AuthorizationProperties = {\n  authorization: UserOperation['authorization']\n}\n\nexport type PrepareUserOperationRequest<\n  account extends SmartAccount | undefined = SmartAccount | undefined,\n  accountOverride extends SmartAccount | undefined = SmartAccount | undefined,\n  calls extends readonly unknown[] = readonly unknown[],\n  //\n  _derivedAccount extends SmartAccount | undefined = DeriveSmartAccount<\n    account,\n    accountOverride\n  >,\n  _derivedVersion extends\n    EntryPointVersion = DeriveEntryPointVersion<_derivedAccount>,\n> = Assign<\n  UserOperationRequest<_derivedVersion>,\n  OneOf<{ calls: Calls<Narrow<calls>> } | { callData: Hex }> & {\n    parameters?: readonly PrepareUserOperationParameterType[] | undefined\n    paymaster?:\n      | Address\n      | true\n      | {\n          /** Retrieves paymaster-related User Operation properties to be used for sending the User Operation. */\n          getPaymasterData?: PaymasterActions['getPaymasterData'] | undefined\n          /** Retrieves paymaster-related User Operation properties to be used for gas estimation. */\n          getPaymasterStubData?:\n            | PaymasterActions['getPaymasterStubData']\n            | undefined\n        }\n      | undefined\n    /** Paymaster context to pass to `getPaymasterData` and `getPaymasterStubData` calls. */\n    paymasterContext?: unknown | undefined\n    /** State overrides for the User Operation call. */\n    stateOverride?: StateOverride | undefined\n  }\n>\n\nexport type PrepareUserOperationParameters<\n  account extends SmartAccount | undefined = SmartAccount | undefined,\n  accountOverride extends SmartAccount | undefined = SmartAccount | undefined,\n  calls extends readonly unknown[] = readonly unknown[],\n  request extends PrepareUserOperationRequest<\n    account,\n    accountOverride,\n    calls\n  > = PrepareUserOperationRequest<account, accountOverride, calls>,\n> = request & GetSmartAccountParameter<account, accountOverride>\n\nexport type PrepareUserOperationReturnType<\n  account extends SmartAccount | undefined = SmartAccount | undefined,\n  accountOverride extends SmartAccount | undefined = SmartAccount | undefined,\n  calls extends readonly unknown[] = readonly unknown[],\n  request extends PrepareUserOperationRequest<\n    account,\n    accountOverride,\n    calls\n  > = PrepareUserOperationRequest<account, accountOverride, calls>,\n  //\n  _parameters extends\n    PrepareUserOperationParameterType = request['parameters'] extends readonly PrepareUserOperationParameterType[]\n    ? request['parameters'][number]\n    : (typeof defaultParameters)[number],\n  _derivedAccount extends SmartAccount | undefined = DeriveSmartAccount<\n    account,\n    accountOverride\n  >,\n  _derivedVersion extends\n    EntryPointVersion = DeriveEntryPointVersion<_derivedAccount>,\n> = Prettify<\n  UnionOmit<request, 'calls' | 'parameters'> & {\n    callData: Hex\n    paymasterAndData: _derivedVersion extends '0.6' ? Hex : undefined\n    sender: UserOperation['sender']\n  } & (Extract<_parameters, 'authorization'> extends never\n      ? {}\n      : AuthorizationProperties) &\n    (Extract<_parameters, 'factory'> extends never\n      ? {}\n      : FactoryProperties<_derivedVersion>) &\n    (Extract<_parameters, 'nonce'> extends never ? {} : NonceProperties) &\n    (Extract<_parameters, 'fees'> extends never ? {} : FeeProperties) &\n    (Extract<_parameters, 'gas'> extends never\n      ? {}\n      : GasProperties<_derivedVersion>) &\n    (Extract<_parameters, 'paymaster'> extends never\n      ? {}\n      : PaymasterProperties<_derivedVersion>) &\n    (Extract<_parameters, 'signature'> extends never ? {} : SignatureProperties)\n>\n\nexport type PrepareUserOperationErrorType =\n  | ParseAccountErrorType\n  | GetPaymasterStubDataErrorType\n  | GetPaymasterDataErrorType\n  | EncodeFunctionDataErrorType\n  | ConcatErrorType\n  | EstimateFeesPerGasErrorType\n  | ErrorType\n\n/**\n * Prepares a User Operation and fills in missing properties.\n *\n * - Docs: https://viem.sh/actions/bundler/prepareUserOperation\n *\n * @param args - {@link PrepareUserOperationParameters}\n * @returns The User Operation. {@link PrepareUserOperationReturnType}\n *\n * @example\n * import { createBundlerClient, http } from 'viem'\n * import { toSmartAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { prepareUserOperation } from 'viem/actions'\n *\n * const account = await toSmartAccount({ ... })\n *\n * const client = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const request = await prepareUserOperation(client, {\n *   account,\n *   calls: [{ to: '0x...', value: parseEther('1') }],\n * })\n */\nexport async function prepareUserOperation<\n  account extends SmartAccount | undefined,\n  const calls extends readonly unknown[],\n  const request extends PrepareUserOperationRequest<\n    account,\n    accountOverride,\n    calls\n  >,\n  accountOverride extends SmartAccount | undefined = undefined,\n>(\n  client: Client<Transport, Chain | undefined, account>,\n  parameters_: PrepareUserOperationParameters<\n    account,\n    accountOverride,\n    calls,\n    request\n  >,\n): Promise<\n  PrepareUserOperationReturnType<account, accountOverride, calls, request>\n> {\n  const parameters = parameters_ as PrepareUserOperationParameters\n  const {\n    account: account_ = client.account,\n    parameters: properties = defaultParameters,\n    stateOverride,\n  } = parameters\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Assert that an Account is defined.\n  ////////////////////////////////////////////////////////////////////////////////\n\n  if (!account_) throw new AccountNotFoundError()\n  const account = parseAccount(account_)\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Declare typed Bundler Client.\n  ////////////////////////////////////////////////////////////////////////////////\n\n  const bundlerClient = client as unknown as BundlerClient\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Declare Paymaster properties.\n  ////////////////////////////////////////////////////////////////////////////////\n\n  const paymaster = parameters.paymaster ?? bundlerClient?.paymaster\n  const paymasterAddress = typeof paymaster === 'string' ? paymaster : undefined\n  const { getPaymasterStubData, getPaymasterData } = (() => {\n    // If `paymaster: true`, we will assume the Bundler Client supports Paymaster Actions.\n    if (paymaster === true)\n      return {\n        getPaymasterStubData: (parameters: any) =>\n          getAction(\n            bundlerClient,\n            getPaymasterStubData_,\n            'getPaymasterStubData',\n          )(parameters),\n        getPaymasterData: (parameters: any) =>\n          getAction(\n            bundlerClient,\n            getPaymasterData_,\n            'getPaymasterData',\n          )(parameters),\n      }\n\n    // If Actions are passed to `paymaster` (via Paymaster Client or directly), we will use them.\n    if (typeof paymaster === 'object') {\n      const { getPaymasterStubData, getPaymasterData } = paymaster\n      return {\n        getPaymasterStubData: (getPaymasterData && getPaymasterStubData\n          ? getPaymasterStubData\n          : getPaymasterData) as typeof getPaymasterStubData,\n        getPaymasterData:\n          getPaymasterData && getPaymasterStubData\n            ? getPaymasterData\n            : undefined,\n      }\n    }\n\n    // No Paymaster functions.\n    return {\n      getPaymasterStubData: undefined,\n      getPaymasterData: undefined,\n    }\n  })()\n  const paymasterContext = parameters.paymasterContext\n    ? parameters.paymasterContext\n    : bundlerClient?.paymasterContext\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Set up the User Operation request.\n  ////////////////////////////////////////////////////////////////////////////////\n\n  let request = {\n    ...parameters,\n    paymaster: paymasterAddress,\n    sender: account.address,\n  } as PrepareUserOperationRequest\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Concurrently prepare properties required to fill the User Operation.\n  ////////////////////////////////////////////////////////////////////////////////\n\n  const [callData, factory, fees, nonce, authorization] = await Promise.all([\n    (async () => {\n      if (parameters.calls)\n        return account.encodeCalls(\n          parameters.calls.map((call_) => {\n            const call = call_ as Call\n            if (call.abi)\n              return {\n                data: encodeFunctionData(call),\n                to: call.to,\n                value: call.value,\n              } as Call\n            return call as Call\n          }),\n        )\n      return parameters.callData\n    })(),\n    (async () => {\n      if (!properties.includes('factory')) return undefined\n      if (parameters.initCode) return { initCode: parameters.initCode }\n      if (parameters.factory && parameters.factoryData) {\n        return {\n          factory: parameters.factory,\n          factoryData: parameters.factoryData,\n        }\n      }\n\n      const { factory, factoryData } = await account.getFactoryArgs()\n\n      if (account.entryPoint.version === '0.6')\n        return {\n          initCode:\n            factory && factoryData ? concat([factory, factoryData]) : undefined,\n        }\n      return {\n        factory,\n        factoryData,\n      }\n    })(),\n    (async () => {\n      if (!properties.includes('fees')) return undefined\n\n      // If we have sufficient properties for fees, return them.\n      if (\n        typeof parameters.maxFeePerGas === 'bigint' &&\n        typeof parameters.maxPriorityFeePerGas === 'bigint'\n      )\n        return request\n\n      // If the Bundler Client has a `estimateFeesPerGas` hook, run it.\n      if (bundlerClient?.userOperation?.estimateFeesPerGas) {\n        const fees = await bundlerClient.userOperation.estimateFeesPerGas({\n          account,\n          bundlerClient,\n          userOperation: request as UserOperation,\n        })\n        return {\n          ...request,\n          ...fees,\n        }\n      }\n\n      // Otherwise, we will need to estimate the fees to fill the fee properties.\n      try {\n        const client_ = bundlerClient.client ?? client\n        const fees = await getAction(\n          client_,\n          estimateFeesPerGas,\n          'estimateFeesPerGas',\n        )({\n          chain: client_.chain,\n          type: 'eip1559',\n        })\n        return {\n          maxFeePerGas:\n            typeof parameters.maxFeePerGas === 'bigint'\n              ? parameters.maxFeePerGas\n              : BigInt(\n                  // Bundlers unfortunately have strict rules on fee prechecks – we will need to set a generous buffer.\n                  2n * fees.maxFeePerGas,\n                ),\n          maxPriorityFeePerGas:\n            typeof parameters.maxPriorityFeePerGas === 'bigint'\n              ? parameters.maxPriorityFeePerGas\n              : BigInt(\n                  // Bundlers unfortunately have strict rules on fee prechecks – we will need to set a generous buffer.\n                  2n * fees.maxPriorityFeePerGas,\n                ),\n        }\n      } catch {\n        return undefined\n      }\n    })(),\n    (async () => {\n      if (!properties.includes('nonce')) return undefined\n      if (typeof parameters.nonce === 'bigint') return parameters.nonce\n      return account.getNonce()\n    })(),\n    (async () => {\n      if (!properties.includes('authorization')) return undefined\n      if (typeof parameters.authorization === 'object')\n        return parameters.authorization\n      if (account.authorization && !(await account.isDeployed())) {\n        const authorization = await prepareAuthorization(\n          account.client,\n          account.authorization,\n        )\n        return {\n          ...authorization,\n          r: '0xfffffffffffffffffffffffffffffff000000000000000000000000000000000',\n          s: '0x7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',\n          yParity: 1,\n        } satisfies SignedAuthorization\n      }\n      return undefined\n    })(),\n  ])\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Fill User Operation with the prepared properties from above.\n  ////////////////////////////////////////////////////////////////////////////////\n\n  if (typeof callData !== 'undefined') request.callData = callData\n  if (typeof factory !== 'undefined')\n    request = { ...request, ...(factory as any) }\n  if (typeof fees !== 'undefined') request = { ...request, ...(fees as any) }\n  if (typeof nonce !== 'undefined') request.nonce = nonce\n  if (typeof authorization !== 'undefined')\n    request.authorization = authorization\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Fill User Operation with the `signature` property.\n  ////////////////////////////////////////////////////////////////////////////////\n\n  if (properties.includes('signature')) {\n    if (typeof parameters.signature !== 'undefined')\n      request.signature = parameters.signature\n    else\n      request.signature = await account.getStubSignature(\n        request as UserOperation,\n      )\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // `initCode` is required to be filled with EntryPoint 0.6.\n  ////////////////////////////////////////////////////////////////////////////////\n\n  // If no `initCode` is provided, we use an empty bytes string.\n  if (account.entryPoint.version === '0.6' && !request.initCode)\n    request.initCode = '0x'\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Fill User Operation with paymaster-related properties for **gas estimation**.\n  ////////////////////////////////////////////////////////////////////////////////\n\n  let chainId: number | undefined\n  async function getChainId(): Promise<number> {\n    if (chainId) return chainId\n    if (client.chain) return client.chain.id\n    const chainId_ = await getAction(client, getChainId_, 'getChainId')({})\n    chainId = chainId_\n    return chainId\n  }\n\n  // If the User Operation is intended to be sponsored, we will need to fill the paymaster-related\n  // User Operation properties required to estimate the User Operation gas.\n  let isPaymasterPopulated = false\n  if (\n    properties.includes('paymaster') &&\n    getPaymasterStubData &&\n    !paymasterAddress &&\n    !parameters.paymasterAndData\n  ) {\n    const {\n      isFinal = false,\n      sponsor: _,\n      ...paymasterArgs\n    } = await getPaymasterStubData({\n      chainId: await getChainId(),\n      entryPointAddress: account.entryPoint.address,\n      context: paymasterContext,\n      ...(request as UserOperation),\n    })\n    isPaymasterPopulated = isFinal\n    request = {\n      ...request,\n      ...paymasterArgs,\n    } as PrepareUserOperationRequest\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // `paymasterAndData` is required to be filled with EntryPoint 0.6.\n  ////////////////////////////////////////////////////////////////////////////////\n\n  // If no `paymasterAndData` is provided, we use an empty bytes string.\n  if (account.entryPoint.version === '0.6' && !request.paymasterAndData)\n    request.paymasterAndData = '0x'\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Fill User Operation with gas-related properties.\n  ////////////////////////////////////////////////////////////////////////////////\n\n  if (properties.includes('gas')) {\n    // If the Account has opinionated gas estimation logic, run the `estimateGas` hook and\n    // fill the request with the prepared gas properties.\n    if (account.userOperation?.estimateGas) {\n      const gas = await account.userOperation.estimateGas(\n        request as UserOperation,\n      )\n      request = {\n        ...request,\n        ...gas,\n      } as PrepareUserOperationRequest\n    }\n\n    // If not all the gas properties are already populated, we will need to estimate the gas\n    // to fill the gas properties.\n    if (\n      typeof request.callGasLimit === 'undefined' ||\n      typeof request.preVerificationGas === 'undefined' ||\n      typeof request.verificationGasLimit === 'undefined' ||\n      (request.paymaster &&\n        typeof request.paymasterPostOpGasLimit === 'undefined') ||\n      (request.paymaster &&\n        typeof request.paymasterVerificationGasLimit === 'undefined')\n    ) {\n      const gas = await getAction(\n        bundlerClient,\n        estimateUserOperationGas,\n        'estimateUserOperationGas',\n      )({\n        account,\n        // Some Bundlers fail if nullish gas values are provided for gas estimation :') –\n        // so we will need to set a default zeroish value.\n        callGasLimit: 0n,\n        preVerificationGas: 0n,\n        verificationGasLimit: 0n,\n        stateOverride,\n        ...(request.paymaster\n          ? {\n              paymasterPostOpGasLimit: 0n,\n              paymasterVerificationGasLimit: 0n,\n            }\n          : {}),\n        ...request,\n      } as EstimateUserOperationGasParameters)\n      request = {\n        ...request,\n        callGasLimit: request.callGasLimit ?? gas.callGasLimit,\n        preVerificationGas:\n          request.preVerificationGas ?? gas.preVerificationGas,\n        verificationGasLimit:\n          request.verificationGasLimit ?? gas.verificationGasLimit,\n        paymasterPostOpGasLimit:\n          request.paymasterPostOpGasLimit ?? gas.paymasterPostOpGasLimit,\n        paymasterVerificationGasLimit:\n          request.paymasterVerificationGasLimit ??\n          gas.paymasterVerificationGasLimit,\n      } as PrepareUserOperationRequest\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Fill User Operation with paymaster-related properties for **sending** the User Operation.\n  ////////////////////////////////////////////////////////////////////////////////\n\n  // If the User Operation is intended to be sponsored, we will need to fill the paymaster-related\n  // User Operation properties required to send the User Operation.\n  if (\n    properties.includes('paymaster') &&\n    getPaymasterData &&\n    !paymasterAddress &&\n    !parameters.paymasterAndData &&\n    !isPaymasterPopulated\n  ) {\n    // Retrieve paymaster-related User Operation properties to be used for **sending** the User Operation.\n    const paymaster = await getPaymasterData({\n      chainId: await getChainId(),\n      entryPointAddress: account.entryPoint.address,\n      context: paymasterContext,\n      ...(request as UserOperation),\n    })\n    request = {\n      ...request,\n      ...paymaster,\n    } as PrepareUserOperationRequest\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Remove redundant properties that do not conform to the User Operation schema.\n  ////////////////////////////////////////////////////////////////////////////////\n\n  delete request.calls\n  delete request.parameters\n  delete request.paymasterContext\n  if (typeof request.paymaster !== 'string') delete request.paymaster\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  return request as unknown as PrepareUserOperationReturnType<\n    account,\n    accountOverride,\n    calls,\n    request\n  >\n}\n","import type { Address } from 'abitype'\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  AccountNotFoundError,\n  type AccountNotFoundErrorType,\n} from '../../errors/account.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type {\n  Authorization,\n  AuthorizationRequest,\n} from '../../types/authorization.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { PartialBy } from '../../types/utils.js'\nimport { isAddressEqual } from '../../utils/address/isAddressEqual.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { getChainId } from '../public/getChainId.js'\nimport { getTransactionCount } from '../public/getTransactionCount.js'\n\nexport type PrepareAuthorizationParameters<\n  account extends Account | undefined = Account | undefined,\n> = GetAccountParameter<account> &\n  PartialBy<AuthorizationRequest, 'chainId' | 'nonce'> & {\n    /**\n     * Whether the EIP-7702 Transaction will be executed by the EOA (signing this Authorization) or another Account.\n     *\n     * By default, it will be assumed that the EIP-7702 Transaction will\n     * be executed by another Account.\n     */\n    executor?: 'self' | Account | Address | undefined\n  }\n\nexport type PrepareAuthorizationReturnType = Authorization\n\nexport type PrepareAuthorizationErrorType =\n  | ParseAccountErrorType\n  | RequestErrorType\n  | AccountNotFoundErrorType\n  | ErrorType\n\n/**\n * Prepares an [EIP-7702 Authorization](https://eips.ethereum.org/EIPS/eip-7702) object for signing.\n * This Action will fill the required fields of the Authorization object if they are not provided (e.g. `nonce` and `chainId`).\n *\n * With the prepared Authorization object, you can use [`signAuthorization`](https://viem.sh/docs/eip7702/signAuthorization) to sign over the Authorization object.\n *\n * @param client - Client to use\n * @param parameters - {@link PrepareAuthorizationParameters}\n * @returns The prepared Authorization object. {@link PrepareAuthorizationReturnType}\n *\n * @example\n * import { createClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { prepareAuthorization } from 'viem/experimental'\n *\n * const client = createClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const authorization = await prepareAuthorization(client, {\n *   account: privateKeyToAccount('0x..'),\n *   contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n *\n * @example\n * // Account Hoisting\n * import { createClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { prepareAuthorization } from 'viem/experimental'\n *\n * const client = createClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const authorization = await prepareAuthorization(client, {\n *   contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n */\nexport async function prepareAuthorization<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: PrepareAuthorizationParameters<account>,\n): Promise<PrepareAuthorizationReturnType> {\n  const { account: account_ = client.account, chainId, nonce } = parameters\n\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/eip7702/prepareAuthorization',\n    })\n  const account = parseAccount(account_)\n\n  const executor = (() => {\n    if (!parameters.executor) return undefined\n    if (parameters.executor === 'self') return parameters.executor\n    return parseAccount(parameters.executor)\n  })()\n\n  const authorization = {\n    address: parameters.contractAddress ?? parameters.address,\n    chainId,\n    nonce,\n  } as Authorization\n\n  if (typeof authorization.chainId === 'undefined')\n    authorization.chainId =\n      client.chain?.id ??\n      (await getAction(client, getChainId, 'getChainId')({}))\n\n  if (typeof authorization.nonce === 'undefined') {\n    authorization.nonce = await getAction(\n      client,\n      getTransactionCount,\n      'getTransactionCount',\n    )({\n      address: account.address,\n      blockTag: 'pending',\n    })\n    if (\n      executor === 'self' ||\n      (executor?.address && isAddressEqual(executor.address, account.address))\n    )\n      authorization.nonce += 1\n  }\n\n  return authorization\n}\n","import type { Address, Narrow } from 'abitype'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport { AccountNotFoundError } from '../../../errors/account.js'\nimport type { BaseError } from '../../../errors/base.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Calls } from '../../../types/calls.js'\nimport type { Chain } from '../../../types/chain.js'\nimport type { Hex } from '../../../types/misc.js'\nimport type { StateOverride } from '../../../types/stateOverride.js'\nimport type {\n  Assign,\n  MaybeRequired,\n  OneOf,\n  Prettify,\n} from '../../../types/utils.js'\nimport type { RequestErrorType } from '../../../utils/buildRequest.js'\nimport { getAction } from '../../../utils/getAction.js'\nimport { serializeStateOverride } from '../../../utils/stateOverride.js'\nimport type { SmartAccount } from '../../accounts/types.js'\nimport type { PaymasterActions } from '../../clients/decorators/paymaster.js'\nimport type {\n  DeriveSmartAccount,\n  GetSmartAccountParameter,\n} from '../../types/account.js'\nimport type {\n  DeriveEntryPointVersion,\n  EntryPointVersion,\n} from '../../types/entryPointVersion.js'\nimport type {\n  EstimateUserOperationGasReturnType as EstimateUserOperationGasReturnType_,\n  UserOperation,\n  UserOperationRequest,\n} from '../../types/userOperation.js'\nimport { getUserOperationError } from '../../utils/errors/getUserOperationError.js'\nimport {\n  type FormatUserOperationGasErrorType,\n  formatUserOperationGas,\n} from '../../utils/formatters/userOperationGas.js'\nimport {\n  type FormatUserOperationRequestErrorType,\n  formatUserOperationRequest,\n} from '../../utils/formatters/userOperationRequest.js'\nimport {\n  type PrepareUserOperationErrorType,\n  type PrepareUserOperationParameters,\n  prepareUserOperation,\n} from './prepareUserOperation.js'\n\nexport type EstimateUserOperationGasParameters<\n  account extends SmartAccount | undefined = SmartAccount | undefined,\n  accountOverride extends SmartAccount | undefined = SmartAccount | undefined,\n  calls extends readonly unknown[] = readonly unknown[],\n  //\n  _derivedAccount extends SmartAccount | undefined = DeriveSmartAccount<\n    account,\n    accountOverride\n  >,\n  _derivedVersion extends\n    EntryPointVersion = DeriveEntryPointVersion<_derivedAccount>,\n> = GetSmartAccountParameter<account, accountOverride, false> &\n  (\n    | UserOperation // Accept a full-formed User Operation.\n    | Assign<\n        // Accept a partially-formed User Operation (UserOperationRequest) to be filled.\n        UserOperationRequest<_derivedVersion>,\n        OneOf<{ calls: Calls<Narrow<calls>> } | { callData: Hex }> & {\n          paymaster?:\n            | Address\n            | true\n            | {\n                /** Retrieves paymaster-related User Operation properties to be used for sending the User Operation. */\n                getPaymasterData?:\n                  | PaymasterActions['getPaymasterData']\n                  | undefined\n                /** Retrieves paymaster-related User Operation properties to be used for gas estimation. */\n                getPaymasterStubData?:\n                  | PaymasterActions['getPaymasterStubData']\n                  | undefined\n              }\n            | undefined\n          /** Paymaster context to pass to `getPaymasterData` and `getPaymasterStubData` calls. */\n          paymasterContext?: unknown | undefined\n        }\n      >\n  ) &\n  // Allow the EntryPoint address to be overridden, if no Account is provided, it will need to be required.\n  MaybeRequired<\n    { entryPointAddress?: Address },\n    _derivedAccount extends undefined ? true : false\n  > & {\n    /** State overrides for the User Operation call. */\n    stateOverride?: StateOverride | undefined\n  }\n\nexport type EstimateUserOperationGasReturnType<\n  account extends SmartAccount | undefined = SmartAccount | undefined,\n  accountOverride extends SmartAccount | undefined = SmartAccount | undefined,\n  //\n  _derivedAccount extends SmartAccount | undefined = DeriveSmartAccount<\n    account,\n    accountOverride\n  >,\n  _derivedVersion extends\n    EntryPointVersion = DeriveEntryPointVersion<_derivedAccount>,\n> = Prettify<EstimateUserOperationGasReturnType_<_derivedVersion>>\n\nexport type EstimateUserOperationGasErrorType =\n  | ParseAccountErrorType\n  | PrepareUserOperationErrorType\n  | FormatUserOperationRequestErrorType\n  | FormatUserOperationGasErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns an estimate of gas values necessary to execute the User Operation.\n *\n * - Docs: https://viem.sh/actions/bundler/estimateUserOperationGas\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateUserOperationGasParameters}\n * @returns The gas estimate (in wei). {@link EstimateUserOperationGasReturnType}\n *\n * @example\n * import { createBundlerClient, http, parseEther } from 'viem'\n * import { toSmartAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { estimateUserOperationGas } from 'viem/actions'\n *\n * const account = await toSmartAccount({ ... })\n *\n * const bundlerClient = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const values = await estimateUserOperationGas(bundlerClient, {\n *   account,\n *   calls: [{ to: '0x...', value: parseEther('1') }],\n * })\n */\nexport async function estimateUserOperationGas<\n  const calls extends readonly unknown[],\n  account extends SmartAccount | undefined,\n  accountOverride extends SmartAccount | undefined = undefined,\n>(\n  client: Client<Transport, Chain | undefined, account>,\n  parameters: EstimateUserOperationGasParameters<\n    account,\n    accountOverride,\n    calls\n  >,\n): Promise<EstimateUserOperationGasReturnType<account, accountOverride>> {\n  const {\n    account: account_ = client.account,\n    entryPointAddress,\n    stateOverride,\n  } = parameters\n\n  if (!account_ && !parameters.sender) throw new AccountNotFoundError()\n  const account = account_ ? parseAccount(account_) : undefined\n\n  const rpcStateOverride = serializeStateOverride(stateOverride)\n\n  const request = account\n    ? await getAction(\n        client,\n        prepareUserOperation,\n        'prepareUserOperation',\n      )({\n        ...parameters,\n        parameters: [\n          'authorization',\n          'factory',\n          'nonce',\n          'paymaster',\n          'signature',\n        ],\n      } as unknown as PrepareUserOperationParameters)\n    : parameters\n\n  try {\n    const params = [\n      formatUserOperationRequest(request as UserOperation),\n      (entryPointAddress ?? account?.entryPoint?.address)!,\n    ] as const\n\n    const result = await client.request({\n      method: 'eth_estimateUserOperationGas',\n      params: rpcStateOverride ? [...params, rpcStateOverride] : [...params],\n    })\n    return formatUserOperationGas(result) as EstimateUserOperationGasReturnType<\n      account,\n      accountOverride\n    >\n  } catch (error) {\n    const calls = (parameters as any).calls\n    throw getUserOperationError(error as BaseError, {\n      ...(request as UserOperation),\n      ...(calls ? { calls } : {}),\n    })\n  }\n}\n","import type { ErrorType } from '../../../errors/utils.js'\nimport type { RpcEstimateUserOperationGasReturnType } from '../../types/rpc.js'\nimport type { EstimateUserOperationGasReturnType } from '../../types/userOperation.js'\n\nexport type FormatUserOperationGasErrorType = ErrorType\n\nexport function formatUserOperationGas(\n  parameters: RpcEstimateUserOperationGasReturnType,\n): EstimateUserOperationGasReturnType {\n  const gas = {} as EstimateUserOperationGasReturnType\n\n  if (parameters.callGasLimit)\n    gas.callGasLimit = BigInt(parameters.callGasLimit)\n  if (parameters.preVerificationGas)\n    gas.preVerificationGas = BigInt(parameters.preVerificationGas)\n  if (parameters.verificationGasLimit)\n    gas.verificationGasLimit = BigInt(parameters.verificationGasLimit)\n  if (parameters.paymasterPostOpGasLimit)\n    gas.paymasterPostOpGasLimit = BigInt(parameters.paymasterPostOpGasLimit)\n  if (parameters.paymasterVerificationGasLimit)\n    gas.paymasterVerificationGasLimit = BigInt(\n      parameters.paymasterVerificationGasLimit,\n    )\n\n  return gas\n}\n","import type { ErrorType } from '../../../errors/utils.js'\nimport type { RpcUserOperation } from '../../types/rpc.js'\nimport type { UserOperation } from '../../types/userOperation.js'\n\nexport type FormatUserOperationErrorType = ErrorType\n\nexport function formatUserOperation(parameters: RpcUserOperation) {\n  const userOperation = { ...parameters } as unknown as UserOperation\n\n  if (parameters.callGasLimit)\n    userOperation.callGasLimit = BigInt(parameters.callGasLimit)\n  if (parameters.maxFeePerGas)\n    userOperation.maxFeePerGas = BigInt(parameters.maxFeePerGas)\n  if (parameters.maxPriorityFeePerGas)\n    userOperation.maxPriorityFeePerGas = BigInt(parameters.maxPriorityFeePerGas)\n  if (parameters.nonce) userOperation.nonce = BigInt(parameters.nonce)\n  if (parameters.paymasterPostOpGasLimit)\n    userOperation.paymasterPostOpGasLimit = BigInt(\n      parameters.paymasterPostOpGasLimit,\n    )\n  if (parameters.paymasterVerificationGasLimit)\n    userOperation.paymasterVerificationGasLimit = BigInt(\n      parameters.paymasterVerificationGasLimit,\n    )\n  if (parameters.preVerificationGas)\n    userOperation.preVerificationGas = BigInt(parameters.preVerificationGas)\n  if (parameters.verificationGasLimit)\n    userOperation.verificationGasLimit = BigInt(parameters.verificationGasLimit)\n\n  return userOperation\n}\n","import type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Hash } from '../../../types/misc.js'\nimport type { Prettify } from '../../../types/utils.js'\nimport type { RequestErrorType } from '../../../utils/buildRequest.js'\nimport {\n  UserOperationReceiptNotFoundError,\n  type UserOperationReceiptNotFoundErrorType,\n} from '../../errors/userOperation.js'\nimport type { UserOperationReceipt } from '../../types/userOperation.js'\nimport { formatUserOperationReceipt } from '../../utils/formatters/userOperationReceipt.js'\n\nexport type GetUserOperationReceiptParameters = {\n  /** The hash of the User Operation. */\n  hash: Hash\n}\n\nexport type GetUserOperationReceiptReturnType = Prettify<UserOperationReceipt>\n\nexport type GetUserOperationReceiptErrorType =\n  | RequestErrorType\n  | UserOperationReceiptNotFoundErrorType\n  | ErrorType\n\n/**\n * Returns the User Operation Receipt given a User Operation hash.\n *\n * - Docs: https://viem.sh/docs/actions/bundler/getUserOperationReceipt\n *\n * @param client - Client to use\n * @param parameters - {@link GetUserOperationReceiptParameters}\n * @returns The receipt. {@link GetUserOperationReceiptReturnType}\n *\n * @example\n * import { createBundlerClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getUserOperationReceipt } from 'viem/actions\n *\n * const client = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const receipt = await getUserOperationReceipt(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getUserOperationReceipt(\n  client: Client<Transport>,\n  { hash }: GetUserOperationReceiptParameters,\n) {\n  const receipt = await client.request(\n    {\n      method: 'eth_getUserOperationReceipt',\n      params: [hash],\n    },\n    { dedupe: true },\n  )\n\n  if (!receipt) throw new UserOperationReceiptNotFoundError({ hash })\n\n  return formatUserOperationReceipt(receipt)\n}\n","import type { ErrorType } from '../../../errors/utils.js'\nimport { formatLog } from '../../../utils/formatters/log.js'\nimport { formatTransactionReceipt } from '../../../utils/formatters/transactionReceipt.js'\nimport type { RpcUserOperationReceipt } from '../../types/rpc.js'\nimport type { UserOperationReceipt } from '../../types/userOperation.js'\n\nexport type FormatUserOperationReceiptErrorType = ErrorType\n\nexport function formatUserOperationReceipt(\n  parameters: RpcUserOperationReceipt,\n) {\n  const receipt = { ...parameters } as unknown as UserOperationReceipt\n\n  if (parameters.actualGasCost)\n    receipt.actualGasCost = BigInt(parameters.actualGasCost)\n  if (parameters.actualGasUsed)\n    receipt.actualGasUsed = BigInt(parameters.actualGasUsed)\n  if (parameters.logs)\n    receipt.logs = parameters.logs.map((log) => formatLog(log)) as any\n  if (parameters.receipt)\n    receipt.receipt = formatTransactionReceipt(receipt.receipt as any)\n\n  return receipt\n}\n","import {\n  type GetChainIdReturnType,\n  getChainId,\n} from '../../../actions/public/getChainId.js'\nimport type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport type { Chain } from '../../../types/chain.js'\nimport type { SmartAccount } from '../../accounts/types.js'\nimport {\n  type EstimateUserOperationGasParameters,\n  type EstimateUserOperationGasReturnType,\n  estimateUserOperationGas,\n} from '../../actions/bundler/estimateUserOperationGas.js'\nimport {\n  type GetSupportedEntryPointsReturnType,\n  getSupportedEntryPoints,\n} from '../../actions/bundler/getSupportedEntryPoints.js'\nimport {\n  type GetUserOperationParameters,\n  type GetUserOperationReturnType,\n  getUserOperation,\n} from '../../actions/bundler/getUserOperation.js'\nimport {\n  type GetUserOperationReceiptParameters,\n  type GetUserOperationReceiptReturnType,\n  getUserOperationReceipt,\n} from '../../actions/bundler/getUserOperationReceipt.js'\nimport {\n  type PrepareUserOperationParameters,\n  type PrepareUserOperationRequest,\n  type PrepareUserOperationReturnType,\n  prepareUserOperation,\n} from '../../actions/bundler/prepareUserOperation.js'\nimport {\n  type SendUserOperationParameters,\n  type SendUserOperationReturnType,\n  sendUserOperation,\n} from '../../actions/bundler/sendUserOperation.js'\nimport {\n  type WaitForUserOperationReceiptParameters,\n  type WaitForUserOperationReceiptReturnType,\n  waitForUserOperationReceipt,\n} from '../../actions/bundler/waitForUserOperationReceipt.js'\n\nexport type BundlerActions<\n  account extends SmartAccount | undefined = SmartAccount | undefined,\n> = {\n  /**\n   * Returns an estimate of gas values necessary to execute the User Operation.\n   *\n   * - Docs: https://viem.sh/actions/bundler/estimateUserOperationGas\n   *\n   * @param client - Client to use\n   * @param parameters - {@link EstimateUserOperationGasParameters}\n   * @returns The gas estimate (in wei). {@link EstimateUserOperationGasReturnType}\n   *\n   * @example\n   * import { createBundlerClient, http, parseEther } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { toSmartAccount } from 'viem/accounts'\n   *\n   * const account = await toSmartAccount({ ... })\n   *\n   * const bundlerClient = createBundlerClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const values = await bundlerClient.estimateUserOperationGas({\n   *   account,\n   *   calls: [{ to: '0x...', value: parseEther('1') }],\n   * })\n   */\n  estimateUserOperationGas: <\n    const calls extends readonly unknown[],\n    accountOverride extends SmartAccount | undefined = undefined,\n  >(\n    parameters: EstimateUserOperationGasParameters<\n      account,\n      accountOverride,\n      calls\n    >,\n  ) => Promise<EstimateUserOperationGasReturnType<account, accountOverride>>\n  /**\n   * Returns the chain ID associated with the bundler.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getChainId\n   * - JSON-RPC Methods: [`eth_chainId`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_chainid)\n   *\n   * @returns The current chain ID. {@link GetChainIdReturnType}\n   *\n   * @example\n   * import { http } from 'viem'\n   * import { createBundlerClient, mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const chainId = await client.getChainId()\n   * // 1\n   */\n  getChainId: () => Promise<GetChainIdReturnType>\n  /**\n   * Returns the EntryPoints that the bundler supports.\n   *\n   * - Docs: https://viem.sh/actions/bundler/getSupportedEntryPoints\n   *\n   * @param client - Client to use\n   * @param parameters - {@link GetSupportedEntryPointsParameters}\n   * @returns Supported Entry Points. {@link GetSupportedEntryPointsReturnType}\n   *\n   * @example\n   * import { createBundlerClient, http, parseEther } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const bundlerClient = createBundlerClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const addresses = await bundlerClient.getSupportedEntryPoints()\n   */\n  getSupportedEntryPoints: () => Promise<GetSupportedEntryPointsReturnType>\n  /**\n   * Returns the information about a User Operation given a hash.\n   *\n   * - Docs: https://viem.sh/docs/actions/bundler/getUserOperation\n   *\n   * @param client - Client to use\n   * @param parameters - {@link GetUserOperationParameters}\n   * @returns The receipt. {@link GetUserOperationReturnType}\n   *\n   * @example\n   * import { createBundlerClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createBundlerClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const receipt = await client.getUserOperation({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  getUserOperation: (\n    parameters: GetUserOperationParameters,\n  ) => Promise<GetUserOperationReturnType>\n  /**\n   * Returns the User Operation Receipt given a User Operation hash.\n   *\n   * - Docs: https://viem.sh/docs/actions/bundler/getUserOperationReceipt\n   *\n   * @param client - Client to use\n   * @param parameters - {@link GetUserOperationReceiptParameters}\n   * @returns The receipt. {@link GetUserOperationReceiptReturnType}\n   *\n   * @example\n   * import { createBundlerClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createBundlerClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const receipt = await client.getUserOperationReceipt({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  getUserOperationReceipt: (\n    parameters: GetUserOperationReceiptParameters,\n  ) => Promise<GetUserOperationReceiptReturnType>\n  /**\n   * Prepares a User Operation and fills in missing properties.\n   *\n   * - Docs: https://viem.sh/actions/bundler/prepareUserOperation\n   *\n   * @param args - {@link PrepareUserOperationParameters}\n   * @returns The User Operation. {@link PrepareUserOperationReturnType}\n   *\n   * @example\n   * import { createBundlerClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { toSmartAccount } from 'viem/accounts'\n   *\n   * const account = await toSmartAccount({ ... })\n   *\n   * const client = createBundlerClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const request = await client.prepareUserOperation({\n   *   account,\n   *   calls: [{ to: '0x...', value: parseEther('1') }],\n   * })\n   */\n  prepareUserOperation: <\n    const calls extends readonly unknown[],\n    const request extends PrepareUserOperationRequest<\n      account,\n      accountOverride,\n      calls\n    >,\n    accountOverride extends SmartAccount | undefined = undefined,\n  >(\n    parameters: PrepareUserOperationParameters<\n      account,\n      accountOverride,\n      calls,\n      request\n    >,\n  ) => Promise<\n    PrepareUserOperationReturnType<account, accountOverride, calls, request>\n  >\n  /**\n   * Broadcasts a User Operation to the Bundler.\n   *\n   * - Docs: https://viem.sh/actions/bundler/sendUserOperation\n   *\n   * @param client - Client to use\n   * @param parameters - {@link SendUserOperationParameters}\n   * @returns The User Operation hash. {@link SendUserOperationReturnType}\n   *\n   * @example\n   * import { createBundlerClient, http, parseEther } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { toSmartAccount } from 'viem/accounts'\n   *\n   * const account = toSmartAccount({ ... })\n   *\n   * const bundlerClient = createBundlerClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const values = await bundlerClient.sendUserOperation({\n   *   account,\n   *   calls: [{ to: '0x...', value: parseEther('1') }],\n   * })\n   */\n  sendUserOperation: <\n    const calls extends readonly unknown[],\n    accountOverride extends SmartAccount | undefined = undefined,\n  >(\n    parameters: SendUserOperationParameters<account, accountOverride, calls>,\n  ) => Promise<SendUserOperationReturnType>\n  /**\n   * Waits for the User Operation to be included on a [Block](https://viem.sh/docs/glossary/terms#block) (one confirmation), and then returns the User Operation receipt.\n   *\n   * - Docs: https://viem.sh/docs/actions/bundler/waitForUserOperationReceipt\n   *\n   * @param client - Client to use\n   * @param parameters - {@link WaitForUserOperationReceiptParameters}\n   * @returns The receipt. {@link WaitForUserOperationReceiptReturnType}\n   *\n   * @example\n   * import { createBundlerClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createBundlerClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   *\n   * const receipt = await client.waitForUserOperationReceipt({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  waitForUserOperationReceipt: (\n    parameters: WaitForUserOperationReceiptParameters,\n  ) => Promise<WaitForUserOperationReceiptReturnType>\n}\n\nexport function bundlerActions<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends SmartAccount | undefined = SmartAccount | undefined,\n>(client: Client<transport, chain, account>): BundlerActions<account> {\n  return {\n    estimateUserOperationGas: (parameters) =>\n      estimateUserOperationGas(client, parameters),\n    getChainId: () => getChainId(client),\n    getSupportedEntryPoints: () => getSupportedEntryPoints(client),\n    getUserOperation: (parameters) => getUserOperation(client, parameters),\n    getUserOperationReceipt: (parameters) =>\n      getUserOperationReceipt(client, parameters),\n    prepareUserOperation: (parameters) =>\n      prepareUserOperation(client, parameters),\n    sendUserOperation: (parameters) => sendUserOperation(client, parameters),\n    waitForUserOperationReceipt: (parameters) =>\n      waitForUserOperationReceipt(client, parameters),\n  }\n}\n","import type { Address } from 'abitype'\nimport type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { RequestErrorType } from '../../../utils/buildRequest.js'\n\nexport type GetSupportedEntryPointsReturnType = readonly Address[]\nexport type GetSupportedEntryPointsErrorType = RequestErrorType | ErrorType\n\n/**\n * Returns the EntryPoints that the bundler supports.\n *\n * - Docs: https://viem.sh/actions/bundler/getSupportedEntryPoints\n *\n * @param client - Client to use\n * @param parameters - {@link GetSupportedEntryPointsParameters}\n * @returns Supported Entry Points. {@link GetSupportedEntryPointsReturnType}\n *\n * @example\n * import { createBundlerClient, http, parseEther } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getSupportedEntryPoints } from 'viem/actions'\n *\n * const bundlerClient = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const addresses = await getSupportedEntryPoints(bundlerClient)\n */\nexport function getSupportedEntryPoints(client: Client<Transport>) {\n  return client.request({ method: 'eth_supportedEntryPoints' })\n}\n","import type { Address } from 'abitype'\nimport type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Hash } from '../../../types/misc.js'\nimport type { Prettify } from '../../../types/utils.js'\nimport type { RequestErrorType } from '../../../utils/buildRequest.js'\nimport {\n  UserOperationNotFoundError,\n  type UserOperationNotFoundErrorType,\n} from '../../errors/userOperation.js'\nimport type { UserOperation } from '../../types/userOperation.js'\nimport { formatUserOperation } from '../../utils/formatters/userOperation.js'\n\nexport type GetUserOperationParameters = {\n  /** The hash of the User Operation. */\n  hash: Hash\n}\n\nexport type GetUserOperationReturnType = Prettify<{\n  /** The block hash the User Operation was included on. */\n  blockHash: Hash\n  /** The block number the User Operation was included on. */\n  blockNumber: bigint\n  /** The EntryPoint which handled the User Operation. */\n  entryPoint: Address\n  /** The hash of the transaction which included the User Operation. */\n  transactionHash: Hash\n  /** The User Operation. */\n  userOperation: UserOperation\n}>\n\nexport type GetUserOperationErrorType =\n  | RequestErrorType\n  | UserOperationNotFoundErrorType\n  | ErrorType\n\n/**\n * Retrieves information about a User Operation given a hash.\n *\n * - Docs: https://viem.sh/account-abstraction/actions/bundler/getUserOperation\n *\n * @param client - Client to use\n * @param parameters - {@link GetUserOperationParameters}\n * @returns The receipt. {@link GetUserOperationReturnType}\n *\n * @example\n * import { createBundlerClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getUserOperation } from 'viem/actions\n *\n * const client = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const receipt = await getUserOperation(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getUserOperation(\n  client: Client<Transport>,\n  { hash }: GetUserOperationParameters,\n) {\n  const result = await client.request(\n    {\n      method: 'eth_getUserOperationByHash',\n      params: [hash],\n    },\n    { dedupe: true },\n  )\n\n  if (!result) throw new UserOperationNotFoundError({ hash })\n\n  const { blockHash, blockNumber, entryPoint, transactionHash, userOperation } =\n    result\n\n  return {\n    blockHash,\n    blockNumber: BigInt(blockNumber),\n    entryPoint,\n    transactionHash,\n    userOperation: formatUserOperation(userOperation),\n  }\n}\n","import type { Address, Narrow } from 'abitype'\nimport { parseAccount } from '../../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport { AccountNotFoundError } from '../../../errors/account.js'\nimport type { BaseError } from '../../../errors/base.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Calls } from '../../../types/calls.js'\nimport type { Chain } from '../../../types/chain.js'\nimport type { Hex } from '../../../types/misc.js'\nimport type { Assign, MaybeRequired, OneOf } from '../../../types/utils.js'\nimport type { RequestErrorType } from '../../../utils/buildRequest.js'\nimport { getAction } from '../../../utils/getAction.js'\nimport type { SmartAccount } from '../../accounts/types.js'\nimport type { PaymasterActions } from '../../clients/decorators/paymaster.js'\nimport type {\n  DeriveSmartAccount,\n  GetSmartAccountParameter,\n} from '../../types/account.js'\nimport type {\n  DeriveEntryPointVersion,\n  EntryPointVersion,\n} from '../../types/entryPointVersion.js'\nimport type {\n  UserOperation,\n  UserOperationRequest,\n} from '../../types/userOperation.js'\nimport { getUserOperationError } from '../../utils/errors/getUserOperationError.js'\nimport {\n  type FormatUserOperationRequestErrorType,\n  formatUserOperationRequest,\n} from '../../utils/formatters/userOperationRequest.js'\nimport {\n  type PrepareUserOperationErrorType,\n  type PrepareUserOperationParameters,\n  prepareUserOperation,\n} from './prepareUserOperation.js'\n\nexport type SendUserOperationParameters<\n  account extends SmartAccount | undefined = SmartAccount | undefined,\n  accountOverride extends SmartAccount | undefined = SmartAccount | undefined,\n  calls extends readonly unknown[] = readonly unknown[],\n  //\n  _derivedAccount extends SmartAccount | undefined = DeriveSmartAccount<\n    account,\n    accountOverride\n  >,\n  _derivedVersion extends\n    EntryPointVersion = DeriveEntryPointVersion<_derivedAccount>,\n> = GetSmartAccountParameter<account, accountOverride, false> &\n  (\n    | UserOperation // Accept a full-formed User Operation.\n    | Assign<\n        // Accept a partially-formed User Operation (UserOperationRequest) to be filled.\n        UserOperationRequest<_derivedVersion>,\n        OneOf<{ calls: Calls<Narrow<calls>> } | { callData: Hex }> & {\n          paymaster?:\n            | Address\n            | true\n            | {\n                /** Retrieves paymaster-related User Operation properties to be used for sending the User Operation. */\n                getPaymasterData?:\n                  | PaymasterActions['getPaymasterData']\n                  | undefined\n                /** Retrieves paymaster-related User Operation properties to be used for gas estimation. */\n                getPaymasterStubData?:\n                  | PaymasterActions['getPaymasterStubData']\n                  | undefined\n              }\n            | undefined\n          /** Paymaster context to pass to `getPaymasterData` and `getPaymasterStubData` calls. */\n          paymasterContext?: unknown | undefined\n        }\n      >\n  ) &\n  // Allow the EntryPoint address to be overridden, if no Account is provided, it will need to be required.\n  MaybeRequired<\n    { entryPointAddress?: Address },\n    _derivedAccount extends undefined ? true : false\n  >\nexport type SendUserOperationReturnType = Hex\n\nexport type SendUserOperationErrorType =\n  | FormatUserOperationRequestErrorType\n  | PrepareUserOperationErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Broadcasts a User Operation to the Bundler.\n *\n * - Docs: https://viem.sh/actions/bundler/sendUserOperation\n *\n * @param client - Client to use\n * @param parameters - {@link SendUserOperationParameters}\n * @returns The User Operation hash. {@link SendUserOperationReturnType}\n *\n * @example\n * import { createBundlerClient, http, parseEther } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { toSmartAccount } from 'viem/accounts'\n * import { sendUserOperation } from 'viem/actions'\n *\n * const account = await toSmartAccount({ ... })\n *\n * const bundlerClient = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const values = await sendUserOperation(bundlerClient, {\n *   account,\n *   calls: [{ to: '0x...', value: parseEther('1') }],\n * })\n */\nexport async function sendUserOperation<\n  const calls extends readonly unknown[],\n  account extends SmartAccount | undefined,\n  accountOverride extends SmartAccount | undefined = undefined,\n>(\n  client: Client<Transport, Chain | undefined, account>,\n  parameters: SendUserOperationParameters<account, accountOverride, calls>,\n) {\n  const { account: account_ = client.account, entryPointAddress } = parameters\n\n  if (!account_ && !parameters.sender) throw new AccountNotFoundError()\n  const account = account_ ? parseAccount(account_) : undefined\n\n  const request = account\n    ? await getAction(\n        client,\n        prepareUserOperation,\n        'prepareUserOperation',\n      )(parameters as unknown as PrepareUserOperationParameters)\n    : parameters\n\n  const signature = (parameters.signature ||\n    (await account?.signUserOperation?.(request as UserOperation)))!\n\n  const rpcParameters = formatUserOperationRequest({\n    ...request,\n    signature,\n  } as UserOperation)\n\n  try {\n    return await client.request(\n      {\n        method: 'eth_sendUserOperation',\n        params: [\n          rpcParameters,\n          (entryPointAddress ?? account?.entryPoint?.address)!,\n        ],\n      },\n      { retryCount: 0 },\n    )\n  } catch (error) {\n    const calls = (parameters as any).calls\n    throw getUserOperationError(error as BaseError, {\n      ...(request as UserOperation),\n      ...(calls ? { calls } : {}),\n      signature,\n    })\n  }\n}\n","import type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Hash } from '../../../types/misc.js'\nimport type { Prettify } from '../../../types/utils.js'\nimport { getAction } from '../../../utils/getAction.js'\nimport { type ObserveErrorType, observe } from '../../../utils/observe.js'\nimport { type PollErrorType, poll } from '../../../utils/poll.js'\nimport { stringify } from '../../../utils/stringify.js'\nimport {\n  WaitForUserOperationReceiptTimeoutError,\n  type WaitForUserOperationReceiptTimeoutErrorType,\n} from '../../errors/userOperation.js'\nimport type { UserOperationReceipt } from '../../types/userOperation.js'\nimport {\n  type GetUserOperationReceiptErrorType,\n  getUserOperationReceipt,\n} from './getUserOperationReceipt.js'\n\nexport type WaitForUserOperationReceiptParameters = {\n  /** The hash of the User Operation. */\n  hash: Hash\n  /**\n   * Polling frequency (in ms). Defaults to the client's pollingInterval config.\n   * @default client.pollingInterval\n   */\n  pollingInterval?: number | undefined\n  /**\n   * The number of times to retry.\n   * @default 6\n   */\n  retryCount?: number | undefined\n  /** Optional timeout (in ms) to wait before stopping polling. */\n  timeout?: number | undefined\n}\n\nexport type WaitForUserOperationReceiptReturnType =\n  Prettify<UserOperationReceipt>\n\nexport type WaitForUserOperationReceiptErrorType =\n  | WaitForUserOperationReceiptTimeoutErrorType\n  | PollErrorType\n  | ObserveErrorType\n  | ErrorType\n\n/**\n * Waits for the User Operation to be included on a [Block](https://viem.sh/docs/glossary/terms#block) (one confirmation), and then returns the User Operation receipt.\n *\n * - Docs: https://viem.sh/docs/actions/bundler/waitForUserOperationReceipt\n *\n * @param client - Client to use\n * @param parameters - {@link WaitForUserOperationReceiptParameters}\n * @returns The receipt. {@link WaitForUserOperationReceiptReturnType}\n *\n * @example\n * import { createBundlerClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { waitForUserOperationReceipt } from 'viem/actions'\n *\n * const client = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const receipt = await waitForUserOperationReceipt(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport function waitForUserOperationReceipt(\n  client: Client<Transport>,\n  parameters: WaitForUserOperationReceiptParameters,\n): Promise<WaitForUserOperationReceiptReturnType> {\n  const {\n    hash,\n    pollingInterval = client.pollingInterval,\n    retryCount,\n    timeout = 120_000,\n  } = parameters\n\n  let count = 0\n  const observerId = stringify([\n    'waitForUserOperationReceipt',\n    client.uid,\n    hash,\n  ])\n\n  return new Promise((resolve, reject) => {\n    const unobserve = observe(observerId, { resolve, reject }, (emit) => {\n      const done = (fn: () => void) => {\n        unpoll()\n        fn()\n        unobserve()\n      }\n\n      const unpoll = poll(\n        async () => {\n          if (retryCount && count >= retryCount)\n            done(() =>\n              emit.reject(\n                new WaitForUserOperationReceiptTimeoutError({ hash }),\n              ),\n            )\n\n          try {\n            const receipt = await getAction(\n              client,\n              getUserOperationReceipt,\n              'getUserOperationReceipt',\n            )({ hash })\n            done(() => emit.resolve(receipt))\n          } catch (err) {\n            const error = err as GetUserOperationReceiptErrorType\n            if (error.name !== 'UserOperationReceiptNotFoundError')\n              done(() => emit.reject(error))\n          }\n\n          count++\n        },\n        {\n          emitOnBegin: true,\n          interval: pollingInterval,\n        },\n      )\n\n      if (timeout)\n        setTimeout(\n          () =>\n            done(() =>\n              emit.reject(\n                new WaitForUserOperationReceiptTimeoutError({ hash }),\n              ),\n            ),\n          timeout,\n        )\n\n      return unpoll\n    })\n  })\n}\n",null,null,"import type { EstimateFeesPerGasReturnType } from '../../actions/public/estimateFeesPerGas.js'\nimport {\n  type Client,\n  type ClientConfig,\n  type CreateClientErrorType,\n  createClient,\n} from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { BundlerRpcSchema, RpcSchema } from '../../types/eip1193.js'\nimport type { Prettify } from '../../types/utils.js'\nimport type { SmartAccount } from '../accounts/types.js'\nimport type { UserOperationRequest } from '../types/userOperation.js'\nimport { type BundlerActions, bundlerActions } from './decorators/bundler.js'\nimport type { PaymasterActions } from './decorators/paymaster.js'\n\nexport type BundlerClientConfig<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends SmartAccount | undefined = SmartAccount | undefined,\n  client extends Client | undefined = Client | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = Prettify<\n  Pick<\n    ClientConfig<transport, chain, account, rpcSchema>,\n    | 'account'\n    | 'cacheTime'\n    | 'chain'\n    | 'key'\n    | 'name'\n    | 'pollingInterval'\n    | 'rpcSchema'\n    | 'transport'\n  >\n> & {\n  /** Client that points to an Execution RPC URL. */\n  client?: client | Client | undefined\n  /** Paymaster configuration. */\n  paymaster?:\n    | true\n    | {\n        /** Retrieves paymaster-related User Operation properties to be used for sending the User Operation. */\n        getPaymasterData?: PaymasterActions['getPaymasterData'] | undefined\n        /** Retrieves paymaster-related User Operation properties to be used for gas estimation. */\n        getPaymasterStubData?:\n          | PaymasterActions['getPaymasterStubData']\n          | undefined\n      }\n    | undefined\n  /** Paymaster context to pass to `getPaymasterData` and `getPaymasterStubData` calls. */\n  paymasterContext?: unknown\n  /** User Operation configuration. */\n  userOperation?:\n    | {\n        /** Prepares fee properties for the User Operation request. */\n        estimateFeesPerGas?:\n          | ((parameters: {\n              account: account | SmartAccount\n              bundlerClient: Client\n              userOperation: UserOperationRequest\n            }) => Promise<EstimateFeesPerGasReturnType<'eip1559'>>)\n          | undefined\n      }\n    | undefined\n}\n\nexport type BundlerClient<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends SmartAccount | undefined = SmartAccount | undefined,\n  client extends Client | undefined = Client | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = Prettify<\n  Client<\n    transport,\n    chain extends Chain\n      ? chain\n      : client extends Client<any, infer chain>\n        ? chain\n        : undefined,\n    account,\n    rpcSchema extends RpcSchema\n      ? [...BundlerRpcSchema, ...rpcSchema]\n      : BundlerRpcSchema,\n    BundlerActions<account>\n  >\n> & {\n  client: client\n  paymaster: BundlerClientConfig['paymaster'] | undefined\n  paymasterContext: BundlerClientConfig['paymasterContext'] | undefined\n  userOperation: BundlerClientConfig['userOperation'] | undefined\n}\n\nexport type CreateBundlerClientErrorType = CreateClientErrorType | ErrorType\n\n/**\n * Creates a Bundler Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\n *\n * - Docs: https://viem.sh/account-abstraction/clients/bundler\n *\n * @param config - {@link BundlerClientConfig}\n * @returns A Bundler Client. {@link BundlerClient}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { createBundlerClient } from 'viem/account-abstraction'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const bundlerClient = createBundlerClient({\n *   client,\n *   transport: http('https://public.pimlico.io/v2/1/rpc'),\n * })\n */\nexport function createBundlerClient<\n  transport extends Transport,\n  chain extends Chain | undefined = undefined,\n  account extends SmartAccount | undefined = undefined,\n  client extends Client | undefined = undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n>(\n  parameters: BundlerClientConfig<transport, chain, account, client, rpcSchema>,\n): BundlerClient<transport, chain, account, client, rpcSchema>\n\nexport function createBundlerClient(\n  parameters: BundlerClientConfig,\n): BundlerClient {\n  const {\n    client: client_,\n    key = 'bundler',\n    name = 'Bundler Client',\n    paymaster,\n    paymasterContext,\n    transport,\n    userOperation,\n  } = parameters\n  const client = Object.assign(\n    createClient({\n      ...parameters,\n      chain: parameters.chain ?? client_?.chain,\n      key,\n      name,\n      transport,\n      type: 'bundlerClient',\n    }),\n    { client: client_, paymaster, paymasterContext, userOperation },\n  )\n  return client.extend(bundlerActions) as any\n}\n",null,null,"/**\n * Internal webcrypto alias.\n * We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n * See utils.ts for details.\n * @module\n */\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto: any =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n","/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\n/** Asserts something is positive integer. */\nexport function anumber(n: number): void {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error('positive integer expected, got ' + n);\n}\n\n/** Asserts something is Uint8Array. */\nexport function abytes(b: Uint8Array | undefined, ...lengths: number[]): void {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n\n/** Asserts something is hash */\nexport function ahash(h: IHash): void {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.createHasher');\n  anumber(h.outputLen);\n  anumber(h.blockLen);\n}\n\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance: any, checkFinished = true): void {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\n\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out: any, instance: any): void {\n  abytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error('digestInto() expects output buffer of length at least ' + min);\n  }\n}\n\n/** Generic type encompassing 8/16/32-byte arrays - but not 64-byte. */\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr: TypedArray): Uint8Array {\n  return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr: TypedArray): Uint32Array {\n  return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays: TypedArray[]): void {\n  for (let i = 0; i < arrays.length; i++) {\n    arrays[i].fill(0);\n  }\n}\n\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr: TypedArray): DataView {\n  return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word: number, shift: number): number {\n  return (word << (32 - shift)) | (word >>> shift);\n}\n\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word: number, shift: number): number {\n  return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE: boolean = /* @__PURE__ */ (() =>\n  new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n\n/** The byte swap operation for uint32 */\nexport function byteSwap(word: number): number {\n  return (\n    ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff)\n  );\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const swap8IfBE: (n: number) => number = isLE\n  ? (n: number) => n\n  : (n: number) => byteSwap(n);\n\n/** @deprecated */\nexport const byteSwapIfBE: typeof swap8IfBE = swap8IfBE;\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr: Uint32Array): Uint32Array {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n  return arr;\n}\n\nexport const swap32IfBE: (u: Uint32Array) => Uint32Array = isLE\n  ? (u: Uint32Array) => u\n  : byteSwap32;\n\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin: boolean = /* @__PURE__ */ (() =>\n  // @ts-ignore\n  typeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // @ts-ignore\n  if (hasHexBuiltin) return bytes.toHex();\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 } as const;\nfunction asciiToBase16(ch: number): number | undefined {\n  if (ch >= asciis._0 && ch <= asciis._9) return ch - asciis._0; // '2' => 50-48\n  if (ch >= asciis.A && ch <= asciis.F) return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n  if (ch >= asciis.a && ch <= asciis.f) return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n  return;\n}\n\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // @ts-ignore\n  if (hasHexBuiltin) return Uint8Array.fromHex(hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n  }\n  return array;\n}\n\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async (): Promise<void> => {};\n\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(\n  iters: number,\n  tick: number,\n  cb: (i: number) => void\n): Promise<void> {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols, but ts doesn't see them: https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error('string expected');\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes: Uint8Array): string {\n  return new TextDecoder().decode(bytes);\n}\n\n/** Accepted input of hash functions. Strings are converted to byte arrays. */\nexport type Input = string | Uint8Array;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/** KDFs can accept string or Uint8Array for user convenience. */\nexport type KDFInput = string | Uint8Array;\n/**\n * Helper for KDFs: consumes uint8array or string.\n * When string is passed, does utf8 decoding, using TextDecoder.\n */\nexport function kdfInputToBytes(data: KDFInput): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/** Copies several Uint8Arrays into one. */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n    throw new Error('options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\n/** Hash interface. */\nexport type IHash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\n\n/** For runtime check if class implements interface */\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  abstract clone(): T;\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n/** Hash function */\nexport type CHash = ReturnType<typeof createHasher>;\n/** Hash function with output */\nexport type CHashO = ReturnType<typeof createOptHasher>;\n/** XOF with output */\nexport type CHashXO = ReturnType<typeof createXOFer>;\n\n/** Wraps hash function, creating an interface on top of it */\nexport function createHasher<T extends Hash<T>>(\n  hashCons: () => Hash<T>\n): {\n  (msg: Input): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(): Hash<T>;\n} {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function createOptHasher<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts?: T): Hash<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts?: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function createXOFer<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts?: T): HashXOF<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts?: T) => hashCons(opts);\n  return hashC;\n}\nexport const wrapConstructor: typeof createHasher = createHasher;\nexport const wrapConstructorWithOpts: typeof createOptHasher = createOptHasher;\nexport const wrapXOFConstructorWithOpts: typeof createXOFer = createXOFer;\n\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  // Legacy Node.js compatibility\n  if (crypto && typeof crypto.randomBytes === 'function') {\n    return Uint8Array.from(crypto.randomBytes(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { type Input, Hash, abytes, aexists, aoutput, clean, createView, toBytes } from './utils.ts';\n\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nexport function setBigUint64(\n  view: DataView,\n  byteOffset: number,\n  value: bigint,\n  isLE: boolean\n): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n/** Choice: a ? b : c */\nexport function Chi(a: number, b: number, c: number): number {\n  return (a & b) ^ (~a & c);\n}\n\n/** Majority function, true if any two inputs is true. */\nexport function Maj(a: number, b: number, c: number): number {\n  return (a & b) ^ (a & c) ^ (b & c);\n}\n\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport abstract class HashMD<T extends HashMD<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n\n  readonly blockLen: number;\n  readonly outputLen: number;\n  readonly padOffset: number;\n  readonly isLE: boolean;\n\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(blockLen: number, outputLen: number, padOffset: number, isLE: boolean) {\n    super();\n    this.blockLen = blockLen;\n    this.outputLen = outputLen;\n    this.padOffset = padOffset;\n    this.isLE = isLE;\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    aexists(this);\n    data = toBytes(data);\n    abytes(data);\n    const { view, buffer, blockLen } = this;\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array): void {\n    aexists(this);\n    aoutput(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    clean(this.buffer.subarray(pos));\n    // we have less than padOffset left in buffer, so we cannot put length in\n    // current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest(): Uint8Array {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.destroyed = destroyed;\n    to.finished = finished;\n    to.length = length;\n    to.pos = pos;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * Initial SHA-2 state: fractional parts of square roots of first 16 primes 2..53.\n * Check out `test/misc/sha2-gen-iv.js` for recomputation guide.\n */\n\n/** Initial SHA256 state. Bits 0..32 of frac part of sqrt of primes 2..19 */\nexport const SHA256_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19,\n]);\n\n/** Initial SHA224 state. Bits 32..64 of frac part of sqrt of primes 23..53 */\nexport const SHA224_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4,\n]);\n\n/** Initial SHA384 state. Bits 0..64 of frac part of sqrt of primes 23..53 */\nexport const SHA384_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939,\n  0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4,\n]);\n\n/** Initial SHA512 state. Bits 0..64 of frac part of sqrt of primes 2..19 */\nexport const SHA512_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1,\n  0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179,\n]);\n","/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\nfunction fromBig(\n  n: bigint,\n  le = false\n): {\n  h: number;\n  l: number;\n} {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false): Uint32Array[] {\n  const len = lst.length;\n  let Ah = new Uint32Array(len);\n  let Al = new Uint32Array(len);\n  for (let i = 0; i < len; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number): bigint => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number): number => h >>> s;\nconst shrSL = (h: number, l: number, s: number): number => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number): number => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number): number => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number): number => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number): number => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number): number => l;\nconst rotr32L = (h: number, _l: number): number => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number): number => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number): number => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number): number => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number): number => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(\n  Ah: number,\n  Al: number,\n  Bh: number,\n  Bl: number\n): {\n  h: number;\n  l: number;\n} {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number): number => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number): number =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number): number =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number): number =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number): number =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number): number =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  add, add3H, add3L, add4H, add4L, add5H, add5L, fromBig, rotlBH, rotlBL, rotlSH, rotlSL, rotr32H, rotr32L, rotrBH, rotrBL, rotrSH, rotrSL, shrSH, shrSL, split, toBig\n};\n// prettier-ignore\nconst u64: { fromBig: typeof fromBig; split: typeof split; toBig: (h: number, l: number) => bigint; shrSH: (h: number, _l: number, s: number) => number; shrSL: (h: number, l: number, s: number) => number; rotrSH: (h: number, l: number, s: number) => number; rotrSL: (h: number, l: number, s: number) => number; rotrBH: (h: number, l: number, s: number) => number; rotrBL: (h: number, l: number, s: number) => number; rotr32H: (_h: number, l: number) => number; rotr32L: (h: number, _l: number) => number; rotlSH: (h: number, l: number, s: number) => number; rotlSL: (h: number, l: number, s: number) => number; rotlBH: (h: number, l: number, s: number) => number; rotlBL: (h: number, l: number, s: number) => number; add: typeof add; add3L: (Al: number, Bl: number, Cl: number) => number; add3H: (low: number, Ah: number, Bh: number, Ch: number) => number; add4L: (Al: number, Bl: number, Cl: number, Dl: number) => number; add4H: (low: number, Ah: number, Bh: number, Ch: number, Dh: number) => number; add5H: (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) => number; add5L: (Al: number, Bl: number, Cl: number, Dl: number, El: number) => number; } = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","/**\n * SHA2 hash function. A.k.a. sha256, sha384, sha512, sha512_224, sha512_256.\n * SHA256 is the fastest hash implementable in JS, even faster than Blake3.\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\nimport { Chi, HashMD, Maj, SHA224_IV, SHA256_IV, SHA384_IV, SHA512_IV } from './_md.ts';\nimport * as u64 from './_u64.ts';\nimport { type CHash, clean, createHasher, rotr } from './utils.ts';\n\n/**\n * Round constants:\n * First 32 bits of fractional parts of the cube roots of the first 64 primes 2..311)\n */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ Uint32Array.from([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n/** Reusable temporary buffer. \"W\" comes straight from spec. */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  protected A: number = SHA256_IV[0] | 0;\n  protected B: number = SHA256_IV[1] | 0;\n  protected C: number = SHA256_IV[2] | 0;\n  protected D: number = SHA256_IV[3] | 0;\n  protected E: number = SHA256_IV[4] | 0;\n  protected F: number = SHA256_IV[5] | 0;\n  protected G: number = SHA256_IV[6] | 0;\n  protected H: number = SHA256_IV[7] | 0;\n\n  constructor(outputLen: number = 32) {\n    super(64, outputLen, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ): void {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean(): void {\n    clean(SHA256_W);\n  }\n  destroy(): void {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    clean(this.buffer);\n  }\n}\n\nexport class SHA224 extends SHA256 {\n  protected A: number = SHA224_IV[0] | 0;\n  protected B: number = SHA224_IV[1] | 0;\n  protected C: number = SHA224_IV[2] | 0;\n  protected D: number = SHA224_IV[3] | 0;\n  protected E: number = SHA224_IV[4] | 0;\n  protected F: number = SHA224_IV[5] | 0;\n  protected G: number = SHA224_IV[6] | 0;\n  protected H: number = SHA224_IV[7] | 0;\n  constructor() {\n    super(28);\n  }\n}\n\n// SHA2-512 is slower than sha256 in js because u64 operations are slow.\n\n// Round contants\n// First 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409\n// prettier-ignore\nconst K512 = /* @__PURE__ */ (() => u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\nconst SHA512_Kh = /* @__PURE__ */ (() => K512[0])();\nconst SHA512_Kl = /* @__PURE__ */ (() => K512[1])();\n\n// Reusable temporary buffers\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\n\nexport class SHA512 extends HashMD<SHA512> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  // h -- high 32 bits, l -- low 32 bits\n  protected Ah: number = SHA512_IV[0] | 0;\n  protected Al: number = SHA512_IV[1] | 0;\n  protected Bh: number = SHA512_IV[2] | 0;\n  protected Bl: number = SHA512_IV[3] | 0;\n  protected Ch: number = SHA512_IV[4] | 0;\n  protected Cl: number = SHA512_IV[5] | 0;\n  protected Dh: number = SHA512_IV[6] | 0;\n  protected Dl: number = SHA512_IV[7] | 0;\n  protected Eh: number = SHA512_IV[8] | 0;\n  protected El: number = SHA512_IV[9] | 0;\n  protected Fh: number = SHA512_IV[10] | 0;\n  protected Fl: number = SHA512_IV[11] | 0;\n  protected Gh: number = SHA512_IV[12] | 0;\n  protected Gl: number = SHA512_IV[13] | 0;\n  protected Hh: number = SHA512_IV[14] | 0;\n  protected Hl: number = SHA512_IV[15] | 0;\n\n  constructor(outputLen: number = 64) {\n    super(128, outputLen, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ): void {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean(): void {\n    clean(SHA512_W_H, SHA512_W_L);\n  }\n  destroy(): void {\n    clean(this.buffer);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nexport class SHA384 extends SHA512 {\n  protected Ah: number = SHA384_IV[0] | 0;\n  protected Al: number = SHA384_IV[1] | 0;\n  protected Bh: number = SHA384_IV[2] | 0;\n  protected Bl: number = SHA384_IV[3] | 0;\n  protected Ch: number = SHA384_IV[4] | 0;\n  protected Cl: number = SHA384_IV[5] | 0;\n  protected Dh: number = SHA384_IV[6] | 0;\n  protected Dl: number = SHA384_IV[7] | 0;\n  protected Eh: number = SHA384_IV[8] | 0;\n  protected El: number = SHA384_IV[9] | 0;\n  protected Fh: number = SHA384_IV[10] | 0;\n  protected Fl: number = SHA384_IV[11] | 0;\n  protected Gh: number = SHA384_IV[12] | 0;\n  protected Gl: number = SHA384_IV[13] | 0;\n  protected Hh: number = SHA384_IV[14] | 0;\n  protected Hl: number = SHA384_IV[15] | 0;\n\n  constructor() {\n    super(48);\n  }\n}\n\n/**\n * Truncated SHA512/256 and SHA512/224.\n * SHA512_IV is XORed with 0xa5a5a5a5a5a5a5a5, then used as \"intermediary\" IV of SHA512/t.\n * Then t hashes string to produce result IV.\n * See `test/misc/sha2-gen-iv.js`.\n */\n\n/** SHA512/224 IV */\nconst T224_IV = /* @__PURE__ */ Uint32Array.from([\n  0x8c3d37c8, 0x19544da2, 0x73e19966, 0x89dcd4d6, 0x1dfab7ae, 0x32ff9c82, 0x679dd514, 0x582f9fcf,\n  0x0f6d2b69, 0x7bd44da8, 0x77e36f73, 0x04c48942, 0x3f9d85a8, 0x6a1d36c8, 0x1112e6ad, 0x91d692a1,\n]);\n\n/** SHA512/256 IV */\nconst T256_IV = /* @__PURE__ */ Uint32Array.from([\n  0x22312194, 0xfc2bf72c, 0x9f555fa3, 0xc84c64c2, 0x2393b86b, 0x6f53b151, 0x96387719, 0x5940eabd,\n  0x96283ee2, 0xa88effe3, 0xbe5e1e25, 0x53863992, 0x2b0199fc, 0x2c85b8aa, 0x0eb72ddc, 0x81c52ca2,\n]);\n\nexport class SHA512_224 extends SHA512 {\n  protected Ah: number = T224_IV[0] | 0;\n  protected Al: number = T224_IV[1] | 0;\n  protected Bh: number = T224_IV[2] | 0;\n  protected Bl: number = T224_IV[3] | 0;\n  protected Ch: number = T224_IV[4] | 0;\n  protected Cl: number = T224_IV[5] | 0;\n  protected Dh: number = T224_IV[6] | 0;\n  protected Dl: number = T224_IV[7] | 0;\n  protected Eh: number = T224_IV[8] | 0;\n  protected El: number = T224_IV[9] | 0;\n  protected Fh: number = T224_IV[10] | 0;\n  protected Fl: number = T224_IV[11] | 0;\n  protected Gh: number = T224_IV[12] | 0;\n  protected Gl: number = T224_IV[13] | 0;\n  protected Hh: number = T224_IV[14] | 0;\n  protected Hl: number = T224_IV[15] | 0;\n\n  constructor() {\n    super(28);\n  }\n}\n\nexport class SHA512_256 extends SHA512 {\n  protected Ah: number = T256_IV[0] | 0;\n  protected Al: number = T256_IV[1] | 0;\n  protected Bh: number = T256_IV[2] | 0;\n  protected Bl: number = T256_IV[3] | 0;\n  protected Ch: number = T256_IV[4] | 0;\n  protected Cl: number = T256_IV[5] | 0;\n  protected Dh: number = T256_IV[6] | 0;\n  protected Dl: number = T256_IV[7] | 0;\n  protected Eh: number = T256_IV[8] | 0;\n  protected El: number = T256_IV[9] | 0;\n  protected Fh: number = T256_IV[10] | 0;\n  protected Fl: number = T256_IV[11] | 0;\n  protected Gh: number = T256_IV[12] | 0;\n  protected Gl: number = T256_IV[13] | 0;\n  protected Hh: number = T256_IV[14] | 0;\n  protected Hl: number = T256_IV[15] | 0;\n\n  constructor() {\n    super(32);\n  }\n}\n\n/**\n * SHA2-256 hash function from RFC 4634.\n *\n * It is the fastest JS hash, even faster than Blake3.\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n */\nexport const sha256: CHash = /* @__PURE__ */ createHasher(() => new SHA256());\n/** SHA2-224 hash function from RFC 4634 */\nexport const sha224: CHash = /* @__PURE__ */ createHasher(() => new SHA224());\n\n/** SHA2-512 hash function from RFC 4634. */\nexport const sha512: CHash = /* @__PURE__ */ createHasher(() => new SHA512());\n/** SHA2-384 hash function from RFC 4634. */\nexport const sha384: CHash = /* @__PURE__ */ createHasher(() => new SHA384());\n\n/**\n * SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_256: CHash = /* @__PURE__ */ createHasher(() => new SHA512_256());\n/**\n * SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_224: CHash = /* @__PURE__ */ createHasher(() => new SHA512_224());\n","/**\n * HMAC: RFC2104 message authentication code.\n * @module\n */\nimport { abytes, aexists, ahash, clean, Hash, toBytes, type CHash, type Input } from './utils.ts';\n\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    ahash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    clean(pad);\n  }\n  update(buf: Input): this {\n    aexists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array): void {\n    aexists(this);\n    abytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest(): Uint8Array {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  clone(): HMAC<T> {\n    return this._cloneInto();\n  }\n  destroy(): void {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n * @example\n * import { hmac } from '@noble/hashes/hmac';\n * import { sha256 } from '@noble/hashes/sha2';\n * const mac1 = hmac(sha256, 'key', 'message');\n */\nexport const hmac: {\n  (hash: CHash, key: Input, message: Input): Uint8Array;\n  create(hash: CHash, key: Input): HMAC<any>;\n} = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n","/**\n * Hex, bytes and number utilities.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport {\n  abytes as abytes_,\n  bytesToHex as bytesToHex_,\n  concatBytes as concatBytes_,\n  hexToBytes as hexToBytes_,\n  isBytes as isBytes_,\n} from '@noble/hashes/utils.js';\nexport {\n  abytes,\n  anumber,\n  bytesToHex,\n  bytesToUtf8,\n  concatBytes,\n  hexToBytes,\n  isBytes,\n  randomBytes,\n  utf8ToBytes,\n} from '@noble/hashes/utils.js';\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nexport type Hex = Uint8Array | string; // hex strings are accepted for simplicity\nexport type PrivKey = Hex | bigint; // bigints are accepted to ease learning curve\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nexport function abool(title: string, value: boolean): void {\n  if (typeof value !== 'boolean') throw new Error(title + ' boolean expected, got ' + value);\n}\n\n// tmp name until v2\nexport function _abool2(value: boolean, title: string = ''): boolean {\n  if (typeof value !== 'boolean') {\n    const prefix = title && `\"${title}\"`;\n    throw new Error(prefix + 'expected boolean, got type=' + typeof value);\n  }\n  return value;\n}\n\n// tmp name until v2\n/** Asserts something is Uint8Array. */\nexport function _abytes2(value: Uint8Array, length?: number, title: string = ''): Uint8Array {\n  const bytes = isBytes_(value);\n  const len = value?.length;\n  const needsLen = length !== undefined;\n  if (!bytes || (needsLen && len !== length)) {\n    const prefix = title && `\"${title}\" `;\n    const ofLen = needsLen ? ` of length ${length}` : '';\n    const got = bytes ? `length=${len}` : `type=${typeof value}`;\n    throw new Error(prefix + 'expected Uint8Array' + ofLen + ', got ' + got);\n  }\n  return value;\n}\n\n// Used in weierstrass, der\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? '0' + hex : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  return hex === '' ? _0n : BigInt('0x' + hex); // Big Endian\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex_(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  abytes_(bytes);\n  return hexToNumber(bytesToHex_(Uint8Array.from(bytes).reverse()));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes_(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n: number | bigint, len: number): Uint8Array {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n: number | bigint): Uint8Array {\n  return hexToBytes_(numberToHexUnpadded(n));\n}\n\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'secret key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes_(hex);\n    } catch (e) {\n      throw new Error(title + ' must be hex string or Uint8Array, cause: ' + e);\n    }\n  } else if (isBytes_(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(title + ' must be hex string or Uint8Array');\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(title + ' of length ' + expectedLength + ' expected, got ' + len);\n  return res;\n}\n\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a: Uint8Array, b: Uint8Array): boolean {\n  if (a.length !== b.length) return false;\n  let diff = 0;\n  for (let i = 0; i < a.length; i++) diff |= a[i] ^ b[i];\n  return diff === 0;\n}\n/**\n * Copies Uint8Array. We can't use u8a.slice(), because u8a can be Buffer,\n * and Buffer#slice creates mutable copy. Never use Buffers!\n */\nexport function copyBytes(bytes: Uint8Array): Uint8Array {\n  return Uint8Array.from(bytes);\n}\n\n/**\n * Decodes 7-bit ASCII string to Uint8Array, throws on non-ascii symbols\n * Should be safe to use for things expected to be ASCII.\n * Returns exact same result as utf8ToBytes for ASCII or throws.\n */\nexport function asciiToBytes(ascii: string): Uint8Array {\n  return Uint8Array.from(ascii, (c, i) => {\n    const charCode = c.charCodeAt(0);\n    if (c.length !== 1 || charCode > 127) {\n      throw new Error(\n        `string contains non-ASCII character \"${ascii[i]}\" with code ${charCode} at position ${i}`\n      );\n    }\n    return charCode;\n  });\n}\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\n// export const utf8ToBytes: typeof utf8ToBytes_ = utf8ToBytes_;\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\n// export const bytesToUtf8: typeof bytesToUtf8_ = bytesToUtf8_;\n\n// Is positive bigint\nconst isPosBig = (n: bigint) => typeof n === 'bigint' && _0n <= n;\n\nexport function inRange(n: bigint, min: bigint, max: bigint): boolean {\n  return isPosBig(n) && isPosBig(min) && isPosBig(max) && min <= n && n < max;\n}\n\n/**\n * Asserts min <= n < max. NOTE: It's < max and not <= max.\n * @example\n * aInRange('x', x, 1n, 256n); // would assume x is in (1n..255n)\n */\nexport function aInRange(title: string, n: bigint, min: bigint, max: bigint): void {\n  // Why min <= n < max and not a (min < n < max) OR b (min <= n <= max)?\n  // consider P=256n, min=0n, max=P\n  // - a for min=0 would require -1:          `inRange('x', x, -1n, P)`\n  // - b would commonly require subtraction:  `inRange('x', x, 0n, P - 1n)`\n  // - our way is the cleanest:               `inRange('x', x, 0n, P)\n  if (!inRange(n, min, max))\n    throw new Error('expected valid ' + title + ': ' + min + ' <= n < ' + max + ', got ' + n);\n}\n\n// Bit operations\n\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n * TODO: merge with nLength in modular\n */\nexport function bitLen(n: bigint): number {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n: bigint, pos: number): bigint {\n  return (n >> BigInt(pos)) & _1n;\n}\n\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n: bigint, pos: number, value: boolean): bigint {\n  return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n: number): bigint => (_1n << BigInt(n)) - _1n;\n\n// DRBG\n\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  const u8n = (len: number) => new Uint8Array(len); // creates Uint8Array\n  const u8of = (byte: number) => Uint8Array.of(byte); // another shortcut\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n(0)) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8of(0x00), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8of(0x01), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes_(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any): boolean => typeof val === 'bigint',\n  function: (val: any): boolean => typeof val === 'function',\n  boolean: (val: any): boolean => typeof val === 'boolean',\n  string: (val: any): boolean => typeof val === 'string',\n  stringOrUint8Array: (val: any): boolean => typeof val === 'string' || isBytes_(val),\n  isSafeInteger: (val: any): boolean => Number.isSafeInteger(val),\n  array: (val: any): boolean => Array.isArray(val),\n  field: (val: any, object: any): any => (object as any).Fp.isValid(val),\n  hash: (val: any): boolean => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n): T {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function') throw new Error('invalid validator function');\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        'param ' + String(fieldName) + ' is invalid. Expected ' + type + ', got ' + val\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n\nexport function isHash(val: CHash): boolean {\n  return typeof val === 'function' && Number.isSafeInteger(val.outputLen);\n}\nexport function _validateObject(\n  object: Record<string, any>,\n  fields: Record<string, string>,\n  optFields: Record<string, string> = {}\n): void {\n  if (!object || typeof object !== 'object') throw new Error('expected valid options object');\n  type Item = keyof typeof object;\n  function checkField(fieldName: Item, expectedType: string, isOpt: boolean) {\n    const val = object[fieldName];\n    if (isOpt && val === undefined) return;\n    const current = typeof val;\n    if (current !== expectedType || val === null)\n      throw new Error(`param \"${fieldName}\" is invalid: expected ${expectedType}, got ${current}`);\n  }\n  Object.entries(fields).forEach(([k, v]) => checkField(k, v, false));\n  Object.entries(optFields).forEach(([k, v]) => checkField(k, v, true));\n}\n\n/**\n * throws not implemented error\n */\nexport const notImplemented = (): never => {\n  throw new Error('not implemented');\n};\n\n/**\n * Memoizes (caches) computation result.\n * Uses WeakMap: the value is going auto-cleaned by GC after last reference is removed.\n */\nexport function memoized<T extends object, R, O extends any[]>(\n  fn: (arg: T, ...args: O) => R\n): (arg: T, ...args: O) => R {\n  const map = new WeakMap<T, R>();\n  return (arg: T, ...args: O): R => {\n    const val = map.get(arg);\n    if (val !== undefined) return val;\n    const computed = fn(arg, ...args);\n    map.set(arg, computed);\n    return computed;\n  };\n}\n","/**\n * Utils for modular division and fields.\n * Field over 11 is a finite (Galois) field is integer number operations `mod 11`.\n * There is no division: it is replaced by modular multiplicative inverse.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport {\n  _validateObject,\n  anumber,\n  bitMask,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  numberToBytesBE,\n  numberToBytesLE,\n} from '../utils.ts';\n\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = /* @__PURE__ */ BigInt(2), _3n = /* @__PURE__ */ BigInt(3);\n// prettier-ignore\nconst _4n = /* @__PURE__ */ BigInt(4), _5n = /* @__PURE__ */ BigInt(5), _7n = /* @__PURE__ */ BigInt(7);\n// prettier-ignore\nconst _8n = /* @__PURE__ */ BigInt(8), _9n = /* @__PURE__ */ BigInt(9), _16n = /* @__PURE__ */ BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  return FpPow(Field(modulo), num, power);\n}\n\n/** Does `x^(2^power)` mod p. `pow2(30, 4)` == `30^(2^4)` */\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n/**\n * Inverses number over modulo.\n * Implemented using [Euclidean GCD](https://brilliant.org/wiki/extended-euclidean-algorithm/).\n */\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n) throw new Error('invert: expected non-zero number');\n  if (modulo <= _0n) throw new Error('invert: expected positive modulus, got ' + modulo);\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\nfunction assertIsSquare<T>(Fp: IField<T>, root: T, n: T): void {\n  if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n}\n\n// Not all roots are possible! Example which will throw:\n// const NUM =\n// n = 72057594037927816n;\n// Fp = Field(BigInt('0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab'));\nfunction sqrt3mod4<T>(Fp: IField<T>, n: T) {\n  const p1div4 = (Fp.ORDER + _1n) / _4n;\n  const root = Fp.pow(n, p1div4);\n  assertIsSquare(Fp, root, n);\n  return root;\n}\n\nfunction sqrt5mod8<T>(Fp: IField<T>, n: T) {\n  const p5div8 = (Fp.ORDER - _5n) / _8n;\n  const n2 = Fp.mul(n, _2n);\n  const v = Fp.pow(n2, p5div8);\n  const nv = Fp.mul(n, v);\n  const i = Fp.mul(Fp.mul(nv, _2n), v);\n  const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n  assertIsSquare(Fp, root, n);\n  return root;\n}\n\n// Based on RFC9380, Kong algorithm\n// prettier-ignore\nfunction sqrt9mod16(P: bigint): <T>(Fp: IField<T>, n: T) => T {\n  const Fp_ = Field(P);\n  const tn = tonelliShanks(P);\n  const c1 = tn(Fp_, Fp_.neg(Fp_.ONE));//  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n  const c2 = tn(Fp_, c1);              //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n  const c3 = tn(Fp_, Fp_.neg(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n  const c4 = (P + _7n) / _16n;         //  4. c4 = (q + 7) / 16        # Integer arithmetic\n  return <T>(Fp: IField<T>, n: T) => {\n    let tv1 = Fp.pow(n, c4);           //  1. tv1 = x^c4\n    let tv2 = Fp.mul(tv1, c1);         //  2. tv2 = c1 * tv1\n    const tv3 = Fp.mul(tv1, c2);       //  3. tv3 = c2 * tv1\n    const tv4 = Fp.mul(tv1, c3);       //  4. tv4 = c3 * tv1\n    const e1 = Fp.eql(Fp.sqr(tv2), n); //  5.  e1 = (tv2^2) == x\n    const e2 = Fp.eql(Fp.sqr(tv3), n); //  6.  e2 = (tv3^2) == x\n    tv1 = Fp.cmov(tv1, tv2, e1);       //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    tv2 = Fp.cmov(tv4, tv3, e2);       //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    const e3 = Fp.eql(Fp.sqr(tv2), n); //  9.  e3 = (tv2^2) == x\n    const root = Fp.cmov(tv1, tv2, e3);// 10.  z = CMOV(tv1, tv2, e3)   # Select sqrt from tv1 & tv2\n    assertIsSquare(Fp, root, n);\n    return root;\n  };\n}\n\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P: bigint): <T>(Fp: IField<T>, n: T) => T {\n  // Initialization (precomputation).\n  // Caching initialization could boost perf by 7%.\n  if (P < _3n) throw new Error('sqrt is not defined for small field');\n  // Factor P - 1 = Q * 2^S, where Q is odd\n  let Q = P - _1n;\n  let S = 0;\n  while (Q % _2n === _0n) {\n    Q /= _2n;\n    S++;\n  }\n\n  // Find the first quadratic non-residue Z >= 2\n  let Z = _2n;\n  const _Fp = Field(P);\n  while (FpLegendre(_Fp, Z) === 1) {\n    // Basic primality test for P. After x iterations, chance of\n    // not finding quadratic non-residue is 2^x, so 2^1000.\n    if (Z++ > 1000) throw new Error('Cannot find square root: probably non-prime P');\n  }\n  // Fast-path; usually done before Z, but we do \"primality test\".\n  if (S === 1) return sqrt3mod4;\n\n  // Slow-path\n  // TODO: test on Fp2 and others\n  let cc = _Fp.pow(Z, Q); // c = z^Q\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    if (Fp.is0(n)) return n;\n    // Check if n is a quadratic residue using Legendre symbol\n    if (FpLegendre(Fp, n) !== 1) throw new Error('Cannot find square root');\n\n    // Initialize variables for the main loop\n    let M = S;\n    let c = Fp.mul(Fp.ONE, cc); // c = z^Q, move cc from field _Fp into field Fp\n    let t = Fp.pow(n, Q); // t = n^Q, first guess at the fudge factor\n    let R = Fp.pow(n, Q1div2); // R = n^((Q+1)/2), first guess at the square root\n\n    // Main loop\n    // while t != 1\n    while (!Fp.eql(t, Fp.ONE)) {\n      if (Fp.is0(t)) return Fp.ZERO; // if t=0 return R=0\n      let i = 1;\n\n      // Find the smallest i >= 1 such that t^(2^i) ≡ 1 (mod P)\n      let t_tmp = Fp.sqr(t); // t^(2^1)\n      while (!Fp.eql(t_tmp, Fp.ONE)) {\n        i++;\n        t_tmp = Fp.sqr(t_tmp); // t^(2^2)...\n        if (i === M) throw new Error('Cannot find square root');\n      }\n\n      // Calculate the exponent for b: 2^(M - i - 1)\n      const exponent = _1n << BigInt(M - i - 1); // bigint is important\n      const b = Fp.pow(c, exponent); // b = 2^(M - i - 1)\n\n      // Update variables\n      M = i;\n      c = Fp.sqr(b); // c = b^2\n      t = Fp.mul(t, c); // t = (t * b^2)\n      R = Fp.mul(R, b); // R = R*b\n    }\n    return R;\n  };\n}\n\n/**\n * Square root for a finite field. Will try optimized versions first:\n *\n * 1. P ≡ 3 (mod 4)\n * 2. P ≡ 5 (mod 8)\n * 3. P ≡ 9 (mod 16)\n * 4. Tonelli-Shanks algorithm\n *\n * Different algorithms can give different roots, it is up to user to decide which one they want.\n * For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n */\nexport function FpSqrt(P: bigint): <T>(Fp: IField<T>, n: T) => T {\n  // P ≡ 3 (mod 4) => √n = n^((P+1)/4)\n  if (P % _4n === _3n) return sqrt3mod4;\n  // P ≡ 5 (mod 8) => Atkin algorithm, page 10 of https://eprint.iacr.org/2012/685.pdf\n  if (P % _8n === _5n) return sqrt5mod8;\n  // P ≡ 9 (mod 16) => Kong algorithm, page 11 of https://eprint.iacr.org/2012/685.pdf (algorithm 4)\n  if (P % _16n === _9n) return sqrt9mod16(P);\n  // Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint): boolean =>\n  (mod(num, modulo) & _1n) === _1n;\n\n/** Field is not always over prime: for example, Fp2 has ORDER(q)=p^m. */\nexport interface IField<T> {\n  ORDER: bigint;\n  isLE: boolean;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  isValidNot0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in\n  // [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#section-4.1).\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  allowedLengths?: number[];\n  // legendre?(num: T): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array, skipValidation?: boolean): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>): IField<T> {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'number',\n    BITS: 'number',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  _validateObject(field, opts);\n  // const max = 16384;\n  // if (field.BYTES < 1 || field.BYTES > max) throw new Error('invalid field');\n  // if (field.BITS < 1 || field.BITS > 8 * max) throw new Error('invalid field');\n  return field;\n}\n\n// Generic field functions\n\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow<T>(Fp: IField<T>, num: T, power: bigint): T {\n  if (power < _0n) throw new Error('invalid exponent, negatives unsupported');\n  if (power === _0n) return Fp.ONE;\n  if (power === _1n) return num;\n  let p = Fp.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = Fp.mul(p, d);\n    d = Fp.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n/**\n * Efficiently invert an array of Field elements.\n * Exception-free. Will return `undefined` for 0 elements.\n * @param passZero map 0 to 0 (instead of undefined)\n */\nexport function FpInvertBatch<T>(Fp: IField<T>, nums: T[], passZero = false): T[] {\n  const inverted = new Array(nums.length).fill(passZero ? Fp.ZERO : undefined);\n  // Walk from first to last, multiply them by each other MOD p\n  const multipliedAcc = nums.reduce((acc, num, i) => {\n    if (Fp.is0(num)) return acc;\n    inverted[i] = acc;\n    return Fp.mul(acc, num);\n  }, Fp.ONE);\n  // Invert last element\n  const invertedAcc = Fp.inv(multipliedAcc);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (Fp.is0(num)) return acc;\n    inverted[i] = Fp.mul(acc, inverted[i]);\n    return Fp.mul(acc, num);\n  }, invertedAcc);\n  return inverted;\n}\n\n// TODO: remove\nexport function FpDiv<T>(Fp: IField<T>, lhs: T, rhs: T | bigint): T {\n  return Fp.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, Fp.ORDER) : Fp.inv(rhs));\n}\n\n/**\n * Legendre symbol.\n * Legendre constant is used to calculate Legendre symbol (a | p)\n * which denotes the value of a^((p-1)/2) (mod p).\n *\n * * (a | p) ≡ 1    if a is a square (mod p), quadratic residue\n * * (a | p) ≡ -1   if a is not a square (mod p), quadratic non residue\n * * (a | p) ≡ 0    if a ≡ 0 (mod p)\n */\nexport function FpLegendre<T>(Fp: IField<T>, n: T): -1 | 0 | 1 {\n  // We can use 3rd argument as optional cache of this value\n  // but seems unneeded for now. The operation is very fast.\n  const p1mod2 = (Fp.ORDER - _1n) / _2n;\n  const powered = Fp.pow(n, p1mod2);\n  const yes = Fp.eql(powered, Fp.ONE);\n  const zero = Fp.eql(powered, Fp.ZERO);\n  const no = Fp.eql(powered, Fp.neg(Fp.ONE));\n  if (!yes && !zero && !no) throw new Error('invalid Legendre symbol result');\n  return yes ? 1 : zero ? 0 : -1;\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(Fp: IField<T>, n: T): boolean {\n  const l = FpLegendre(Fp, n);\n  return l === 1;\n}\n\nexport type NLength = { nByteLength: number; nBitLength: number };\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number): NLength {\n  // Bit size, byte size of CURVE.n\n  if (nBitLength !== undefined) anumber(nBitLength);\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\ntype SqrtFn = (n: bigint) => bigint;\ntype FieldOpts = Partial<{\n  sqrt: SqrtFn;\n  isLE: boolean;\n  BITS: number;\n  modFromBytes: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  allowedLengths?: readonly number[]; // for P521 (adds padding for smaller sizes)\n}>;\n/**\n * Creates a finite field. Major performance optimizations:\n * * 1. Denormalized operations like mulN instead of mul.\n * * 2. Identical object shape: never add or remove keys.\n * * 3. `Object.freeze`.\n * Fragile: always run a benchmark on a change.\n * Security note: operations don't check 'isValid' for all elements for performance reasons,\n * it is caller responsibility to check this.\n * This is low-level code, please make sure you know what you're doing.\n *\n * Note about field properties:\n * * CHARACTERISTIC p = prime number, number of elements in main subgroup.\n * * ORDER q = similar to cofactor in curves, may be composite `q = p^m`.\n *\n * @param ORDER field order, probably prime, or could be composite\n * @param bitLen how many bits the field consumes\n * @param isLE (default: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLenOrOpts?: number | FieldOpts, // TODO: use opts only in v2?\n  isLE = false,\n  opts: { sqrt?: SqrtFn } = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error('invalid field: expected ORDER > 0, got ' + ORDER);\n  let _nbitLength: number | undefined = undefined;\n  let _sqrt: SqrtFn | undefined = undefined;\n  let modFromBytes: boolean = false;\n  let allowedLengths: undefined | readonly number[] = undefined;\n  if (typeof bitLenOrOpts === 'object' && bitLenOrOpts != null) {\n    if (opts.sqrt || isLE) throw new Error('cannot specify opts in two arguments');\n    const _opts = bitLenOrOpts;\n    if (_opts.BITS) _nbitLength = _opts.BITS;\n    if (_opts.sqrt) _sqrt = _opts.sqrt;\n    if (typeof _opts.isLE === 'boolean') isLE = _opts.isLE;\n    if (typeof _opts.modFromBytes === 'boolean') modFromBytes = _opts.modFromBytes;\n    allowedLengths = _opts.allowedLengths;\n  } else {\n    if (typeof bitLenOrOpts === 'number') _nbitLength = bitLenOrOpts;\n    if (opts.sqrt) _sqrt = opts.sqrt;\n  }\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, _nbitLength);\n  if (BYTES > 2048) throw new Error('invalid field: expected ORDER of <= 2048 bytes');\n  let sqrtP: ReturnType<typeof FpSqrt>; // cached sqrtP\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    isLE,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    allowedLengths: allowedLengths,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error('invalid field element: expected bigint, got ' + typeof num);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    // is valid and invertible\n    isValidNot0: (num: bigint) => !f.is0(num) && f.isValid(num),\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt:\n      _sqrt ||\n      ((n) => {\n        if (!sqrtP) sqrtP = FpSqrt(ORDER);\n        return sqrtP(f, n);\n      }),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes, skipValidation = true) => {\n      if (allowedLengths) {\n        if (!allowedLengths.includes(bytes.length) || bytes.length > BYTES) {\n          throw new Error(\n            'Field.fromBytes: expected ' + allowedLengths + ' bytes, got ' + bytes.length\n          );\n        }\n        const padded = new Uint8Array(BYTES);\n        // isLE add 0 to right, !isLE to the left.\n        padded.set(bytes, isLE ? 0 : padded.length - bytes.length);\n        bytes = padded;\n      }\n      if (bytes.length !== BYTES)\n        throw new Error('Field.fromBytes: expected ' + BYTES + ' bytes, got ' + bytes.length);\n      let scalar = isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n      if (modFromBytes) scalar = mod(scalar, ORDER);\n      if (!skipValidation)\n        if (!f.isValid(scalar)) throw new Error('invalid field element: outside of range 0..ORDER');\n      // NOTE: we don't validate scalar here, please use isValid. This done such way because some\n      // protocol may allow non-reduced scalar that reduced later or changed some other way.\n      return scalar;\n    },\n    // TODO: we don't need it here, move out to separate fn\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // We can't move this out because Fp6, Fp12 implement it\n    // and it's unclear what to return in there.\n    cmov: (a, b, c) => (c ? b : a),\n  } as FpField);\n  return Object.freeze(f);\n}\n\n// Generic random scalar, we can do same for other fields if via Fp2.mul(Fp2.ONE, Fp2.random)?\n// This allows unsafe methods like ignore bias or zero. These unsafe, but often used in different protocols (if deterministic RNG).\n// which mean we cannot force this via opts.\n// Not sure what to do with randomBytes, we can accept it inside opts if wanted.\n// Probably need to export getMinHashLength somewhere?\n// random(bytes?: Uint8Array, unsafeAllowZero = false, unsafeAllowBias = false) {\n//   const LEN = !unsafeAllowBias ? getMinHashLength(ORDER) : BYTES;\n//   if (bytes === undefined) bytes = randomBytes(LEN); // _opts.randomBytes?\n//   const num = isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n//   // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n//   const reduced = unsafeAllowZero ? mod(num, ORDER) : mod(num, ORDER - _1n) + _1n;\n//   return reduced;\n// },\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T): T {\n  if (!Fp.isOdd) throw new Error(\"Field doesn't have isOdd\");\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T): T {\n  if (!Fp.isOdd) throw new Error(\"Field doesn't have isOdd\");\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use `mapKeyToField` instead\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(\n      'hashToPrivateScalar: expected ' + minLen + '-1024 bytes of input, got ' + hashLen\n    );\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder: bigint): number {\n  if (typeof fieldOrder !== 'bigint') throw new Error('field order must be bigint');\n  const bitLength = fieldOrder.toString(2).length;\n  return Math.ceil(bitLength / 8);\n}\n\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder: bigint): number {\n  const length = getFieldBytesLength(fieldOrder);\n  return length + Math.ceil(length / 2);\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key: Uint8Array, fieldOrder: bigint, isLE = false): Uint8Array {\n  const len = key.length;\n  const fieldLen = getFieldBytesLength(fieldOrder);\n  const minLen = getMinHashLength(fieldOrder);\n  // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n  if (len < 16 || len < minLen || len > 1024)\n    throw new Error('expected ' + minLen + '-1024 bytes of input, got ' + len);\n  const num = isLE ? bytesToNumberLE(key) : bytesToNumberBE(key);\n  // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n  const reduced = mod(num, fieldOrder - _1n) + _1n;\n  return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n","/**\n * Methods for elliptic curve multiplication by scalars.\n * Contains wNAF, pippenger.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { bitLen, bitMask, validateObject } from '../utils.ts';\nimport { Field, FpInvertBatch, nLength, validateField, type IField } from './modular.ts';\n\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { Z?: never };\n\n// This was initialy do this way to re-use montgomery ladder in field (add->mul,double->sqr), but\n// that didn't happen and there is probably not much reason to have separate Group like this?\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n  toAffine?(invertedZ?: any): AffinePoint<any>;\n}\n\n// We can't \"abstract out\" coordinates (X, Y, Z; and T in Edwards): argument names of constructor\n// are not accessible. See Typescript gh-56093, gh-41594.\n//\n// We have to use recursive types, so it will return actual point, not constained `CurvePoint`.\n// If, at any point, P is `any`, it will erase all types and replace it\n// with `any`, because of recursion, `any implements CurvePoint`,\n// but we lose all constrains on methods.\n\n/** Base interface for all elliptic curve Points. */\nexport interface CurvePoint<F, P extends CurvePoint<F, P>> extends Group<P> {\n  /** Affine x coordinate. Different from projective / extended X coordinate. */\n  x: F;\n  /** Affine y coordinate. Different from projective / extended Y coordinate. */\n  y: F;\n  Z?: F;\n  double(): P;\n  negate(): P;\n  add(other: P): P;\n  subtract(other: P): P;\n  equals(other: P): boolean;\n  multiply(scalar: bigint): P;\n  assertValidity(): void;\n  clearCofactor(): P;\n  is0(): boolean;\n  isTorsionFree(): boolean;\n  isSmallOrder(): boolean;\n  multiplyUnsafe(scalar: bigint): P;\n  /**\n   * Massively speeds up `p.multiply(n)` by using precompute tables (caching). See {@link wNAF}.\n   * @param isLazy calculate cache now. Default (true) ensures it's deferred to first `multiply()`\n   */\n  precompute(windowSize?: number, isLazy?: boolean): P;\n  /** Converts point to 2D xy affine coordinates */\n  toAffine(invertedZ?: F): AffinePoint<F>;\n  toBytes(): Uint8Array;\n  toHex(): string;\n}\n\n/** Base interface for all elliptic curve Point constructors. */\nexport interface CurvePointCons<P extends CurvePoint<any, P>> {\n  [Symbol.hasInstance]: (item: unknown) => boolean;\n  BASE: P;\n  ZERO: P;\n  /** Field for basic curve math */\n  Fp: IField<P_F<P>>;\n  /** Scalar field, for scalars in multiply and others */\n  Fn: IField<bigint>;\n  /** Creates point from x, y. Does NOT validate if the point is valid. Use `.assertValidity()`. */\n  fromAffine(p: AffinePoint<P_F<P>>): P;\n  fromBytes(bytes: Uint8Array): P;\n  fromHex(hex: Uint8Array | string): P;\n}\n\n// Type inference helpers: PC - PointConstructor, P - Point, Fp - Field element\n// Short names, because we use them a lot in result types:\n// * we can't do 'P = GetCurvePoint<PC>': this is default value and doesn't constrain anything\n// * we can't do 'type X = GetCurvePoint<PC>': it won't be accesible for arguments/return types\n// * `CurvePointCons<P extends CurvePoint<any, P>>` constraints from interface definition\n//   won't propagate, if `PC extends CurvePointCons<any>`: the P would be 'any', which is incorrect\n// * PC could be super specific with super specific P, which implements CurvePoint<any, P>.\n//   this means we need to do stuff like\n//   `function test<P extends CurvePoint<any, P>, PC extends CurvePointCons<P>>(`\n//   if we want type safety around P, otherwise PC_P<PC> will be any\n\n/** Returns Fp type from Point (P_F<P> == P.F) */\nexport type P_F<P extends CurvePoint<any, P>> = P extends CurvePoint<infer F, P> ? F : never;\n/** Returns Fp type from PointCons (PC_F<PC> == PC.P.F) */\nexport type PC_F<PC extends CurvePointCons<CurvePoint<any, any>>> = PC['Fp']['ZERO'];\n/** Returns Point type from PointCons (PC_P<PC> == PC.P) */\nexport type PC_P<PC extends CurvePointCons<CurvePoint<any, any>>> = PC['ZERO'];\n\n// Ugly hack to get proper type inference, because in typescript fails to infer resursively.\n// The hack allows to do up to 10 chained operations without applying type erasure.\n//\n// Types which won't work:\n// * `CurvePointCons<CurvePoint<any, any>>`, will return `any` after 1 operation\n// * `CurvePointCons<any>: WeierstrassPointCons<bigint> extends CurvePointCons<any> = false`\n// * `P extends CurvePoint, PC extends CurvePointCons<P>`\n//     * It can't infer P from PC alone\n//     * Too many relations between F, P & PC\n//     * It will infer P/F if `arg: CurvePointCons<F, P>`, but will fail if PC is generic\n//     * It will work correctly if there is an additional argument of type P\n//     * But generally, we don't want to parametrize `CurvePointCons` over `F`: it will complicate\n//       types, making them un-inferable\n// prettier-ignore\nexport type PC_ANY = CurvePointCons<\n  CurvePoint<any,\n  CurvePoint<any,\n  CurvePoint<any,\n  CurvePoint<any,\n  CurvePoint<any,\n  CurvePoint<any,\n  CurvePoint<any,\n  CurvePoint<any,\n  CurvePoint<any,\n  CurvePoint<any, any>\n  >>>>>>>>>\n>;\n\nexport interface CurveLengths {\n  secretKey?: number;\n  publicKey?: number;\n  publicKeyUncompressed?: number;\n  publicKeyHasPrefix?: boolean;\n  signature?: number;\n  seed?: number;\n}\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\n/** @deprecated */\nexport type ExtendedGroupConstructor<T> = GroupConstructor<T> & {\n  Fp: IField<any>;\n  Fn: IField<bigint>;\n  fromAffine(ap: AffinePoint<any>): T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\nexport function negateCt<T extends { negate: () => T }>(condition: boolean, item: T): T {\n  const neg = item.negate();\n  return condition ? neg : item;\n}\n\n/**\n * Takes a bunch of Projective Points but executes only one\n * inversion on all of them. Inversion is very slow operation,\n * so this improves performance massively.\n * Optimization: converts a list of projective points to a list of identical points with Z=1.\n */\nexport function normalizeZ<P extends CurvePoint<any, P>, PC extends CurvePointCons<P>>(\n  c: PC,\n  points: P[]\n): P[] {\n  const invertedZs = FpInvertBatch(\n    c.Fp,\n    points.map((p) => p.Z!)\n  );\n  return points.map((p, i) => c.fromAffine(p.toAffine(invertedZs[i])));\n}\n\nfunction validateW(W: number, bits: number) {\n  if (!Number.isSafeInteger(W) || W <= 0 || W > bits)\n    throw new Error('invalid window size, expected [1..' + bits + '], got W=' + W);\n}\n\n/** Internal wNAF opts for specific W and scalarBits */\nexport type WOpts = {\n  windows: number;\n  windowSize: number;\n  mask: bigint;\n  maxNumber: number;\n  shiftBy: bigint;\n};\n\nfunction calcWOpts(W: number, scalarBits: number): WOpts {\n  validateW(W, scalarBits);\n  const windows = Math.ceil(scalarBits / W) + 1; // W=8 33. Not 32, because we skip zero\n  const windowSize = 2 ** (W - 1); // W=8 128. Not 256, because we skip zero\n  const maxNumber = 2 ** W; // W=8 256\n  const mask = bitMask(W); // W=8 255 == mask 0b11111111\n  const shiftBy = BigInt(W); // W=8 8\n  return { windows, windowSize, mask, maxNumber, shiftBy };\n}\n\nfunction calcOffsets(n: bigint, window: number, wOpts: WOpts) {\n  const { windowSize, mask, maxNumber, shiftBy } = wOpts;\n  let wbits = Number(n & mask); // extract W bits.\n  let nextN = n >> shiftBy; // shift number by W bits.\n\n  // What actually happens here:\n  // const highestBit = Number(mask ^ (mask >> 1n));\n  // let wbits2 = wbits - 1; // skip zero\n  // if (wbits2 & highestBit) { wbits2 ^= Number(mask); // (~);\n\n  // split if bits > max: +224 => 256-32\n  if (wbits > windowSize) {\n    // we skip zero, which means instead of `>= size-1`, we do `> size`\n    wbits -= maxNumber; // -32, can be maxNumber - wbits, but then we need to set isNeg here.\n    nextN += _1n; // +256 (carry)\n  }\n  const offsetStart = window * windowSize;\n  const offset = offsetStart + Math.abs(wbits) - 1; // -1 because we skip zero\n  const isZero = wbits === 0; // is current window slice a 0?\n  const isNeg = wbits < 0; // is current window slice negative?\n  const isNegF = window % 2 !== 0; // fake random statement for noise\n  const offsetF = offsetStart; // fake offset for noise\n  return { nextN, offset, isZero, isNeg, isNegF, offsetF };\n}\n\nfunction validateMSMPoints(points: any[], c: any) {\n  if (!Array.isArray(points)) throw new Error('array expected');\n  points.forEach((p, i) => {\n    if (!(p instanceof c)) throw new Error('invalid point at index ' + i);\n  });\n}\nfunction validateMSMScalars(scalars: any[], field: any) {\n  if (!Array.isArray(scalars)) throw new Error('array of scalars expected');\n  scalars.forEach((s, i) => {\n    if (!field.isValid(s)) throw new Error('invalid scalar at index ' + i);\n  });\n}\n\n// Since points in different groups cannot be equal (different object constructor),\n// we can have single place to store precomputes.\n// Allows to make points frozen / immutable.\nconst pointPrecomputes = new WeakMap<any, any[]>();\nconst pointWindowSizes = new WeakMap<any, number>();\n\nfunction getW(P: any): number {\n  // To disable precomputes:\n  // return 1;\n  return pointWindowSizes.get(P) || 1;\n}\n\nfunction assert0(n: bigint): void {\n  if (n !== _0n) throw new Error('invalid wNAF');\n}\n\n/**\n * Elliptic curve multiplication of Point by scalar. Fragile.\n * Table generation takes **30MB of ram and 10ms on high-end CPU**,\n * but may take much longer on slow devices. Actual generation will happen on\n * first call of `multiply()`. By default, `BASE` point is precomputed.\n *\n * Scalars should always be less than curve order: this should be checked inside of a curve itself.\n * Creates precomputation tables for fast multiplication:\n * - private scalar is split by fixed size windows of W bits\n * - every window point is collected from window's table & added to accumulator\n * - since windows are different, same point inside tables won't be accessed more than once per calc\n * - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n * - +1 window is neccessary for wNAF\n * - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n *\n * @todo Research returning 2d JS array of windows, instead of a single window.\n * This would allow windows to be in different memory locations\n */\nexport class wNAF<PC extends PC_ANY> {\n  private readonly BASE: PC_P<PC>;\n  private readonly ZERO: PC_P<PC>;\n  private readonly Fn: PC['Fn'];\n  readonly bits: number;\n\n  // Parametrized with a given Point class (not individual point)\n  constructor(Point: PC, bits: number) {\n    this.BASE = Point.BASE;\n    this.ZERO = Point.ZERO;\n    this.Fn = Point.Fn;\n    this.bits = bits;\n  }\n\n  // non-const time multiplication ladder\n  _unsafeLadder(elm: PC_P<PC>, n: bigint, p: PC_P<PC> = this.ZERO): PC_P<PC> {\n    let d: PC_P<PC> = elm;\n    while (n > _0n) {\n      if (n & _1n) p = p.add(d);\n      d = d.double();\n      n >>= _1n;\n    }\n    return p;\n  }\n\n  /**\n   * Creates a wNAF precomputation window. Used for caching.\n   * Default window size is set by `utils.precompute()` and is equal to 8.\n   * Number of precomputed points depends on the curve size:\n   * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n   * - 𝑊 is the window size\n   * - 𝑛 is the bitlength of the curve order.\n   * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n   * @param point Point instance\n   * @param W window size\n   * @returns precomputed point tables flattened to a single array\n   */\n  private precomputeWindow(point: PC_P<PC>, W: number): PC_P<PC>[] {\n    const { windows, windowSize } = calcWOpts(W, this.bits);\n    const points: PC_P<PC>[] = [];\n    let p: PC_P<PC> = point;\n    let base = p;\n    for (let window = 0; window < windows; window++) {\n      base = p;\n      points.push(base);\n      // i=1, bc we skip 0\n      for (let i = 1; i < windowSize; i++) {\n        base = base.add(p);\n        points.push(base);\n      }\n      p = base.double();\n    }\n    return points;\n  }\n\n  /**\n   * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n   * More compact implementation:\n   * https://github.com/paulmillr/noble-secp256k1/blob/47cb1669b6e506ad66b35fe7d76132ae97465da2/index.ts#L502-L541\n   * @returns real and fake (for const-time) points\n   */\n  private wNAF(W: number, precomputes: PC_P<PC>[], n: bigint): { p: PC_P<PC>; f: PC_P<PC> } {\n    // Scalar should be smaller than field order\n    if (!this.Fn.isValid(n)) throw new Error('invalid scalar');\n    // Accumulators\n    let p = this.ZERO;\n    let f = this.BASE;\n    // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n    // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n    // there is negate now: it is possible that negated element from low value\n    // would be the same as high element, which will create carry into next window.\n    // It's not obvious how this can fail, but still worth investigating later.\n    const wo = calcWOpts(W, this.bits);\n    for (let window = 0; window < wo.windows; window++) {\n      // (n === _0n) is handled and not early-exited. isEven and offsetF are used for noise\n      const { nextN, offset, isZero, isNeg, isNegF, offsetF } = calcOffsets(n, window, wo);\n      n = nextN;\n      if (isZero) {\n        // bits are 0: add garbage to fake point\n        // Important part for const-time getPublicKey: add random \"noise\" point to f.\n        f = f.add(negateCt(isNegF, precomputes[offsetF]));\n      } else {\n        // bits are 1: add to result point\n        p = p.add(negateCt(isNeg, precomputes[offset]));\n      }\n    }\n    assert0(n);\n    // Return both real and fake points: JIT won't eliminate f.\n    // At this point there is a way to F be infinity-point even if p is not,\n    // which makes it less const-time: around 1 bigint multiply.\n    return { p, f };\n  }\n\n  /**\n   * Implements ec unsafe (non const-time) multiplication using precomputed tables and w-ary non-adjacent form.\n   * @param acc accumulator point to add result of multiplication\n   * @returns point\n   */\n  private wNAFUnsafe(\n    W: number,\n    precomputes: PC_P<PC>[],\n    n: bigint,\n    acc: PC_P<PC> = this.ZERO\n  ): PC_P<PC> {\n    const wo = calcWOpts(W, this.bits);\n    for (let window = 0; window < wo.windows; window++) {\n      if (n === _0n) break; // Early-exit, skip 0 value\n      const { nextN, offset, isZero, isNeg } = calcOffsets(n, window, wo);\n      n = nextN;\n      if (isZero) {\n        // Window bits are 0: skip processing.\n        // Move to next window.\n        continue;\n      } else {\n        const item = precomputes[offset];\n        acc = acc.add(isNeg ? item.negate() : item); // Re-using acc allows to save adds in MSM\n      }\n    }\n    assert0(n);\n    return acc;\n  }\n\n  private getPrecomputes(W: number, point: PC_P<PC>, transform?: Mapper<PC_P<PC>>): PC_P<PC>[] {\n    // Calculate precomputes on a first run, reuse them after\n    let comp = pointPrecomputes.get(point);\n    if (!comp) {\n      comp = this.precomputeWindow(point, W) as PC_P<PC>[];\n      if (W !== 1) {\n        // Doing transform outside of if brings 15% perf hit\n        if (typeof transform === 'function') comp = transform(comp);\n        pointPrecomputes.set(point, comp);\n      }\n    }\n    return comp;\n  }\n\n  cached(\n    point: PC_P<PC>,\n    scalar: bigint,\n    transform?: Mapper<PC_P<PC>>\n  ): { p: PC_P<PC>; f: PC_P<PC> } {\n    const W = getW(point);\n    return this.wNAF(W, this.getPrecomputes(W, point, transform), scalar);\n  }\n\n  unsafe(point: PC_P<PC>, scalar: bigint, transform?: Mapper<PC_P<PC>>, prev?: PC_P<PC>): PC_P<PC> {\n    const W = getW(point);\n    if (W === 1) return this._unsafeLadder(point, scalar, prev); // For W=1 ladder is ~x2 faster\n    return this.wNAFUnsafe(W, this.getPrecomputes(W, point, transform), scalar, prev);\n  }\n\n  // We calculate precomputes for elliptic curve point multiplication\n  // using windowed method. This specifies window size and\n  // stores precomputed values. Usually only base point would be precomputed.\n  createCache(P: PC_P<PC>, W: number): void {\n    validateW(W, this.bits);\n    pointWindowSizes.set(P, W);\n    pointPrecomputes.delete(P);\n  }\n\n  hasCache(elm: PC_P<PC>): boolean {\n    return getW(elm) !== 1;\n  }\n}\n\n/**\n * Endomorphism-specific multiplication for Koblitz curves.\n * Cost: 128 dbl, 0-256 adds.\n */\nexport function mulEndoUnsafe<P extends CurvePoint<any, P>, PC extends CurvePointCons<P>>(\n  Point: PC,\n  point: P,\n  k1: bigint,\n  k2: bigint\n): { p1: P; p2: P } {\n  let acc = point;\n  let p1 = Point.ZERO;\n  let p2 = Point.ZERO;\n  while (k1 > _0n || k2 > _0n) {\n    if (k1 & _1n) p1 = p1.add(acc);\n    if (k2 & _1n) p2 = p2.add(acc);\n    acc = acc.double();\n    k1 >>= _1n;\n    k2 >>= _1n;\n  }\n  return { p1, p2 };\n}\n\n/**\n * Pippenger algorithm for multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * 30x faster vs naive addition on L=4096, 10x faster than precomputes.\n * For N=254bit, L=1, it does: 1024 ADD + 254 DBL. For L=5: 1536 ADD + 254 DBL.\n * Algorithmically constant-time (for same L), even when 1 point + scalar, or when scalar = 0.\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @param scalars array of L scalars (aka secret keys / bigints)\n */\nexport function pippenger<P extends CurvePoint<any, P>, PC extends CurvePointCons<P>>(\n  c: PC,\n  fieldN: IField<bigint>,\n  points: P[],\n  scalars: bigint[]\n): P {\n  // If we split scalars by some window (let's say 8 bits), every chunk will only\n  // take 256 buckets even if there are 4096 scalars, also re-uses double.\n  // TODO:\n  // - https://eprint.iacr.org/2024/750.pdf\n  // - https://tches.iacr.org/index.php/TCHES/article/view/10287\n  // 0 is accepted in scalars\n  validateMSMPoints(points, c);\n  validateMSMScalars(scalars, fieldN);\n  const plength = points.length;\n  const slength = scalars.length;\n  if (plength !== slength) throw new Error('arrays of points and scalars must have equal length');\n  // if (plength === 0) throw new Error('array must be of length >= 2');\n  const zero = c.ZERO;\n  const wbits = bitLen(BigInt(plength));\n  let windowSize = 1; // bits\n  if (wbits > 12) windowSize = wbits - 3;\n  else if (wbits > 4) windowSize = wbits - 2;\n  else if (wbits > 0) windowSize = 2;\n  const MASK = bitMask(windowSize);\n  const buckets = new Array(Number(MASK) + 1).fill(zero); // +1 for zero array\n  const lastBits = Math.floor((fieldN.BITS - 1) / windowSize) * windowSize;\n  let sum = zero;\n  for (let i = lastBits; i >= 0; i -= windowSize) {\n    buckets.fill(zero);\n    for (let j = 0; j < slength; j++) {\n      const scalar = scalars[j];\n      const wbits = Number((scalar >> BigInt(i)) & MASK);\n      buckets[wbits] = buckets[wbits].add(points[j]);\n    }\n    let resI = zero; // not using this will do small speed-up, but will lose ct\n    // Skip first bucket, because it is zero\n    for (let j = buckets.length - 1, sumI = zero; j > 0; j--) {\n      sumI = sumI.add(buckets[j]);\n      resI = resI.add(sumI);\n    }\n    sum = sum.add(resI);\n    if (i !== 0) for (let j = 0; j < windowSize; j++) sum = sum.double();\n  }\n  return sum as P;\n}\n/**\n * Precomputed multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @returns function which multiplies points with scaars\n */\nexport function precomputeMSMUnsafe<P extends CurvePoint<any, P>, PC extends CurvePointCons<P>>(\n  c: PC,\n  fieldN: IField<bigint>,\n  points: P[],\n  windowSize: number\n): (scalars: bigint[]) => P {\n  /**\n   * Performance Analysis of Window-based Precomputation\n   *\n   * Base Case (256-bit scalar, 8-bit window):\n   * - Standard precomputation requires:\n   *   - 31 additions per scalar × 256 scalars = 7,936 ops\n   *   - Plus 255 summary additions = 8,191 total ops\n   *   Note: Summary additions can be optimized via accumulator\n   *\n   * Chunked Precomputation Analysis:\n   * - Using 32 chunks requires:\n   *   - 255 additions per chunk\n   *   - 256 doublings\n   *   - Total: (255 × 32) + 256 = 8,416 ops\n   *\n   * Memory Usage Comparison:\n   * Window Size | Standard Points | Chunked Points\n   * ------------|-----------------|---------------\n   *     4-bit   |     520         |      15\n   *     8-bit   |    4,224        |     255\n   *    10-bit   |   13,824        |   1,023\n   *    16-bit   |  557,056        |  65,535\n   *\n   * Key Advantages:\n   * 1. Enables larger window sizes due to reduced memory overhead\n   * 2. More efficient for smaller scalar counts:\n   *    - 16 chunks: (16 × 255) + 256 = 4,336 ops\n   *    - ~2x faster than standard 8,191 ops\n   *\n   * Limitations:\n   * - Not suitable for plain precomputes (requires 256 constant doublings)\n   * - Performance degrades with larger scalar counts:\n   *   - Optimal for ~256 scalars\n   *   - Less efficient for 4096+ scalars (Pippenger preferred)\n   */\n  validateW(windowSize, fieldN.BITS);\n  validateMSMPoints(points, c);\n  const zero = c.ZERO;\n  const tableSize = 2 ** windowSize - 1; // table size (without zero)\n  const chunks = Math.ceil(fieldN.BITS / windowSize); // chunks of item\n  const MASK = bitMask(windowSize);\n  const tables = points.map((p: P) => {\n    const res = [];\n    for (let i = 0, acc = p; i < tableSize; i++) {\n      res.push(acc);\n      acc = acc.add(p);\n    }\n    return res;\n  });\n  return (scalars: bigint[]): P => {\n    validateMSMScalars(scalars, fieldN);\n    if (scalars.length > points.length)\n      throw new Error('array of scalars must be smaller than array of points');\n    let res = zero;\n    for (let i = 0; i < chunks; i++) {\n      // No need to double if accumulator is still zero.\n      if (res !== zero) for (let j = 0; j < windowSize; j++) res = res.double();\n      const shiftBy = BigInt(chunks * windowSize - (i + 1) * windowSize);\n      for (let j = 0; j < scalars.length; j++) {\n        const n = scalars[j];\n        const curr = Number((n >> shiftBy) & MASK);\n        if (!curr) continue; // skip zero scalars chunks\n        res = res.add(tables[j][curr - 1]);\n      }\n    }\n    return res;\n  };\n}\n\n// TODO: remove\n/**\n * Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n * Though generator can be different (Fp2 / Fp6 for BLS).\n */\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\n// TODO: remove\n/** @deprecated */\nexport function validateBasic<FP, T>(\n  curve: BasicCurve<FP> & T\n): Readonly<\n  {\n    readonly nBitLength: number;\n    readonly nByteLength: number;\n  } & BasicCurve<FP> &\n    T & {\n      p: bigint;\n    }\n> {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n\nexport type ValidCurveParams<T> = {\n  p: bigint;\n  n: bigint;\n  h: bigint;\n  a: T;\n  b?: T;\n  d?: T;\n  Gx: T;\n  Gy: T;\n};\n\nfunction createField<T>(order: bigint, field?: IField<T>, isLE?: boolean): IField<T> {\n  if (field) {\n    if (field.ORDER !== order) throw new Error('Field.ORDER must match order: Fp == p, Fn == n');\n    validateField(field);\n    return field;\n  } else {\n    return Field(order, { isLE }) as unknown as IField<T>;\n  }\n}\nexport type FpFn<T> = { Fp: IField<T>; Fn: IField<bigint> };\n\n/** Validates CURVE opts and creates fields */\nexport function _createCurveFields<T>(\n  type: 'weierstrass' | 'edwards',\n  CURVE: ValidCurveParams<T>,\n  curveOpts: Partial<FpFn<T>> = {},\n  FpFnLE?: boolean\n): FpFn<T> & { CURVE: ValidCurveParams<T> } {\n  if (FpFnLE === undefined) FpFnLE = type === 'edwards';\n  if (!CURVE || typeof CURVE !== 'object') throw new Error(`expected valid ${type} CURVE object`);\n  for (const p of ['p', 'n', 'h'] as const) {\n    const val = CURVE[p];\n    if (!(typeof val === 'bigint' && val > _0n))\n      throw new Error(`CURVE.${p} must be positive bigint`);\n  }\n  const Fp = createField(CURVE.p, curveOpts.Fp, FpFnLE);\n  const Fn = createField(CURVE.n, curveOpts.Fn, FpFnLE);\n  const _b: 'b' | 'd' = type === 'weierstrass' ? 'b' : 'd';\n  const params = ['Gx', 'Gy', 'a', _b] as const;\n  for (const p of params) {\n    // @ts-ignore\n    if (!Fp.isValid(CURVE[p]))\n      throw new Error(`CURVE.${p} must be valid field element of CURVE.Fp`);\n  }\n  CURVE = Object.freeze(Object.assign({}, CURVE));\n  return { CURVE, Fp, Fn };\n}\n","/**\n * Short Weierstrass curve methods. The formula is: y² = x³ + ax + b.\n *\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance\n * of nominative types in TypeScript and interfaces only check for shape, so it's hard to create\n * unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * @todo https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac as nobleHmac } from '@noble/hashes/hmac.js';\nimport { ahash } from '@noble/hashes/utils';\nimport {\n  _validateObject,\n  _abool2 as abool,\n  _abytes2 as abytes,\n  aInRange,\n  bitLen,\n  bitMask,\n  bytesToHex,\n  bytesToNumberBE,\n  concatBytes,\n  createHmacDrbg,\n  ensureBytes,\n  hexToBytes,\n  inRange,\n  isBytes,\n  memoized,\n  numberToHexUnpadded,\n  randomBytes as randomBytesWeb,\n  type CHash,\n  type Hex,\n  type PrivKey,\n} from '../utils.ts';\nimport {\n  _createCurveFields,\n  mulEndoUnsafe,\n  negateCt,\n  normalizeZ,\n  pippenger,\n  wNAF,\n  type AffinePoint,\n  type BasicCurve,\n  type CurveLengths,\n  type CurvePoint,\n  type CurvePointCons,\n} from './curve.ts';\nimport {\n  Field,\n  FpInvertBatch,\n  getMinHashLength,\n  mapHashToField,\n  nLength,\n  validateField,\n  type IField,\n  type NLength,\n} from './modular.ts';\n\nexport type { AffinePoint };\nexport type HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\n\ntype EndoBasis = [[bigint, bigint], [bigint, bigint]];\n/**\n * When Weierstrass curve has `a=0`, it becomes Koblitz curve.\n * Koblitz curves allow using **efficiently-computable GLV endomorphism ψ**.\n * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n *\n * Endomorphism consists of beta, lambda and splitScalar:\n *\n * 1. GLV endomorphism ψ transforms a point: `P = (x, y) ↦ ψ(P) = (β·x mod p, y)`\n * 2. GLV scalar decomposition transforms a scalar: `k ≡ k₁ + k₂·λ (mod n)`\n * 3. Then these are combined: `k·P = k₁·P + k₂·ψ(P)`\n * 4. Two 128-bit point-by-scalar multiplications + one point addition is faster than\n *    one 256-bit multiplication.\n *\n * where\n * * beta: β ∈ Fₚ with β³ = 1, β ≠ 1\n * * lambda: λ ∈ Fₙ with λ³ = 1, λ ≠ 1\n * * splitScalar decomposes k ↦ k₁, k₂, by using reduced basis vectors.\n *   Gauss lattice reduction calculates them from initial basis vectors `(n, 0), (-λ, 0)`\n *\n * Check out `test/misc/endomorphism.js` and\n * [gist](https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066).\n */\nexport type EndomorphismOpts = {\n  beta: bigint;\n  basises?: EndoBasis;\n  splitScalar?: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\n\n// We construct basis in such way that den is always positive and equals n, but num sign depends on basis (not on secret value)\nconst divNearest = (num: bigint, den: bigint) => (num + (num >= 0 ? den : -den) / _2n) / den;\n\nexport type ScalarEndoParts = { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n\n/**\n * Splits scalar for GLV endomorphism.\n */\nexport function _splitEndoScalar(k: bigint, basis: EndoBasis, n: bigint): ScalarEndoParts {\n  // Split scalar into two such that part is ~half bits: `abs(part) < sqrt(N)`\n  // Since part can be negative, we need to do this on point.\n  // TODO: verifyScalar function which consumes lambda\n  const [[a1, b1], [a2, b2]] = basis;\n  const c1 = divNearest(b2 * k, n);\n  const c2 = divNearest(-b1 * k, n);\n  // |k1|/|k2| is < sqrt(N), but can be negative.\n  // If we do `k1 mod N`, we'll get big scalar (`> sqrt(N)`): so, we do cheaper negation instead.\n  let k1 = k - c1 * a1 - c2 * a2;\n  let k2 = -c1 * b1 - c2 * b2;\n  const k1neg = k1 < _0n;\n  const k2neg = k2 < _0n;\n  if (k1neg) k1 = -k1;\n  if (k2neg) k2 = -k2;\n  // Double check that resulting scalar less than half bits of N: otherwise wNAF will fail.\n  // This should only happen on wrong basises. Also, math inside is too complex and I don't trust it.\n  const MAX_NUM = bitMask(Math.ceil(bitLen(n) / 2)) + _1n; // Half bits of N\n  if (k1 < _0n || k1 >= MAX_NUM || k2 < _0n || k2 >= MAX_NUM) {\n    throw new Error('splitScalar (endomorphism): failed, k=' + k);\n  }\n  return { k1neg, k1, k2neg, k2 };\n}\n\nexport type ECDSASigFormat = 'compact' | 'recovered' | 'der';\nexport type ECDSARecoverOpts = {\n  prehash?: boolean;\n};\nexport type ECDSAVerifyOpts = {\n  prehash?: boolean;\n  lowS?: boolean;\n  format?: ECDSASigFormat;\n};\nexport type ECDSASignOpts = {\n  prehash?: boolean;\n  lowS?: boolean;\n  format?: ECDSASigFormat;\n  extraEntropy?: Uint8Array | boolean;\n};\n\nfunction validateSigFormat(format: string): ECDSASigFormat {\n  if (!['compact', 'recovered', 'der'].includes(format))\n    throw new Error('Signature format must be \"compact\", \"recovered\", or \"der\"');\n  return format as ECDSASigFormat;\n}\n\nfunction validateSigOpts<T extends ECDSASignOpts, D extends Required<ECDSASignOpts>>(\n  opts: T,\n  def: D\n): Required<ECDSASignOpts> {\n  const optsn: ECDSASignOpts = {};\n  for (let optName of Object.keys(def)) {\n    // @ts-ignore\n    optsn[optName] = opts[optName] === undefined ? def[optName] : opts[optName];\n  }\n  abool(optsn.lowS!, 'lowS');\n  abool(optsn.prehash!, 'prehash');\n  if (optsn.format !== undefined) validateSigFormat(optsn.format);\n  return optsn as Required<ECDSASignOpts>;\n}\n\n/** Instance methods for 3D XYZ projective points. */\nexport interface WeierstrassPoint<T> extends CurvePoint<T, WeierstrassPoint<T>> {\n  /** projective X coordinate. Different from affine x. */\n  readonly X: T;\n  /** projective Y coordinate. Different from affine y. */\n  readonly Y: T;\n  /** projective z coordinate */\n  readonly Z: T;\n  /** affine x coordinate. Different from projective X. */\n  get x(): T;\n  /** affine y coordinate. Different from projective Y. */\n  get y(): T;\n  /** Encodes point using IEEE P1363 (DER) encoding. First byte is 2/3/4. Default = isCompressed. */\n  toBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n\n  /** @deprecated use `.X` */\n  readonly px: T;\n  /** @deprecated use `.Y` */\n  readonly py: T;\n  /** @deprecated use `.Z` */\n  readonly pz: T;\n  /** @deprecated use `toBytes` */\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  /** @deprecated use `multiplyUnsafe` */\n  multiplyAndAddUnsafe(\n    Q: WeierstrassPoint<T>,\n    a: bigint,\n    b: bigint\n  ): WeierstrassPoint<T> | undefined;\n  /** @deprecated use `p.y % 2n === 0n` */\n  hasEvenY(): boolean;\n  /** @deprecated use `p.precompute(windowSize)` */\n  _setWindowSize(windowSize: number): void;\n}\n\n/** Static methods for 3D XYZ projective points. */\nexport interface WeierstrassPointCons<T> extends CurvePointCons<WeierstrassPoint<T>> {\n  /** Does NOT validate if the point is valid. Use `.assertValidity()`. */\n  new (X: T, Y: T, Z: T): WeierstrassPoint<T>;\n  CURVE(): WeierstrassOpts<T>;\n  /** @deprecated use `Point.BASE.multiply(Point.Fn.fromBytes(privateKey))` */\n  fromPrivateKey(privateKey: PrivKey): WeierstrassPoint<T>;\n  /** @deprecated use `import { normalizeZ } from '@noble/curves/abstract/curve.js';` */\n  normalizeZ(points: WeierstrassPoint<T>[]): WeierstrassPoint<T>[];\n  /** @deprecated use `import { pippenger } from '@noble/curves/abstract/curve.js';` */\n  msm(points: WeierstrassPoint<T>[], scalars: bigint[]): WeierstrassPoint<T>;\n}\n\n/**\n * Weierstrass curve options.\n *\n * * p: prime characteristic (order) of finite field, in which arithmetics is done\n * * n: order of prime subgroup a.k.a total amount of valid curve points\n * * h: cofactor, usually 1. h*n is group order; n is subgroup order\n * * a: formula param, must be in field of p\n * * b: formula param, must be in field of p\n * * Gx: x coordinate of generator point a.k.a. base point\n * * Gy: y coordinate of generator point\n */\nexport type WeierstrassOpts<T> = Readonly<{\n  p: bigint;\n  n: bigint;\n  h: bigint;\n  a: T;\n  b: T;\n  Gx: T;\n  Gy: T;\n}>;\n\n// When a cofactor != 1, there can be an effective methods to:\n// 1. Determine whether a point is torsion-free\n// 2. Clear torsion component\n// wrapPrivateKey: bls12-381 requires mod(n) instead of rejecting keys >= n\nexport type WeierstrassExtraOpts<T> = Partial<{\n  Fp: IField<T>;\n  Fn: IField<bigint>;\n  allowInfinityPoint: boolean;\n  endo: EndomorphismOpts;\n  isTorsionFree: (c: WeierstrassPointCons<T>, point: WeierstrassPoint<T>) => boolean;\n  clearCofactor: (c: WeierstrassPointCons<T>, point: WeierstrassPoint<T>) => WeierstrassPoint<T>;\n  fromBytes: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes: (\n    c: WeierstrassPointCons<T>,\n    point: WeierstrassPoint<T>,\n    isCompressed: boolean\n  ) => Uint8Array;\n}>;\n\n/**\n * Options for ECDSA signatures over a Weierstrass curve.\n *\n * * lowS: (default: true) whether produced / verified signatures occupy low half of ecdsaOpts.p. Prevents malleability.\n * * hmac: (default: noble-hashes hmac) function, would be used to init hmac-drbg for k generation.\n * * randomBytes: (default: webcrypto os-level CSPRNG) custom method for fetching secure randomness.\n * * bits2int, bits2int_modN: used in sigs, sometimes overridden by curves\n */\nexport type ECDSAOpts = Partial<{\n  lowS: boolean;\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  bits2int: (bytes: Uint8Array) => bigint;\n  bits2int_modN: (bytes: Uint8Array) => bigint;\n}>;\n\n/**\n * Elliptic Curve Diffie-Hellman interface.\n * Provides keygen, secret-to-public conversion, calculating shared secrets.\n */\nexport interface ECDH {\n  keygen: (seed?: Uint8Array) => { secretKey: Uint8Array; publicKey: Uint8Array };\n  getPublicKey: (secretKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (secretKeyA: PrivKey, publicKeyB: Hex, isCompressed?: boolean) => Uint8Array;\n  Point: WeierstrassPointCons<bigint>;\n  utils: {\n    isValidSecretKey: (secretKey: PrivKey) => boolean;\n    isValidPublicKey: (publicKey: Uint8Array, isCompressed?: boolean) => boolean;\n    randomSecretKey: (seed?: Uint8Array) => Uint8Array;\n    /** @deprecated use `randomSecretKey` */\n    randomPrivateKey: (seed?: Uint8Array) => Uint8Array;\n    /** @deprecated use `isValidSecretKey` */\n    isValidPrivateKey: (secretKey: PrivKey) => boolean;\n    /** @deprecated use `Point.Fn.fromBytes()` */\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    /** @deprecated use `point.precompute()` */\n    precompute: (windowSize?: number, point?: WeierstrassPoint<bigint>) => WeierstrassPoint<bigint>;\n  };\n  lengths: CurveLengths;\n}\n\n/**\n * ECDSA interface.\n * Only supported for prime fields, not Fp2 (extension fields).\n */\nexport interface ECDSA extends ECDH {\n  sign: (message: Hex, secretKey: PrivKey, opts?: ECDSASignOpts) => ECDSASigRecovered;\n  verify: (\n    signature: Uint8Array,\n    message: Uint8Array,\n    publicKey: Uint8Array,\n    opts?: ECDSAVerifyOpts\n  ) => boolean;\n  recoverPublicKey(signature: Uint8Array, message: Uint8Array, opts?: ECDSARecoverOpts): Uint8Array;\n  Signature: ECDSASignatureCons;\n}\nexport class DERErr extends Error {\n  constructor(m = '') {\n    super(m);\n  }\n}\nexport type IDER = {\n  // asn.1 DER encoding utils\n  Err: typeof DERErr;\n  // Basic building block is TLV (Tag-Length-Value)\n  _tlv: {\n    encode: (tag: number, data: string) => string;\n    // v - value, l - left bytes (unparsed)\n    decode(tag: number, data: Uint8Array): { v: Uint8Array; l: Uint8Array };\n  };\n  // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n  // since we always use positive integers here. It must always be empty:\n  // - add zero byte if exists\n  // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n  _int: {\n    encode(num: bigint): string;\n    decode(data: Uint8Array): bigint;\n  };\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint };\n  hexFromSig(sig: { r: bigint; s: bigint }): string;\n};\n/**\n * ASN.1 DER encoding utilities. ASN is very complex & fragile. Format:\n *\n *     [0x30 (SEQUENCE), bytelength, 0x02 (INTEGER), intLength, R, 0x02 (INTEGER), intLength, S]\n *\n * Docs: https://letsencrypt.org/docs/a-warm-welcome-to-asn1-and-der/, https://luca.ntop.org/Teaching/Appunti/asn1.html\n */\nexport const DER: IDER = {\n  // asn.1 DER encoding utils\n  Err: DERErr,\n  // Basic building block is TLV (Tag-Length-Value)\n  _tlv: {\n    encode: (tag: number, data: string): string => {\n      const { Err: E } = DER;\n      if (tag < 0 || tag > 256) throw new E('tlv.encode: wrong tag');\n      if (data.length & 1) throw new E('tlv.encode: unpadded data');\n      const dataLen = data.length / 2;\n      const len = numberToHexUnpadded(dataLen);\n      if ((len.length / 2) & 0b1000_0000) throw new E('tlv.encode: long form length too big');\n      // length of length with long form flag\n      const lenLen = dataLen > 127 ? numberToHexUnpadded((len.length / 2) | 0b1000_0000) : '';\n      const t = numberToHexUnpadded(tag);\n      return t + lenLen + len + data;\n    },\n    // v - value, l - left bytes (unparsed)\n    decode(tag: number, data: Uint8Array): { v: Uint8Array; l: Uint8Array } {\n      const { Err: E } = DER;\n      let pos = 0;\n      if (tag < 0 || tag > 256) throw new E('tlv.encode: wrong tag');\n      if (data.length < 2 || data[pos++] !== tag) throw new E('tlv.decode: wrong tlv');\n      const first = data[pos++];\n      const isLong = !!(first & 0b1000_0000); // First bit of first length byte is flag for short/long form\n      let length = 0;\n      if (!isLong) length = first;\n      else {\n        // Long form: [longFlag(1bit), lengthLength(7bit), length (BE)]\n        const lenLen = first & 0b0111_1111;\n        if (!lenLen) throw new E('tlv.decode(long): indefinite length not supported');\n        if (lenLen > 4) throw new E('tlv.decode(long): byte length is too big'); // this will overflow u32 in js\n        const lengthBytes = data.subarray(pos, pos + lenLen);\n        if (lengthBytes.length !== lenLen) throw new E('tlv.decode: length bytes not complete');\n        if (lengthBytes[0] === 0) throw new E('tlv.decode(long): zero leftmost byte');\n        for (const b of lengthBytes) length = (length << 8) | b;\n        pos += lenLen;\n        if (length < 128) throw new E('tlv.decode(long): not minimal encoding');\n      }\n      const v = data.subarray(pos, pos + length);\n      if (v.length !== length) throw new E('tlv.decode: wrong value length');\n      return { v, l: data.subarray(pos + length) };\n    },\n  },\n  // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n  // since we always use positive integers here. It must always be empty:\n  // - add zero byte if exists\n  // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n  _int: {\n    encode(num: bigint): string {\n      const { Err: E } = DER;\n      if (num < _0n) throw new E('integer: negative integers are not allowed');\n      let hex = numberToHexUnpadded(num);\n      // Pad with zero byte if negative flag is present\n      if (Number.parseInt(hex[0], 16) & 0b1000) hex = '00' + hex;\n      if (hex.length & 1) throw new E('unexpected DER parsing assertion: unpadded hex');\n      return hex;\n    },\n    decode(data: Uint8Array): bigint {\n      const { Err: E } = DER;\n      if (data[0] & 0b1000_0000) throw new E('invalid signature integer: negative');\n      if (data[0] === 0x00 && !(data[1] & 0b1000_0000))\n        throw new E('invalid signature integer: unnecessary leading zero');\n      return bytesToNumberBE(data);\n    },\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E, _int: int, _tlv: tlv } = DER;\n    const data = ensureBytes('signature', hex);\n    const { v: seqBytes, l: seqLeftBytes } = tlv.decode(0x30, data);\n    if (seqLeftBytes.length) throw new E('invalid signature: left bytes after parsing');\n    const { v: rBytes, l: rLeftBytes } = tlv.decode(0x02, seqBytes);\n    const { v: sBytes, l: sLeftBytes } = tlv.decode(0x02, rLeftBytes);\n    if (sLeftBytes.length) throw new E('invalid signature: left bytes after parsing');\n    return { r: int.decode(rBytes), s: int.decode(sBytes) };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    const { _tlv: tlv, _int: int } = DER;\n    const rs = tlv.encode(0x02, int.encode(sig.r));\n    const ss = tlv.encode(0x02, int.encode(sig.s));\n    const seq = rs + ss;\n    return tlv.encode(0x30, seq);\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function _normFnElement(Fn: IField<bigint>, key: PrivKey): bigint {\n  const { BYTES: expected } = Fn;\n  let num: bigint;\n  if (typeof key === 'bigint') {\n    num = key;\n  } else {\n    let bytes = ensureBytes('private key', key);\n    try {\n      num = Fn.fromBytes(bytes);\n    } catch (error) {\n      throw new Error(`invalid private key: expected ui8a of size ${expected}, got ${typeof key}`);\n    }\n  }\n  if (!Fn.isValidNot0(num)) throw new Error('invalid private key: out of range [1..N-1]');\n  return num;\n}\n\n/**\n * Creates weierstrass Point constructor, based on specified curve options.\n *\n * @example\n```js\nconst opts = {\n  p: BigInt('0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff'),\n  n: BigInt('0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551'),\n  h: BigInt(1),\n  a: BigInt('0xffffffff00000001000000000000000000000000fffffffffffffffffffffffc'),\n  b: BigInt('0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b'),\n  Gx: BigInt('0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296'),\n  Gy: BigInt('0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5'),\n};\nconst p256_Point = weierstrass(opts);\n```\n */\nexport function weierstrassN<T>(\n  params: WeierstrassOpts<T>,\n  extraOpts: WeierstrassExtraOpts<T> = {}\n): WeierstrassPointCons<T> {\n  const validated = _createCurveFields('weierstrass', params, extraOpts);\n  const { Fp, Fn } = validated;\n  let CURVE = validated.CURVE as WeierstrassOpts<T>;\n  const { h: cofactor, n: CURVE_ORDER } = CURVE;\n  _validateObject(\n    extraOpts,\n    {},\n    {\n      allowInfinityPoint: 'boolean',\n      clearCofactor: 'function',\n      isTorsionFree: 'function',\n      fromBytes: 'function',\n      toBytes: 'function',\n      endo: 'object',\n      wrapPrivateKey: 'boolean',\n    }\n  );\n\n  const { endo } = extraOpts;\n  if (endo) {\n    // validateObject(endo, { beta: 'bigint', splitScalar: 'function' });\n    if (!Fp.is0(CURVE.a) || typeof endo.beta !== 'bigint' || !Array.isArray(endo.basises)) {\n      throw new Error('invalid endo: expected \"beta\": bigint and \"basises\": array');\n    }\n  }\n\n  const lengths = getWLengths(Fp, Fn);\n\n  function assertCompressionIsSupported() {\n    if (!Fp.isOdd) throw new Error('compression is not supported: Field does not have .isOdd()');\n  }\n\n  // Implements IEEE P1363 point encoding\n  function pointToBytes(\n    _c: WeierstrassPointCons<T>,\n    point: WeierstrassPoint<T>,\n    isCompressed: boolean\n  ): Uint8Array {\n    const { x, y } = point.toAffine();\n    const bx = Fp.toBytes(x);\n    abool(isCompressed, 'isCompressed');\n    if (isCompressed) {\n      assertCompressionIsSupported();\n      const hasEvenY = !Fp.isOdd!(y);\n      return concatBytes(pprefix(hasEvenY), bx);\n    } else {\n      return concatBytes(Uint8Array.of(0x04), bx, Fp.toBytes(y));\n    }\n  }\n  function pointFromBytes(bytes: Uint8Array) {\n    abytes(bytes, undefined, 'Point');\n    const { publicKey: comp, publicKeyUncompressed: uncomp } = lengths; // e.g. for 32-byte: 33, 65\n    const length = bytes.length;\n    const head = bytes[0];\n    const tail = bytes.subarray(1);\n    // No actual validation is done here: use .assertValidity()\n    if (length === comp && (head === 0x02 || head === 0x03)) {\n      const x = Fp.fromBytes(tail);\n      if (!Fp.isValid(x)) throw new Error('bad point: is not on curve, wrong x');\n      const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n      let y: T;\n      try {\n        y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n      } catch (sqrtError) {\n        const err = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n        throw new Error('bad point: is not on curve, sqrt error' + err);\n      }\n      assertCompressionIsSupported();\n      const isYOdd = Fp.isOdd!(y); // (y & _1n) === _1n;\n      const isHeadOdd = (head & 1) === 1; // ECDSA-specific\n      if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n      return { x, y };\n    } else if (length === uncomp && head === 0x04) {\n      // TODO: more checks\n      const L = Fp.BYTES;\n      const x = Fp.fromBytes(tail.subarray(0, L));\n      const y = Fp.fromBytes(tail.subarray(L, L * 2));\n      if (!isValidXY(x, y)) throw new Error('bad point: is not on curve');\n      return { x, y };\n    } else {\n      throw new Error(\n        `bad point: got length ${length}, expected compressed=${comp} or uncompressed=${uncomp}`\n      );\n    }\n  }\n\n  const encodePoint = extraOpts.toBytes || pointToBytes;\n  const decodePoint = extraOpts.fromBytes || pointFromBytes;\n  function weierstrassEquation(x: T): T {\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x² * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, CURVE.a)), CURVE.b); // x³ + a * x + b\n  }\n\n  // TODO: move top-level\n  /** Checks whether equation holds for given x, y: y² == x³ + ax + b */\n  function isValidXY(x: T, y: T): boolean {\n    const left = Fp.sqr(y); // y²\n    const right = weierstrassEquation(x); // x³ + ax + b\n    return Fp.eql(left, right);\n  }\n\n  // Validate whether the passed curve params are valid.\n  // Test 1: equation y² = x³ + ax + b should work for generator point.\n  if (!isValidXY(CURVE.Gx, CURVE.Gy)) throw new Error('bad curve params: generator point');\n\n  // Test 2: discriminant Δ part should be non-zero: 4a³ + 27b² != 0.\n  // Guarantees curve is genus-1, smooth (non-singular).\n  const _4a3 = Fp.mul(Fp.pow(CURVE.a, _3n), _4n);\n  const _27b2 = Fp.mul(Fp.sqr(CURVE.b), BigInt(27));\n  if (Fp.is0(Fp.add(_4a3, _27b2))) throw new Error('bad curve params: a or b');\n\n  /** Asserts coordinate is valid: 0 <= n < Fp.ORDER. */\n  function acoord(title: string, n: T, banZero = false) {\n    if (!Fp.isValid(n) || (banZero && Fp.is0(n))) throw new Error(`bad point coordinate ${title}`);\n    return n;\n  }\n\n  function aprjpoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n\n  function splitEndoScalarN(k: bigint) {\n    if (!endo || !endo.basises) throw new Error('no endo');\n    return _splitEndoScalar(k, endo.basises, Fn.ORDER);\n  }\n\n  // Memoized toAffine / validity check. They are heavy. Points are immutable.\n\n  // Converts Projective point to affine (x, y) coordinates.\n  // Can accept precomputed Z^-1 - for example, from invertBatch.\n  // (X, Y, Z) ∋ (x=X/Z, y=Y/Z)\n  const toAffineMemo = memoized((p: Point, iz?: T): AffinePoint<T> => {\n    const { X, Y, Z } = p;\n    // Fast-path for normalized points\n    if (Fp.eql(Z, Fp.ONE)) return { x: X, y: Y };\n    const is0 = p.is0();\n    // If invZ was 0, we return zero point. However we still want to execute\n    // all operations, so we replace invZ with a random number, 1.\n    if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(Z);\n    const x = Fp.mul(X, iz);\n    const y = Fp.mul(Y, iz);\n    const zz = Fp.mul(Z, iz);\n    if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n    if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n    return { x, y };\n  });\n  // NOTE: on exception this will crash 'cached' and no value will be set.\n  // Otherwise true will be return\n  const assertValidMemo = memoized((p: Point) => {\n    if (p.is0()) {\n      // (0, 1, 0) aka ZERO is invalid in most contexts.\n      // In BLS, ZERO can be serialized, so we allow it.\n      // (0, 0, 0) is invalid representation of ZERO.\n      if (extraOpts.allowInfinityPoint && !Fp.is0(p.Y)) return;\n      throw new Error('bad point: ZERO');\n    }\n    // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n    const { x, y } = p.toAffine();\n    if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not field elements');\n    if (!isValidXY(x, y)) throw new Error('bad point: equation left != right');\n    if (!p.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    return true;\n  });\n\n  function finishEndo(\n    endoBeta: EndomorphismOpts['beta'],\n    k1p: Point,\n    k2p: Point,\n    k1neg: boolean,\n    k2neg: boolean\n  ) {\n    k2p = new Point(Fp.mul(k2p.X, endoBeta), k2p.Y, k2p.Z);\n    k1p = negateCt(k1neg, k1p);\n    k2p = negateCt(k2neg, k2p);\n    return k1p.add(k2p);\n  }\n\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates:(X, Y, Z) ∋ (x=X/Z, y=Y/Z).\n   * Default Point works in 2d / affine coordinates: (x, y).\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements WeierstrassPoint<T> {\n    // base / generator point\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    // zero / infinity / identity point\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO); // 0, 1, 0\n    // math field\n    static readonly Fp = Fp;\n    // scalar field\n    static readonly Fn = Fn;\n\n    readonly X: T;\n    readonly Y: T;\n    readonly Z: T;\n\n    /** Does NOT validate if the point is valid. Use `.assertValidity()`. */\n    constructor(X: T, Y: T, Z: T) {\n      this.X = acoord('x', X);\n      this.Y = acoord('y', Y, true);\n      this.Z = acoord('z', Z);\n      Object.freeze(this);\n    }\n\n    static CURVE(): WeierstrassOpts<T> {\n      return CURVE;\n    }\n\n    /** Does NOT validate if the point is valid. Use `.assertValidity()`. */\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      // (0, 0) would've produced (0, 0, 1) - instead, we need (0, 1, 0)\n      if (Fp.is0(x) && Fp.is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    static fromBytes(bytes: Uint8Array): Point {\n      const P = Point.fromAffine(decodePoint(abytes(bytes, undefined, 'point')));\n      P.assertValidity();\n      return P;\n    }\n    static fromHex(hex: Hex): Point {\n      return Point.fromBytes(ensureBytes('pointHex', hex));\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     *\n     * @param windowSize\n     * @param isLazy true will defer table computation until the first multiplication\n     * @returns\n     */\n    precompute(windowSize: number = 8, isLazy = true): Point {\n      wnaf.createCache(this, windowSize);\n      if (!isLazy) this.multiply(_3n); // random number\n      return this;\n    }\n\n    // TODO: return `this`\n    /** A point on curve is valid if it conforms to equation. */\n    assertValidity(): void {\n      assertValidMemo(this);\n    }\n\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (!Fp.isOdd) throw new Error(\"Field doesn't support isOdd\");\n      return !Fp.isOdd(y);\n    }\n\n    /** Compare one point to another. */\n    equals(other: Point): boolean {\n      aprjpoint(other);\n      const { X: X1, Y: Y1, Z: Z1 } = this;\n      const { X: X2, Y: Y2, Z: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /** Flips point to one corresponding to (x, -y) in Affine coordinates. */\n    negate(): Point {\n      return new Point(this.X, Fp.neg(this.Y), this.Z);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { X: X1, Y: Y1, Z: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      aprjpoint(other);\n      const { X: X1, Y: Y1, Z: Z1 } = this;\n      const { X: X2, Y: Y2, Z: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    is0(): boolean {\n      return this.equals(Point.ZERO);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      const { endo } = extraOpts;\n      if (!Fn.isValidNot0(scalar)) throw new Error('invalid scalar: out of range'); // 0 is invalid\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      const mul = (n: bigint) => wnaf.cached(this, n, (p) => normalizeZ(Point, p));\n      /** See docs for {@link EndomorphismOpts} */\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = splitEndoScalarN(scalar);\n        const { p: k1p, f: k1f } = mul(k1);\n        const { p: k2p, f: k2f } = mul(k2);\n        fake = k1f.add(k2f);\n        point = finishEndo(endo.beta, k1p, k2p, k1neg, k2neg);\n      } else {\n        const { p, f } = mul(scalar);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return normalizeZ(Point, [point, fake])[0];\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed secret key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(sc: bigint): Point {\n      const { endo } = extraOpts;\n      const p = this as Point;\n      if (!Fn.isValid(sc)) throw new Error('invalid scalar: out of range'); // 0 is valid\n      if (sc === _0n || p.is0()) return Point.ZERO;\n      if (sc === _1n) return p; // fast-path\n      if (wnaf.hasCache(this)) return this.multiply(sc);\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = splitEndoScalarN(sc);\n        const { p1, p2 } = mulEndoUnsafe(Point, p, k1, k2); // 30% faster vs wnaf.unsafe\n        return finishEndo(endo.beta, p1, p2, k1neg, k2neg);\n      } else {\n        return wnaf.unsafe(p, sc);\n      }\n    }\n\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const sum = this.multiplyUnsafe(a).add(Q.multiplyUnsafe(b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    /**\n     * Converts Projective point to affine (x, y) coordinates.\n     * @param invertedZ Z^-1 (inverted zero) - optional, precomputation is useful for invertBatch\n     */\n    toAffine(invertedZ?: T): AffinePoint<T> {\n      return toAffineMemo(this, invertedZ);\n    }\n\n    /**\n     * Checks whether Point is free of torsion elements (is in prime subgroup).\n     * Always torsion-free for cofactor=1 curves.\n     */\n    isTorsionFree(): boolean {\n      const { isTorsionFree } = extraOpts;\n      if (cofactor === _1n) return true;\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      return wnaf.unsafe(this, CURVE_ORDER).is0();\n    }\n\n    clearCofactor(): Point {\n      const { clearCofactor } = extraOpts;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(cofactor);\n    }\n\n    isSmallOrder(): boolean {\n      // can we use this.clearCofactor()?\n      return this.multiplyUnsafe(cofactor).is0();\n    }\n\n    toBytes(isCompressed = true): Uint8Array {\n      abool(isCompressed, 'isCompressed');\n      this.assertValidity();\n      return encodePoint(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      return bytesToHex(this.toBytes(isCompressed));\n    }\n\n    toString() {\n      return `<Point ${this.is0() ? 'ZERO' : this.toHex()}>`;\n    }\n\n    // TODO: remove\n    get px(): T {\n      return this.X;\n    }\n    get py(): T {\n      return this.X;\n    }\n    get pz(): T {\n      return this.Z;\n    }\n    toRawBytes(isCompressed = true): Uint8Array {\n      return this.toBytes(isCompressed);\n    }\n    _setWindowSize(windowSize: number) {\n      this.precompute(windowSize);\n    }\n    static normalizeZ(points: Point[]): Point[] {\n      return normalizeZ(Point, points);\n    }\n    static msm(points: Point[], scalars: bigint[]): Point {\n      return pippenger(Point, Fn, points, scalars);\n    }\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(_normFnElement(Fn, privateKey));\n    }\n  }\n  const bits = Fn.BITS;\n  const wnaf = new wNAF(Point, extraOpts.endo ? Math.ceil(bits / 2) : bits);\n  Point.BASE.precompute(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n  return Point;\n}\n\n/** Methods of ECDSA signature instance. */\nexport interface ECDSASignature {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  addRecoveryBit(recovery: number): ECDSASigRecovered;\n  hasHighS(): boolean;\n  toBytes(format?: string): Uint8Array;\n  toHex(format?: string): string;\n\n  /** @deprecated */\n  assertValidity(): void;\n  /** @deprecated */\n  normalizeS(): ECDSASignature;\n  /** @deprecated use standalone method `curve.recoverPublicKey(sig.toBytes('recovered'), msg)` */\n  recoverPublicKey(msgHash: Hex): WeierstrassPoint<bigint>;\n  /** @deprecated use `.toBytes('compact')` */\n  toCompactRawBytes(): Uint8Array;\n  /** @deprecated use `.toBytes('compact')` */\n  toCompactHex(): string;\n  /** @deprecated use `.toBytes('der')` */\n  toDERRawBytes(): Uint8Array;\n  /** @deprecated use `.toBytes('der')` */\n  toDERHex(): string;\n}\nexport type ECDSASigRecovered = ECDSASignature & {\n  readonly recovery: number;\n};\n/** Methods of ECDSA signature constructor. */\nexport type ECDSASignatureCons = {\n  new (r: bigint, s: bigint, recovery?: number): ECDSASignature;\n  fromBytes(bytes: Uint8Array, format?: ECDSASigFormat): ECDSASignature;\n  fromHex(hex: string, format?: ECDSASigFormat): ECDSASignature;\n\n  /** @deprecated use `.fromBytes(bytes, 'compact')` */\n  fromCompact(hex: Hex): ECDSASignature;\n  /** @deprecated use `.fromBytes(bytes, 'der')` */\n  fromDER(hex: Hex): ECDSASignature;\n};\n\n// Points start with byte 0x02 when y is even; otherwise 0x03\nfunction pprefix(hasEvenY: boolean): Uint8Array {\n  return Uint8Array.of(hasEvenY ? 0x02 : 0x03);\n}\n\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio<T>(\n  Fp: IField<T>,\n  Z: T\n): (u: T, v: T) => { isValid: boolean; value: T } {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n  // 2n ** c1 == 2n << (c1-1)\n  const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n  const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n  const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = i - _2n; // 18.    tv5 = i - 2\n      tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU<T>(\n  Fp: IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n): (u: T) => { x: T; y: T } {\n  validateField(Fp);\n  const { A, B, Z } = opts;\n  if (!Fp.isValid(A) || !Fp.isValid(B) || !Fp.isValid(Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, Z);\n  if (!Fp.isOdd) throw new Error('Field does not have .isOdd()');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    const tv4_inv = FpInvertBatch(Fp, [tv4], true)[0];\n    x = Fp.mul(x, tv4_inv); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n\nfunction getWLengths<T>(Fp: IField<T>, Fn: IField<bigint>) {\n  return {\n    secretKey: Fn.BYTES,\n    publicKey: 1 + Fp.BYTES,\n    publicKeyUncompressed: 1 + 2 * Fp.BYTES,\n    publicKeyHasPrefix: true,\n    signature: 2 * Fn.BYTES,\n  };\n}\n\n/**\n * Sometimes users only need getPublicKey, getSharedSecret, and secret key handling.\n * This helper ensures no signature functionality is present. Less code, smaller bundle size.\n */\nexport function ecdh(\n  Point: WeierstrassPointCons<bigint>,\n  ecdhOpts: { randomBytes?: (bytesLength?: number) => Uint8Array } = {}\n): ECDH {\n  const { Fn } = Point;\n  const randomBytes_ = ecdhOpts.randomBytes || randomBytesWeb;\n  const lengths = Object.assign(getWLengths(Point.Fp, Fn), { seed: getMinHashLength(Fn.ORDER) });\n\n  function isValidSecretKey(secretKey: PrivKey) {\n    try {\n      return !!_normFnElement(Fn, secretKey);\n    } catch (error) {\n      return false;\n    }\n  }\n\n  function isValidPublicKey(publicKey: Uint8Array, isCompressed?: boolean): boolean {\n    const { publicKey: comp, publicKeyUncompressed } = lengths;\n    try {\n      const l = publicKey.length;\n      if (isCompressed === true && l !== comp) return false;\n      if (isCompressed === false && l !== publicKeyUncompressed) return false;\n      return !!Point.fromBytes(publicKey);\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Produces cryptographically secure secret key from random of size\n   * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n   */\n  function randomSecretKey(seed = randomBytes_(lengths.seed)): Uint8Array {\n    return mapHashToField(abytes(seed, lengths.seed, 'seed'), Fn.ORDER);\n  }\n\n  /**\n   * Computes public key for a secret key. Checks for validity of the secret key.\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(secretKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.BASE.multiply(_normFnElement(Fn, secretKey)).toBytes(isCompressed);\n  }\n\n  function keygen(seed?: Uint8Array) {\n    const secretKey = randomSecretKey(seed);\n    return { secretKey, publicKey: getPublicKey(secretKey) };\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean | undefined {\n    if (typeof item === 'bigint') return false;\n    if (item instanceof Point) return true;\n    const { secretKey, publicKey, publicKeyUncompressed } = lengths;\n    if (Fn.allowedLengths || secretKey === publicKey) return undefined;\n    const l = ensureBytes('key', item).length;\n    return l === publicKey || l === publicKeyUncompressed;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from secret key A and public key B.\n   * Checks: 1) secret key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(secretKeyA: PrivKey, publicKeyB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(secretKeyA) === true) throw new Error('first arg must be private key');\n    if (isProbPub(publicKeyB) === false) throw new Error('second arg must be public key');\n    const s = _normFnElement(Fn, secretKeyA);\n    const b = Point.fromHex(publicKeyB); // checks for being on-curve\n    return b.multiply(s).toBytes(isCompressed);\n  }\n\n  const utils = {\n    isValidSecretKey,\n    isValidPublicKey,\n    randomSecretKey,\n\n    // TODO: remove\n    isValidPrivateKey: isValidSecretKey,\n    randomPrivateKey: randomSecretKey,\n    normPrivateKeyToScalar: (key: PrivKey) => _normFnElement(Fn, key),\n    precompute(windowSize = 8, point = Point.BASE): WeierstrassPoint<bigint> {\n      return point.precompute(windowSize, false);\n    },\n  };\n\n  return Object.freeze({ getPublicKey, getSharedSecret, keygen, Point, utils, lengths });\n}\n\n/**\n * Creates ECDSA signing interface for given elliptic curve `Point` and `hash` function.\n * We need `hash` for 2 features:\n * 1. Message prehash-ing. NOT used if `sign` / `verify` are called with `prehash: false`\n * 2. k generation in `sign`, using HMAC-drbg(hash)\n *\n * ECDSAOpts are only rarely needed.\n *\n * @example\n * ```js\n * const p256_Point = weierstrass(...);\n * const p256_sha256 = ecdsa(p256_Point, sha256);\n * const p256_sha224 = ecdsa(p256_Point, sha224);\n * const p256_sha224_r = ecdsa(p256_Point, sha224, { randomBytes: (length) => { ... } });\n * ```\n */\nexport function ecdsa(\n  Point: WeierstrassPointCons<bigint>,\n  hash: CHash,\n  ecdsaOpts: ECDSAOpts = {}\n): ECDSA {\n  ahash(hash);\n  _validateObject(\n    ecdsaOpts,\n    {},\n    {\n      hmac: 'function',\n      lowS: 'boolean',\n      randomBytes: 'function',\n      bits2int: 'function',\n      bits2int_modN: 'function',\n    }\n  );\n\n  const randomBytes = ecdsaOpts.randomBytes || randomBytesWeb;\n  const hmac: HmacFnSync =\n    ecdsaOpts.hmac ||\n    (((key, ...msgs) => nobleHmac(hash, key, concatBytes(...msgs))) satisfies HmacFnSync);\n\n  const { Fp, Fn } = Point;\n  const { ORDER: CURVE_ORDER, BITS: fnBits } = Fn;\n  const { keygen, getPublicKey, getSharedSecret, utils, lengths } = ecdh(Point, ecdsaOpts);\n  const defaultSigOpts: Required<ECDSASignOpts> = {\n    prehash: false,\n    lowS: typeof ecdsaOpts.lowS === 'boolean' ? ecdsaOpts.lowS : false,\n    format: undefined as any, //'compact' as ECDSASigFormat,\n    extraEntropy: false,\n  };\n  const defaultSigOpts_format = 'compact';\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n  function validateRS(title: string, num: bigint): bigint {\n    if (!Fn.isValidNot0(num))\n      throw new Error(`invalid signature ${title}: out of range 1..Point.Fn.ORDER`);\n    return num;\n  }\n  function validateSigLength(bytes: Uint8Array, format: ECDSASigFormat) {\n    validateSigFormat(format);\n    const size = lengths.signature!;\n    const sizer = format === 'compact' ? size : format === 'recovered' ? size + 1 : undefined;\n    return abytes(bytes, sizer, `${format} signature`);\n  }\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports compact, recovered & DER representations.\n   */\n  class Signature implements ECDSASignature {\n    readonly r: bigint;\n    readonly s: bigint;\n    readonly recovery?: number;\n    constructor(r: bigint, s: bigint, recovery?: number) {\n      this.r = validateRS('r', r); // r in [1..N-1];\n      this.s = validateRS('s', s); // s in [1..N-1];\n      if (recovery != null) this.recovery = recovery;\n      Object.freeze(this);\n    }\n\n    static fromBytes(bytes: Uint8Array, format: ECDSASigFormat = defaultSigOpts_format): Signature {\n      validateSigLength(bytes, format);\n      let recid: number | undefined;\n      if (format === 'der') {\n        const { r, s } = DER.toSig(abytes(bytes));\n        return new Signature(r, s);\n      }\n      if (format === 'recovered') {\n        recid = bytes[0];\n        format = 'compact';\n        bytes = bytes.subarray(1);\n      }\n      const L = Fn.BYTES;\n      const r = bytes.subarray(0, L);\n      const s = bytes.subarray(L, L * 2);\n      return new Signature(Fn.fromBytes(r), Fn.fromBytes(s), recid);\n    }\n\n    static fromHex(hex: string, format?: ECDSASigFormat) {\n      return this.fromBytes(hexToBytes(hex), format);\n    }\n\n    addRecoveryBit(recovery: number): RecoveredSignature {\n      return new Signature(this.r, this.s, recovery) as RecoveredSignature;\n    }\n\n    recoverPublicKey(messageHash: Hex): WeierstrassPoint<bigint> {\n      const FIELD_ORDER = Fp.ORDER;\n      const { r, s, recovery: rec } = this;\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n\n      // ECDSA recovery is hard for cofactor > 1 curves.\n      // In sign, `r = q.x mod n`, and here we recover q.x from r.\n      // While recovering q.x >= n, we need to add r+n for cofactor=1 curves.\n      // However, for cofactor>1, r+n may not get q.x:\n      // r+n*i would need to be done instead where i is unknown.\n      // To easily get i, we either need to:\n      // a. increase amount of valid recid values (4, 5...); OR\n      // b. prohibit non-prime-order signatures (recid > 1).\n      const hasCofactor = CURVE_ORDER * _2n < FIELD_ORDER;\n      if (hasCofactor && rec > 1) throw new Error('recovery id is ambiguous for h>1 curve');\n\n      const radj = rec === 2 || rec === 3 ? r + CURVE_ORDER : r;\n      if (!Fp.isValid(radj)) throw new Error('recovery id 2 or 3 invalid');\n      const x = Fp.toBytes(radj);\n      const R = Point.fromBytes(concatBytes(pprefix((rec & 1) === 0), x));\n      const ir = Fn.inv(radj); // r^-1\n      const h = bits2int_modN(ensureBytes('msgHash', messageHash)); // Truncate hash\n      const u1 = Fn.create(-h * ir); // -hr^-1\n      const u2 = Fn.create(s * ir); // sr^-1\n      // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1). unsafe is fine: there is no private data.\n      const Q = Point.BASE.multiplyUnsafe(u1).add(R.multiplyUnsafe(u2));\n      if (Q.is0()) throw new Error('point at infinify');\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    toBytes(format: ECDSASigFormat = defaultSigOpts_format) {\n      validateSigFormat(format);\n      if (format === 'der') return hexToBytes(DER.hexFromSig(this));\n      const r = Fn.toBytes(this.r);\n      const s = Fn.toBytes(this.s);\n      if (format === 'recovered') {\n        if (this.recovery == null) throw new Error('recovery bit must be present');\n        return concatBytes(Uint8Array.of(this.recovery), r, s);\n      }\n      return concatBytes(r, s);\n    }\n\n    toHex(format?: ECDSASigFormat) {\n      return bytesToHex(this.toBytes(format));\n    }\n\n    // TODO: remove\n    assertValidity(): void {}\n    static fromCompact(hex: Hex) {\n      return Signature.fromBytes(ensureBytes('sig', hex), 'compact');\n    }\n    static fromDER(hex: Hex) {\n      return Signature.fromBytes(ensureBytes('sig', hex), 'der');\n    }\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, Fn.neg(this.s), this.recovery) : this;\n    }\n    toDERRawBytes() {\n      return this.toBytes('der');\n    }\n    toDERHex() {\n      return bytesToHex(this.toBytes('der'));\n    }\n    toCompactRawBytes() {\n      return this.toBytes('compact');\n    }\n    toCompactHex() {\n      return bytesToHex(this.toBytes('compact'));\n    }\n  }\n  type RecoveredSignature = Signature & { recovery: number };\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    ecdsaOpts.bits2int ||\n    function bits2int_def(bytes: Uint8Array): bigint {\n      // Our custom check \"just in case\", for protection against DoS\n      if (bytes.length > 8192) throw new Error('input is too large');\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - fnBits; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    ecdsaOpts.bits2int_modN ||\n    function bits2int_modN_def(bytes: Uint8Array): bigint {\n      return Fn.create(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // Pads output with zero as per spec\n  const ORDER_MASK = bitMask(fnBits);\n  /** Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`. */\n  function int2octets(num: bigint): Uint8Array {\n    // IMPORTANT: the check ensures working for case `Fn.BYTES != Fn.BITS * 8`\n    aInRange('num < 2^' + fnBits, num, _0n, ORDER_MASK);\n    return Fn.toBytes(num);\n  }\n\n  function validateMsgAndHash(message: Uint8Array, prehash: boolean) {\n    abytes(message, undefined, 'message');\n    return prehash ? abytes(hash(message), undefined, 'prehashed message') : message;\n  }\n\n  /**\n   * Steps A, D of RFC6979 3.2.\n   * Creates RFC6979 seed; converts msg/privKey to numbers.\n   * Used only in sign, not in verify.\n   *\n   * Warning: we cannot assume here that message has same amount of bytes as curve order,\n   * this will be invalid at least for P521. Also it can be bigger for P224 + SHA256.\n   */\n  function prepSig(message: Uint8Array, privateKey: PrivKey, opts: ECDSASignOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { lowS, prehash, extraEntropy } = validateSigOpts(opts, defaultSigOpts);\n    message = validateMsgAndHash(message, prehash); // RFC6979 3.2 A: h1 = H(m)\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with fnBits % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(message);\n    const d = _normFnElement(Fn, privateKey); // validate secret key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (extraEntropy != null && extraEntropy !== false) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      // gen random bytes OR pass as-is\n      const e = extraEntropy === true ? randomBytes(lengths.secretKey) : extraEntropy;\n      seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n    }\n    const seed = concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    // To transform k => Signature:\n    // q = k⋅G\n    // r = q.x mod n\n    // s = k^-1(m + rd) mod n\n    // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n    // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n    // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n    function k2sig(kBytes: Uint8Array): RecoveredSignature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      // Important: all mod() calls here must be done over N\n      const k = bits2int(kBytes); // mod n, not mod p\n      if (!Fn.isValidNot0(k)) return; // Valid scalars (including k) must be in 1..N-1\n      const ik = Fn.inv(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = k⋅G\n      const r = Fn.create(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      const s = Fn.create(ik * Fn.create(m + r * d)); // Not using blinding here, see comment above\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = Fn.neg(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery) as RecoveredSignature; // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n\n  /**\n   * Signs message hash with a secret key.\n   *\n   * ```\n   * sign(m, d) where\n   *   k = rfc6979_hmac_drbg(m, d)\n   *   (x, y) = G × k\n   *   r = x mod n\n   *   s = (m + dr) / k mod n\n   * ```\n   */\n  function sign(message: Hex, secretKey: PrivKey, opts: ECDSASignOpts = {}): RecoveredSignature {\n    message = ensureBytes('message', message);\n    const { seed, k2sig } = prepSig(message, secretKey, opts); // Steps A, D of RFC6979 3.2.\n    const drbg = createHmacDrbg<RecoveredSignature>(hash.outputLen, Fn.BYTES, hmac);\n    const sig = drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    return sig;\n  }\n\n  function tryParsingSig(sg: Hex | SignatureLike) {\n    // Try to deduce format\n    let sig: Signature | undefined = undefined;\n    const isHex = typeof sg === 'string' || isBytes(sg);\n    const isObj =\n      !isHex &&\n      sg !== null &&\n      typeof sg === 'object' &&\n      typeof sg.r === 'bigint' &&\n      typeof sg.s === 'bigint';\n    if (!isHex && !isObj)\n      throw new Error('invalid signature, expected Uint8Array, hex string or Signature instance');\n    if (isObj) {\n      sig = new Signature(sg.r, sg.s);\n    } else if (isHex) {\n      try {\n        sig = Signature.fromBytes(ensureBytes('sig', sg), 'der');\n      } catch (derError) {\n        if (!(derError instanceof DER.Err)) throw derError;\n      }\n      if (!sig) {\n        try {\n          sig = Signature.fromBytes(ensureBytes('sig', sg), 'compact');\n        } catch (error) {\n          return false;\n        }\n      }\n    }\n    if (!sig) return false;\n    return sig;\n  }\n\n  /**\n   * Verifies a signature against message and public key.\n   * Rejects lowS signatures by default: see {@link ECDSAVerifyOpts}.\n   * Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   u1 = hs^-1 mod n\n   *   u2 = rs^-1 mod n\n   *   R = u1⋅G + u2⋅P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    message: Hex,\n    publicKey: Hex,\n    opts: ECDSAVerifyOpts = {}\n  ): boolean {\n    const { lowS, prehash, format } = validateSigOpts(opts, defaultSigOpts);\n    publicKey = ensureBytes('publicKey', publicKey);\n    message = validateMsgAndHash(ensureBytes('message', message), prehash);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    const sig =\n      format === undefined\n        ? tryParsingSig(signature)\n        : Signature.fromBytes(ensureBytes('sig', signature as Hex), format);\n    if (sig === false) return false;\n    try {\n      const P = Point.fromBytes(publicKey);\n      if (lowS && sig.hasHighS()) return false;\n      const { r, s } = sig;\n      const h = bits2int_modN(message); // mod n, not mod p\n      const is = Fn.inv(s); // s^-1 mod n\n      const u1 = Fn.create(h * is); // u1 = hs^-1 mod n\n      const u2 = Fn.create(r * is); // u2 = rs^-1 mod n\n      const R = Point.BASE.multiplyUnsafe(u1).add(P.multiplyUnsafe(u2)); // u1⋅G + u2⋅P\n      if (R.is0()) return false;\n      const v = Fn.create(R.x); // v = r.x mod n\n      return v === r;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function recoverPublicKey(\n    signature: Uint8Array,\n    message: Uint8Array,\n    opts: ECDSARecoverOpts = {}\n  ): Uint8Array {\n    const { prehash } = validateSigOpts(opts, defaultSigOpts);\n    message = validateMsgAndHash(message, prehash);\n    return Signature.fromBytes(signature, 'recovered').recoverPublicKey(message).toBytes();\n  }\n\n  return Object.freeze({\n    keygen,\n    getPublicKey,\n    getSharedSecret,\n    utils,\n    lengths,\n    Point,\n    sign,\n    verify,\n    recoverPublicKey,\n    Signature,\n    hash,\n  });\n}\n\n// TODO: remove everything below\n/** @deprecated use ECDSASignature */\nexport type SignatureType = ECDSASignature;\n/** @deprecated use ECDSASigRecovered */\nexport type RecoveredSignatureType = ECDSASigRecovered;\n/** @deprecated switch to Uint8Array signatures in format 'compact' */\nexport type SignatureLike = { r: bigint; s: bigint };\nexport type ECDSAExtraEntropy = Hex | boolean;\n/** @deprecated use `ECDSAExtraEntropy` */\nexport type Entropy = Hex | boolean;\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts;\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: WeierstrassPointCons<T>, point: WeierstrassPoint<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: WeierstrassPointCons<T>, point: WeierstrassPoint<T>) => WeierstrassPoint<T>;\n};\n/** @deprecated use ECDSASignOpts */\nexport type SignOpts = ECDSASignOpts;\n/** @deprecated use ECDSASignOpts */\nexport type VerOpts = ECDSAVerifyOpts;\n\n/** @deprecated use WeierstrassPoint */\nexport type ProjPointType<T> = WeierstrassPoint<T>;\n/** @deprecated use WeierstrassPointCons */\nexport type ProjConstructor<T> = WeierstrassPointCons<T>;\n/** @deprecated use ECDSASignatureCons */\nexport type SignatureConstructor = ECDSASignatureCons;\n\n// TODO: remove\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (\n    c: WeierstrassPointCons<T>,\n    point: WeierstrassPoint<T>,\n    isCompressed: boolean\n  ) => Uint8Array;\n};\n\n// LegacyWeierstrassOpts\nexport type CurvePointsTypeWithLength<T> = Readonly<CurvePointsType<T> & Partial<NLength>>;\n\n// LegacyWeierstrass\nexport type CurvePointsRes<T> = {\n  Point: WeierstrassPointCons<T>;\n\n  /** @deprecated use `Point.CURVE()` */\n  CURVE: CurvePointsType<T>;\n  /** @deprecated use `Point` */\n  ProjectivePoint: WeierstrassPointCons<T>;\n  /** @deprecated use `Point.Fn.fromBytes(privateKey)` */\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  /** @deprecated */\n  weierstrassEquation: (x: T) => T;\n  /** @deprecated use `Point.Fn.isValidNot0(num)` */\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\n// Aliases to legacy types\n// export type CurveType = LegacyECDSAOpts;\n// export type CurveFn = LegacyECDSA;\n// export type CurvePointsRes<T> = LegacyWeierstrass<T>;\n// export type CurvePointsType<T> = LegacyWeierstrassOpts<T>;\n// export type CurvePointsTypeWithLength<T> = LegacyWeierstrassOpts<T>;\n// export type BasicWCurve<T> = LegacyWeierstrassOpts<T>;\n\n/** @deprecated use `Uint8Array` */\nexport type PubKey = Hex | WeierstrassPoint<bigint>;\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac?: HmacFnSync;\n  randomBytes?: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\nexport type CurveFn = {\n  /** @deprecated use `Point.CURVE()` */\n  CURVE: CurvePointsType<bigint>;\n  keygen: ECDSA['keygen'];\n  getPublicKey: ECDSA['getPublicKey'];\n  getSharedSecret: ECDSA['getSharedSecret'];\n  sign: ECDSA['sign'];\n  verify: ECDSA['verify'];\n  Point: WeierstrassPointCons<bigint>;\n  /** @deprecated use `Point` */\n  ProjectivePoint: WeierstrassPointCons<bigint>;\n  Signature: ECDSASignatureCons;\n  utils: ECDSA['utils'];\n  lengths: ECDSA['lengths'];\n};\n/** @deprecated use `weierstrass` in newer releases */\nexport function weierstrassPoints<T>(c: CurvePointsTypeWithLength<T>): CurvePointsRes<T> {\n  const { CURVE, curveOpts } = _weierstrass_legacy_opts_to_new(c);\n  const Point = weierstrassN(CURVE, curveOpts);\n  return _weierstrass_new_output_to_legacy(c, Point);\n}\nexport type WsPointComposed<T> = {\n  CURVE: WeierstrassOpts<T>;\n  curveOpts: WeierstrassExtraOpts<T>;\n};\nexport type WsComposed = {\n  /** @deprecated use `Point.CURVE()` */\n  CURVE: WeierstrassOpts<bigint>;\n  hash: CHash;\n  curveOpts: WeierstrassExtraOpts<bigint>;\n  ecdsaOpts: ECDSAOpts;\n};\nfunction _weierstrass_legacy_opts_to_new<T>(c: CurvePointsType<T>): WsPointComposed<T> {\n  const CURVE: WeierstrassOpts<T> = {\n    a: c.a,\n    b: c.b,\n    p: c.Fp.ORDER,\n    n: c.n,\n    h: c.h,\n    Gx: c.Gx,\n    Gy: c.Gy,\n  };\n  const Fp = c.Fp;\n  let allowedLengths = c.allowedPrivateKeyLengths\n    ? Array.from(new Set(c.allowedPrivateKeyLengths.map((l) => Math.ceil(l / 2))))\n    : undefined;\n  const Fn = Field(CURVE.n, {\n    BITS: c.nBitLength,\n    allowedLengths: allowedLengths,\n    modFromBytes: c.wrapPrivateKey,\n  });\n  const curveOpts: WeierstrassExtraOpts<T> = {\n    Fp,\n    Fn,\n    allowInfinityPoint: c.allowInfinityPoint,\n    endo: c.endo,\n    isTorsionFree: c.isTorsionFree,\n    clearCofactor: c.clearCofactor,\n    fromBytes: c.fromBytes,\n    toBytes: c.toBytes,\n  };\n  return { CURVE, curveOpts };\n}\nfunction _ecdsa_legacy_opts_to_new(c: CurveType): WsComposed {\n  const { CURVE, curveOpts } = _weierstrass_legacy_opts_to_new(c);\n  const ecdsaOpts: ECDSAOpts = {\n    hmac: c.hmac,\n    randomBytes: c.randomBytes,\n    lowS: c.lowS,\n    bits2int: c.bits2int,\n    bits2int_modN: c.bits2int_modN,\n  };\n  return { CURVE, curveOpts, hash: c.hash, ecdsaOpts };\n}\nexport function _legacyHelperEquat<T>(Fp: IField<T>, a: T, b: T): (x: T) => T {\n  /**\n   * y² = x³ + ax + b: Short weierstrass curve formula. Takes x, returns y².\n   * @returns y²\n   */\n  function weierstrassEquation(x: T): T {\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x² * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x³ + a * x + b\n  }\n  return weierstrassEquation;\n}\nfunction _weierstrass_new_output_to_legacy<T>(\n  c: CurvePointsType<T>,\n  Point: WeierstrassPointCons<T>\n): CurvePointsRes<T> {\n  const { Fp, Fn } = Point;\n  function isWithinCurveOrder(num: bigint): boolean {\n    return inRange(num, _1n, Fn.ORDER);\n  }\n  const weierstrassEquation = _legacyHelperEquat(Fp, c.a, c.b);\n  return Object.assign(\n    {},\n    {\n      CURVE: c,\n      Point: Point,\n      ProjectivePoint: Point,\n      normPrivateKeyToScalar: (key: PrivKey) => _normFnElement(Fn, key),\n      weierstrassEquation,\n      isWithinCurveOrder,\n    }\n  );\n}\nfunction _ecdsa_new_output_to_legacy(c: CurveType, _ecdsa: ECDSA): CurveFn {\n  const Point = _ecdsa.Point;\n  return Object.assign({}, _ecdsa, {\n    ProjectivePoint: Point,\n    CURVE: Object.assign({}, c, nLength(Point.Fn.ORDER, Point.Fn.BITS)),\n  });\n}\n\n// _ecdsa_legacy\nexport function weierstrass(c: CurveType): CurveFn {\n  const { CURVE, curveOpts, hash, ecdsaOpts } = _ecdsa_legacy_opts_to_new(c);\n  const Point = weierstrassN(CURVE, curveOpts);\n  const signs = ecdsa(Point, hash, ecdsaOpts);\n  return _ecdsa_new_output_to_legacy(c, signs);\n}\n","/**\n * Utilities for short weierstrass curves, combined with noble-hashes.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { type CurveFn, type CurveType, weierstrass } from './abstract/weierstrass.ts';\nimport type { CHash } from './utils.ts';\n\n/** connects noble-curves to noble-hashes */\nexport function getHash(hash: CHash): { hash: CHash } {\n  return { hash };\n}\n/** Same API as @noble/hashes, with ability to create curve with custom hash */\nexport type CurveDef = Readonly<Omit<CurveType, 'hash'>>;\nexport type CurveFnWithCreate = CurveFn & { create: (hash: CHash) => CurveFn };\n\n/** @deprecated use new `weierstrass()` and `ecdsa()` methods */\nexport function createCurve(curveDef: CurveDef, defHash: CHash): CurveFnWithCreate {\n  const create = (hash: CHash): CurveFn => weierstrass({ ...curveDef, hash: hash });\n  return { ...create(defHash), create };\n}\n","/**\n * Internal module for NIST P256, P384, P521 curves.\n * Do not use for now.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256, sha384, sha512 } from '@noble/hashes/sha2.js';\nimport { createCurve, type CurveFnWithCreate } from './_shortw_utils.ts';\nimport { createHasher, type H2CHasher } from './abstract/hash-to-curve.ts';\nimport { Field } from './abstract/modular.ts';\nimport {\n  mapToCurveSimpleSWU,\n  type WeierstrassOpts,\n  type WeierstrassPointCons,\n} from './abstract/weierstrass.ts';\n\n// p = 2n**224n * (2n**32n-1n) + 2n**192n + 2n**96n - 1n\n// a = Fp256.create(BigInt('-3'));\nconst p256_CURVE: WeierstrassOpts<bigint> = {\n  p: BigInt('0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff'),\n  n: BigInt('0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551'),\n  h: BigInt(1),\n  a: BigInt('0xffffffff00000001000000000000000000000000fffffffffffffffffffffffc'),\n  b: BigInt('0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b'),\n  Gx: BigInt('0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296'),\n  Gy: BigInt('0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5'),\n};\n\n// p = 2n**384n - 2n**128n - 2n**96n + 2n**32n - 1n\nconst p384_CURVE: WeierstrassOpts<bigint> = {\n  p: BigInt(\n    '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000ffffffff'\n  ),\n  n: BigInt(\n    '0xffffffffffffffffffffffffffffffffffffffffffffffffc7634d81f4372ddf581a0db248b0a77aecec196accc52973'\n  ),\n  h: BigInt(1),\n  a: BigInt(\n    '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000fffffffc'\n  ),\n  b: BigInt(\n    '0xb3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aef'\n  ),\n  Gx: BigInt(\n    '0xaa87ca22be8b05378eb1c71ef320ad746e1d3b628ba79b9859f741e082542a385502f25dbf55296c3a545e3872760ab7'\n  ),\n  Gy: BigInt(\n    '0x3617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5f'\n  ),\n};\n\n// p = 2n**521n - 1n\nconst p521_CURVE: WeierstrassOpts<bigint> = {\n  p: BigInt(\n    '0x1ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\n  ),\n  n: BigInt(\n    '0x01fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa51868783bf2f966b7fcc0148f709a5d03bb5c9b8899c47aebb6fb71e91386409'\n  ),\n  h: BigInt(1),\n  a: BigInt(\n    '0x1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc'\n  ),\n  b: BigInt(\n    '0x0051953eb9618e1c9a1f929a21a0b68540eea2da725b99b315f3b8b489918ef109e156193951ec7e937b1652c0bd3bb1bf073573df883d2c34f1ef451fd46b503f00'\n  ),\n  Gx: BigInt(\n    '0x00c6858e06b70404e9cd9e3ecb662395b4429c648139053fb521f828af606b4d3dbaa14b5e77efe75928fe1dc127a2ffa8de3348b3c1856a429bf97e7e31c2e5bd66'\n  ),\n  Gy: BigInt(\n    '0x011839296a789a3bc0045c8a5fb42c7d1bd998f54449579b446817afbd17273e662c97ee72995ef42640c550b9013fad0761353c7086a272c24088be94769fd16650'\n  ),\n};\n\nconst Fp256 = Field(p256_CURVE.p);\nconst Fp384 = Field(p384_CURVE.p);\nconst Fp521 = Field(p521_CURVE.p);\ntype SwuOpts = {\n  A: bigint;\n  B: bigint;\n  Z: bigint;\n};\nfunction createSWU(Point: WeierstrassPointCons<bigint>, opts: SwuOpts) {\n  const map = mapToCurveSimpleSWU(Point.Fp, opts);\n  return (scalars: bigint[]) => map(scalars[0]);\n}\n\n/** NIST P256 (aka secp256r1, prime256v1) curve, ECDSA and ECDH methods. */\nexport const p256: CurveFnWithCreate = createCurve(\n  { ...p256_CURVE, Fp: Fp256, lowS: false },\n  sha256\n);\n/** Hashing / encoding to p256 points / field. RFC 9380 methods. */\nexport const p256_hasher: H2CHasher<bigint> = /* @__PURE__ */ (() => {\n  return createHasher(\n    p256.Point,\n    createSWU(p256.Point, {\n      A: p256_CURVE.a,\n      B: p256_CURVE.b,\n      Z: p256.Point.Fp.create(BigInt('-10')),\n    }),\n    {\n      DST: 'P256_XMD:SHA-256_SSWU_RO_',\n      encodeDST: 'P256_XMD:SHA-256_SSWU_NU_',\n      p: p256_CURVE.p,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha256,\n    }\n  );\n})();\n\n// export const p256_oprf: OPRF = createORPF({\n//   name: 'P256-SHA256',\n//   Point: p256.Point,\n//   hash: sha256,\n//   hashToGroup: p256_hasher.hashToCurve,\n//   hashToScalar: p256_hasher.hashToScalar,\n// });\n\n/** NIST P384 (aka secp384r1) curve, ECDSA and ECDH methods. */\nexport const p384: CurveFnWithCreate = createCurve(\n  { ...p384_CURVE, Fp: Fp384, lowS: false },\n  sha384\n);\n/** Hashing / encoding to p384 points / field. RFC 9380 methods. */\nexport const p384_hasher: H2CHasher<bigint> = /* @__PURE__ */ (() => {\n  return createHasher(\n    p384.Point,\n    createSWU(p384.Point, {\n      A: p384_CURVE.a,\n      B: p384_CURVE.b,\n      Z: p384.Point.Fp.create(BigInt('-12')),\n    }),\n    {\n      DST: 'P384_XMD:SHA-384_SSWU_RO_',\n      encodeDST: 'P384_XMD:SHA-384_SSWU_NU_',\n      p: p384_CURVE.p,\n      m: 1,\n      k: 192,\n      expand: 'xmd',\n      hash: sha384,\n    }\n  );\n})();\n\n// export const p384_oprf: OPRF = createORPF({\n//   name: 'P384-SHA384',\n//   Point: p384.Point,\n//   hash: sha384,\n//   hashToGroup: p384_hasher.hashToCurve,\n//   hashToScalar: p384_hasher.hashToScalar,\n// });\n\n// const Fn521 = Field(p521_CURVE.n, { allowedScalarLengths: [65, 66] });\n/** NIST P521 (aka secp521r1) curve, ECDSA and ECDH methods. */\nexport const p521: CurveFnWithCreate = createCurve(\n  { ...p521_CURVE, Fp: Fp521, lowS: false, allowedPrivateKeyLengths: [130, 131, 132] },\n  sha512\n);\n\n/** @deprecated use `p256` for consistency with `p256_hasher` */\nexport const secp256r1: typeof p256 = p256;\n/** @deprecated use `p384` for consistency with `p384_hasher` */\nexport const secp384r1: typeof p384 = p384;\n/** @deprecated use `p521` for consistency with `p521_hasher` */\nexport const secp521r1: typeof p521 = p521;\n\n/** Hashing / encoding to p521 points / field. RFC 9380 methods. */\nexport const p521_hasher: H2CHasher<bigint> = /* @__PURE__ */ (() => {\n  return createHasher(\n    p521.Point,\n    createSWU(p521.Point, {\n      A: p521_CURVE.a,\n      B: p521_CURVE.b,\n      Z: p521.Point.Fp.create(BigInt('-4')),\n    }),\n    {\n      DST: 'P521_XMD:SHA-512_SSWU_RO_',\n      encodeDST: 'P521_XMD:SHA-512_SSWU_NU_',\n      p: p521_CURVE.p,\n      m: 1,\n      k: 256,\n      expand: 'xmd',\n      hash: sha512,\n    }\n  );\n})();\n\n// export const p521_oprf: OPRF = createORPF({\n//   name: 'P521-SHA512',\n//   Point: p521.Point,\n//   hash: sha512,\n//   hashToGroup: p521_hasher.hashToCurve,\n//   hashToScalar: p521_hasher.hashToScalar, // produces L=98 just like in RFC\n// });\n","/**\n * NIST secp256r1 aka p256.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { type H2CMethod } from './abstract/hash-to-curve.ts';\nimport { p256_hasher, p256 as p256n } from './nist.ts';\n/** @deprecated use `import { p256 } from '@noble/curves/nist.js';` */\nexport const p256: typeof p256n = p256n;\n/** @deprecated use `import { p256 } from '@noble/curves/nist.js';` */\nexport const secp256r1: typeof p256n = p256n;\n/** @deprecated use `import { p256_hasher } from '@noble/curves/nist.js';` */\nexport const hashToCurve: H2CMethod<bigint> = /* @__PURE__ */ (() => p256_hasher.hashToCurve)();\n/** @deprecated use `import { p256_hasher } from '@noble/curves/nist.js';` */\nexport const encodeToCurve: H2CMethod<bigint> = /* @__PURE__ */ (() => p256_hasher.encodeToCurve)();\n","import { getVersion } from './internal/errors.js'\n\nexport type GlobalErrorType<name extends string = 'Error'> = Error & {\n  name: name\n}\n\n/**\n * Base error class inherited by all errors thrown by ox.\n *\n * @example\n * ```ts\n * import { Errors } from 'ox'\n * throw new Errors.BaseError('An error occurred')\n * ```\n */\nexport class BaseError<\n  cause extends Error | undefined = undefined,\n> extends Error {\n  details: string\n  docs?: string | undefined\n  docsPath?: string | undefined\n  shortMessage: string\n\n  override cause: cause\n  override name = 'BaseError'\n\n  version = `ox@${getVersion()}`\n\n  constructor(shortMessage: string, options: BaseError.Options<cause> = {}) {\n    const details = (() => {\n      if (options.cause instanceof BaseError) {\n        if (options.cause.details) return options.cause.details\n        if (options.cause.shortMessage) return options.cause.shortMessage\n      }\n      if (options.cause?.message) return options.cause.message\n      return options.details!\n    })()\n    const docsPath = (() => {\n      if (options.cause instanceof BaseError)\n        return options.cause.docsPath || options.docsPath\n      return options.docsPath\n    })()\n\n    const docsBaseUrl = 'https://oxlib.sh'\n    const docs = `${docsBaseUrl}${docsPath ?? ''}`\n\n    const message = [\n      shortMessage || 'An error occurred.',\n      ...(options.metaMessages ? ['', ...options.metaMessages] : []),\n      ...(details || docsPath\n        ? [\n            '',\n            details ? `Details: ${details}` : undefined,\n            docsPath ? `See: ${docs}` : undefined,\n          ]\n        : []),\n    ]\n      .filter((x) => typeof x === 'string')\n      .join('\\n')\n\n    super(message, options.cause ? { cause: options.cause } : undefined)\n\n    this.cause = options.cause as any\n    this.details = details\n    this.docs = docs\n    this.docsPath = docsPath\n    this.shortMessage = shortMessage\n  }\n\n  walk(): Error\n  walk(fn: (err: unknown) => boolean): Error | null\n  walk(fn?: any): any {\n    return walk(this, fn)\n  }\n}\n\nexport declare namespace BaseError {\n  type Options<cause extends Error | undefined = Error | undefined> = {\n    cause?: cause | undefined\n    details?: string | undefined\n    docsPath?: string | undefined\n    metaMessages?: (string | undefined)[] | undefined\n  }\n}\n\n/** @internal */\nfunction walk(\n  err: unknown,\n  fn?: ((err: unknown) => boolean) | undefined,\n): unknown {\n  if (fn?.(err)) return err\n  if (err && typeof err === 'object' && 'cause' in err && err.cause)\n    return walk(err.cause, fn)\n  return fn ? null : err\n}\n","/** @internal */\nexport const version = '0.1.1'\n","import type * as Errors from './Errors.js'\n\nconst bigIntSuffix = '#__bigint'\n\n/**\n * Parses a JSON string, with support for `bigint`.\n *\n * @example\n * ```ts twoslash\n * import { Json } from 'ox'\n *\n * const json = Json.parse('{\"foo\":\"bar\",\"baz\":\"69420694206942069420694206942069420694206942069420#__bigint\"}')\n * // @log: {\n * // @log:   foo: 'bar',\n * // @log:   baz: 69420694206942069420694206942069420694206942069420n\n * // @log: }\n * ```\n *\n * @param string - The value to parse.\n * @param reviver - A function that transforms the results.\n * @returns The parsed value.\n */\nexport function parse(\n  string: string,\n  reviver?: ((this: any, key: string, value: any) => any) | undefined,\n) {\n  return JSON.parse(string, (key, value_) => {\n    const value = value_\n    if (typeof value === 'string' && value.endsWith(bigIntSuffix))\n      return BigInt(value.slice(0, -bigIntSuffix.length))\n    return typeof reviver === 'function' ? reviver(key, value) : value\n  })\n}\n\nexport declare namespace parse {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Stringifies a value to its JSON representation, with support for `bigint`.\n *\n * @example\n * ```ts twoslash\n * import { Json } from 'ox'\n *\n * const json = Json.stringify({\n *   foo: 'bar',\n *   baz: 69420694206942069420694206942069420694206942069420n,\n * })\n * // @log: '{\"foo\":\"bar\",\"baz\":\"69420694206942069420694206942069420694206942069420#__bigint\"}'\n * ```\n *\n * @param value - The value to stringify.\n * @param replacer - A function that transforms the results. It is passed the key and value of the property, and must return the value to be used in the JSON string. If this function returns `undefined`, the property is not included in the resulting JSON string.\n * @param space - A string or number that determines the indentation of the JSON string. If it is a number, it indicates the number of spaces to use as indentation; if it is a string (e.g. `'\\t'`), it uses the string as the indentation character.\n * @returns The JSON string.\n */\nexport function stringify(\n  value: any,\n  replacer?: ((this: any, key: string, value: any) => any) | null | undefined,\n  space?: string | number | undefined,\n) {\n  return JSON.stringify(\n    value,\n    (key, value) => {\n      if (typeof replacer === 'function') return replacer(key, value)\n      if (typeof value === 'bigint') return value.toString() + bigIntSuffix\n      return value\n    },\n    space,\n  )\n}\n\nexport declare namespace stringify {\n  type ErrorType = Errors.GlobalErrorType\n}\n","import type * as Errors from '../Errors.js'\nimport * as Hex from '../Hex.js'\n\n/** @internal */\nexport function assertSize(hex: Hex.Hex, size_: number): void {\n  if (Hex.size(hex) > size_)\n    throw new Hex.SizeOverflowError({\n      givenSize: Hex.size(hex),\n      maxSize: size_,\n    })\n}\n\n/** @internal */\nexport declare namespace assertSize {\n  type ErrorType =\n    | Hex.size.ErrorType\n    | Hex.SizeOverflowError\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function assertStartOffset(value: Hex.Hex, start?: number | undefined) {\n  if (typeof start === 'number' && start > 0 && start > Hex.size(value) - 1)\n    throw new Hex.SliceOffsetOutOfBoundsError({\n      offset: start,\n      position: 'start',\n      size: Hex.size(value),\n    })\n}\n\nexport declare namespace assertStartOffset {\n  type ErrorType =\n    | Hex.SliceOffsetOutOfBoundsError\n    | Hex.size.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function assertEndOffset(\n  value: Hex.Hex,\n  start?: number | undefined,\n  end?: number | undefined,\n) {\n  if (\n    typeof start === 'number' &&\n    typeof end === 'number' &&\n    Hex.size(value) !== end - start\n  ) {\n    throw new Hex.SliceOffsetOutOfBoundsError({\n      offset: end,\n      position: 'end',\n      size: Hex.size(value),\n    })\n  }\n}\n\nexport declare namespace assertEndOffset {\n  type ErrorType =\n    | Hex.SliceOffsetOutOfBoundsError\n    | Hex.size.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function pad(hex_: Hex.Hex, options: pad.Options = {}) {\n  const { dir, size = 32 } = options\n\n  if (size === 0) return hex_\n\n  const hex = hex_.replace('0x', '')\n  if (hex.length > size * 2)\n    throw new Hex.SizeExceedsPaddingSizeError({\n      size: Math.ceil(hex.length / 2),\n      targetSize: size,\n      type: 'Hex',\n    })\n\n  return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](size * 2, '0')}` as Hex.Hex\n}\n\n/** @internal */\nexport declare namespace pad {\n  type Options = {\n    dir?: 'left' | 'right' | undefined\n    size?: number | undefined\n  }\n  type ErrorType = Hex.SizeExceedsPaddingSizeError | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function trim(\n  value: Hex.Hex,\n  options: trim.Options = {},\n): trim.ReturnType {\n  const { dir = 'left' } = options\n\n  let data = value.replace('0x', '')\n\n  let sliceLength = 0\n  for (let i = 0; i < data.length - 1; i++) {\n    if (data[dir === 'left' ? i : data.length - i - 1]!.toString() === '0')\n      sliceLength++\n    else break\n  }\n  data =\n    dir === 'left'\n      ? data.slice(sliceLength)\n      : data.slice(0, data.length - sliceLength)\n\n  if (data === '0') return '0x'\n  if (dir === 'right' && data.length % 2 === 1) return `0x${data}0`\n  return `0x${data}` as trim.ReturnType\n}\n\n/** @internal */\nexport declare namespace trim {\n  type Options = {\n    dir?: 'left' | 'right' | undefined\n  }\n\n  type ReturnType = Hex.Hex\n\n  type ErrorType = Errors.GlobalErrorType\n}\n","import { equalBytes } from '@noble/curves/abstract/utils'\nimport * as Bytes from './Bytes.js'\nimport * as Errors from './Errors.js'\nimport * as Json from './Json.js'\nimport * as internal_bytes from './internal/bytes.js'\nimport * as internal from './internal/hex.js'\n\nconst encoder = /*#__PURE__*/ new TextEncoder()\n\nconst hexes = /*#__PURE__*/ Array.from({ length: 256 }, (_v, i) =>\n  i.toString(16).padStart(2, '0'),\n)\n\n/** Root type for a Hex string. */\nexport type Hex = `0x${string}`\n\n/**\n * Asserts if the given value is {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.assert('abc')\n * // @error: InvalidHexValueTypeError:\n * // @error: Value `\"abc\"` of type `string` is an invalid hex type.\n * // @error: Hex types must be represented as `\"0x\\${string}\"`.\n * ```\n *\n * @param value - The value to assert.\n * @param options - Options.\n */\nexport function assert(\n  value: unknown,\n  options: assert.Options = {},\n): asserts value is Hex {\n  const { strict = false } = options\n  if (!value) throw new InvalidHexTypeError(value)\n  if (typeof value !== 'string') throw new InvalidHexTypeError(value)\n  if (strict) {\n    if (!/^0x[0-9a-fA-F]*$/.test(value)) throw new InvalidHexValueError(value)\n  }\n  if (!value.startsWith('0x')) throw new InvalidHexValueError(value)\n}\n\nexport declare namespace assert {\n  type Options = {\n    /** Checks if the {@link ox#Hex.Hex} value contains invalid hexadecimal characters. @default false */\n    strict?: boolean | undefined\n  }\n\n  type ErrorType =\n    | InvalidHexTypeError\n    | InvalidHexValueError\n    | Errors.GlobalErrorType\n}\n\n/**\n * Concatenates two or more {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.concat('0x123', '0x456')\n * // @log: '0x123456'\n * ```\n *\n * @param values - The {@link ox#Hex.Hex} values to concatenate.\n * @returns The concatenated {@link ox#Hex.Hex} value.\n */\nexport function concat(...values: readonly Hex[]): Hex {\n  return `0x${(values as Hex[]).reduce((acc, x) => acc + x.replace('0x', ''), '')}`\n}\n\nexport declare namespace concat {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Instantiates a {@link ox#Hex.Hex} value from a hex string or {@link ox#Bytes.Bytes} value.\n *\n * :::tip\n *\n * To instantiate from a **Boolean**, **String**, or **Number**, use one of the following:\n *\n * - `Hex.fromBoolean`\n *\n * - `Hex.fromString`\n *\n * - `Hex.fromNumber`\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * import { Bytes, Hex } from 'ox'\n *\n * Hex.from('0x48656c6c6f20576f726c6421')\n * // @log: '0x48656c6c6f20576f726c6421'\n *\n * Hex.from(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // @log: '0x48656c6c6f20576f726c6421'\n * ```\n *\n * @param value - The {@link ox#Bytes.Bytes} value to encode.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function from(value: Hex | Bytes.Bytes | readonly number[]): Hex {\n  if (value instanceof Uint8Array) return fromBytes(value)\n  if (Array.isArray(value)) return fromBytes(new Uint8Array(value))\n  return value as never\n}\n\nexport declare namespace from {\n  type Options = {\n    /** The size (in bytes) of the output hex value. */\n    size?: number | undefined\n  }\n\n  type ErrorType = fromBytes.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Encodes a boolean into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.fromBoolean(true)\n * // @log: '0x1'\n *\n * Hex.fromBoolean(false)\n * // @log: '0x0'\n *\n * Hex.fromBoolean(true, { size: 32 })\n * // @log: '0x0000000000000000000000000000000000000000000000000000000000000001'\n * ```\n *\n * @param value - The boolean value to encode.\n * @param options - Options.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function fromBoolean(\n  value: boolean,\n  options: fromBoolean.Options = {},\n): Hex {\n  const hex: Hex = `0x${Number(value)}`\n  if (typeof options.size === 'number') {\n    internal.assertSize(hex, options.size)\n    return padLeft(hex, options.size)\n  }\n  return hex\n}\n\nexport declare namespace fromBoolean {\n  type Options = {\n    /** The size (in bytes) of the output hex value. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | internal.assertSize.ErrorType\n    | padLeft.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Encodes a {@link ox#Bytes.Bytes} value into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes, Hex } from 'ox'\n *\n * Hex.fromBytes(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // @log: '0x48656c6c6f20576f726c6421'\n * ```\n *\n * @param value - The {@link ox#Bytes.Bytes} value to encode.\n * @param options - Options.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function fromBytes(\n  value: Bytes.Bytes,\n  options: fromBytes.Options = {},\n): Hex {\n  let string = ''\n  for (let i = 0; i < value.length; i++) string += hexes[value[i]!]\n  const hex = `0x${string}` as const\n\n  if (typeof options.size === 'number') {\n    internal.assertSize(hex, options.size)\n    return padRight(hex, options.size)\n  }\n  return hex\n}\n\nexport declare namespace fromBytes {\n  type Options = {\n    /** The size (in bytes) of the output hex value. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | internal.assertSize.ErrorType\n    | padRight.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Encodes a number or bigint into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.fromNumber(420)\n * // @log: '0x1a4'\n *\n * Hex.fromNumber(420, { size: 32 })\n * // @log: '0x00000000000000000000000000000000000000000000000000000000000001a4'\n * ```\n *\n * @param value - The number or bigint value to encode.\n * @param options - Options.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function fromNumber(\n  value: number | bigint,\n  options: fromNumber.Options = {},\n): Hex {\n  const { signed, size } = options\n\n  const value_ = BigInt(value)\n\n  let maxValue: bigint | number | undefined\n  if (size) {\n    if (signed) maxValue = (1n << (BigInt(size) * 8n - 1n)) - 1n\n    else maxValue = 2n ** (BigInt(size) * 8n) - 1n\n  } else if (typeof value === 'number') {\n    maxValue = BigInt(Number.MAX_SAFE_INTEGER)\n  }\n\n  const minValue = typeof maxValue === 'bigint' && signed ? -maxValue - 1n : 0\n\n  if ((maxValue && value_ > maxValue) || value_ < minValue) {\n    const suffix = typeof value === 'bigint' ? 'n' : ''\n    throw new IntegerOutOfRangeError({\n      max: maxValue ? `${maxValue}${suffix}` : undefined,\n      min: `${minValue}${suffix}`,\n      signed,\n      size,\n      value: `${value}${suffix}`,\n    })\n  }\n\n  const stringValue = (\n    signed && value_ < 0 ? (1n << BigInt(size * 8)) + BigInt(value_) : value_\n  ).toString(16)\n\n  const hex = `0x${stringValue}` as Hex\n  if (size) return padLeft(hex, size) as Hex\n  return hex\n}\n\nexport declare namespace fromNumber {\n  type Options =\n    | {\n        /** Whether or not the number of a signed representation. */\n        signed?: boolean | undefined\n        /** The size (in bytes) of the output hex value. */\n        size: number\n      }\n    | {\n        signed?: undefined\n        /** The size (in bytes) of the output hex value. */\n        size?: number | undefined\n      }\n\n  type ErrorType =\n    | IntegerOutOfRangeError\n    | padLeft.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Encodes a string into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n * Hex.fromString('Hello World!')\n * // '0x48656c6c6f20576f726c6421'\n *\n * Hex.fromString('Hello World!', { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n * ```\n *\n * @param value - The string value to encode.\n * @param options - Options.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function fromString(\n  value: string,\n  options: fromString.Options = {},\n): Hex {\n  return fromBytes(encoder.encode(value), options)\n}\n\nexport declare namespace fromString {\n  type Options = {\n    /** The size (in bytes) of the output hex value. */\n    size?: number | undefined\n  }\n\n  type ErrorType = fromBytes.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Checks if two {@link ox#Hex.Hex} values are equal.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.isEqual('0xdeadbeef', '0xdeadbeef')\n * // @log: true\n *\n * Hex.isEqual('0xda', '0xba')\n * // @log: false\n * ```\n *\n * @param hexA - The first {@link ox#Hex.Hex} value.\n * @param hexB - The second {@link ox#Hex.Hex} value.\n * @returns `true` if the two {@link ox#Hex.Hex} values are equal, `false` otherwise.\n */\nexport function isEqual(hexA: Hex, hexB: Hex) {\n  return equalBytes(Bytes.fromHex(hexA), Bytes.fromHex(hexB))\n}\n\nexport declare namespace isEqual {\n  type ErrorType = Bytes.fromHex.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Pads a {@link ox#Hex.Hex} value to the left with zero bytes until it reaches the given `size` (default: 32 bytes).\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.padLeft('0x1234', 4)\n * // @log: '0x00001234'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to pad.\n * @param size - The size (in bytes) of the output hex value.\n * @returns The padded {@link ox#Hex.Hex} value.\n */\nexport function padLeft(\n  value: Hex,\n  size?: number | undefined,\n): padLeft.ReturnType {\n  return internal.pad(value, { dir: 'left', size })\n}\n\nexport declare namespace padLeft {\n  type ReturnType = Hex\n  type ErrorType = internal.pad.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Pads a {@link ox#Hex.Hex} value to the right with zero bytes until it reaches the given `size` (default: 32 bytes).\n *\n * @example\n * ```ts\n * import { Hex } from 'ox'\n *\n * Hex.padRight('0x1234', 4)\n * // @log: '0x12340000'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to pad.\n * @param size - The size (in bytes) of the output hex value.\n * @returns The padded {@link ox#Hex.Hex} value.\n */\nexport function padRight(\n  value: Hex,\n  size?: number | undefined,\n): padRight.ReturnType {\n  return internal.pad(value, { dir: 'right', size })\n}\n\nexport declare namespace padRight {\n  type ReturnType = Hex\n  type ErrorType = internal.pad.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Generates a random {@link ox#Hex.Hex} value of the specified length.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * const hex = Hex.random(32)\n * // @log: '0x...'\n * ```\n *\n * @returns Random {@link ox#Hex.Hex} value.\n */\nexport function random(length: number): Hex {\n  return fromBytes(Bytes.random(length))\n}\n\nexport declare namespace random {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Returns a section of a {@link ox#Bytes.Bytes} value given a start/end bytes offset.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.slice('0x0123456789', 1, 4)\n * // @log: '0x234567'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to slice.\n * @param start - The start offset (in bytes).\n * @param end - The end offset (in bytes).\n * @param options - Options.\n * @returns The sliced {@link ox#Hex.Hex} value.\n */\nexport function slice(\n  value: Hex,\n  start?: number | undefined,\n  end?: number | undefined,\n  options: slice.Options = {},\n): Hex {\n  const { strict } = options\n  internal.assertStartOffset(value, start)\n  const value_ = `0x${value\n    .replace('0x', '')\n    .slice((start ?? 0) * 2, (end ?? value.length) * 2)}` as const\n  if (strict) internal.assertEndOffset(value_, start, end)\n  return value_\n}\n\nexport declare namespace slice {\n  type Options = {\n    /** Asserts that the sliced value is the same size as the given start/end offsets. */\n    strict?: boolean | undefined\n  }\n\n  type ErrorType =\n    | internal.assertStartOffset.ErrorType\n    | internal.assertEndOffset.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Retrieves the size of a {@link ox#Hex.Hex} value (in bytes).\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.size('0xdeadbeef')\n * // @log: 4\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to get the size of.\n * @returns The size of the {@link ox#Hex.Hex} value (in bytes).\n */\nexport function size(value: Hex): number {\n  return Math.ceil((value.length - 2) / 2)\n}\n\nexport declare namespace size {\n  export type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Trims leading zeros from a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.trimLeft('0x00000000deadbeef')\n * // @log: '0xdeadbeef'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to trim.\n * @returns The trimmed {@link ox#Hex.Hex} value.\n */\nexport function trimLeft(value: Hex): trimLeft.ReturnType {\n  return internal.trim(value, { dir: 'left' })\n}\n\nexport declare namespace trimLeft {\n  type ReturnType = Hex\n\n  type ErrorType = internal.trim.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Trims trailing zeros from a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.trimRight('0xdeadbeef00000000')\n * // @log: '0xdeadbeef'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to trim.\n * @returns The trimmed {@link ox#Hex.Hex} value.\n */\nexport function trimRight(value: Hex): trimRight.ReturnType {\n  return internal.trim(value, { dir: 'right' })\n}\n\nexport declare namespace trimRight {\n  type ReturnType = Hex\n\n  type ErrorType = internal.trim.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a {@link ox#Hex.Hex} value into a BigInt.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toBigInt('0x1a4')\n * // @log: 420n\n *\n * Hex.toBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // @log: 420n\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded BigInt.\n */\nexport function toBigInt(hex: Hex, options: toBigInt.Options = {}): bigint {\n  const { signed } = options\n\n  if (options.size) internal.assertSize(hex, options.size)\n\n  const value = BigInt(hex)\n  if (!signed) return value\n\n  const size = (hex.length - 2) / 2\n\n  const max_unsigned = (1n << (BigInt(size) * 8n)) - 1n\n  const max_signed = max_unsigned >> 1n\n\n  if (value <= max_signed) return value\n  return value - max_unsigned - 1n\n}\n\nexport declare namespace toBigInt {\n  type Options = {\n    /** Whether or not the number of a signed representation. */\n    signed?: boolean | undefined\n    /** Size (in bytes) of the hex value. */\n    size?: number | undefined\n  }\n\n  type ErrorType = internal.assertSize.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a {@link ox#Hex.Hex} value into a boolean.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toBoolean('0x01')\n * // @log: true\n *\n * Hex.toBoolean('0x0000000000000000000000000000000000000000000000000000000000000001', { size: 32 })\n * // @log: true\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded boolean.\n */\nexport function toBoolean(hex: Hex, options: toBoolean.Options = {}): boolean {\n  if (options.size) internal.assertSize(hex, options.size)\n  const hex_ = trimLeft(hex)\n  if (hex_ === '0x') return false\n  if (hex_ === '0x1') return true\n  throw new InvalidHexBooleanError(hex)\n}\n\nexport declare namespace toBoolean {\n  type Options = {\n    /** Size (in bytes) of the hex value. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | internal.assertSize.ErrorType\n    | trimLeft.ErrorType\n    | InvalidHexBooleanError\n    | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a {@link ox#Hex.Hex} value into a {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * const data = Hex.toBytes('0x48656c6c6f20776f726c6421')\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded {@link ox#Bytes.Bytes}.\n */\nexport function toBytes(hex: Hex, options: toBytes.Options = {}): Bytes.Bytes {\n  return Bytes.fromHex(hex, options)\n}\n\nexport declare namespace toBytes {\n  type Options = {\n    /** Size (in bytes) of the hex value. */\n    size?: number | undefined\n  }\n\n  type ErrorType = Bytes.fromHex.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a {@link ox#Hex.Hex} value into a number.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toNumber('0x1a4')\n * // @log: 420\n *\n * Hex.toNumber('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // @log: 420\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded number.\n */\nexport function toNumber(hex: Hex, options: toNumber.Options = {}): number {\n  const { signed, size } = options\n  if (!signed && !size) return Number(hex)\n  return Number(toBigInt(hex, options))\n}\n\nexport declare namespace toNumber {\n  type Options = toBigInt.Options\n\n  type ErrorType = toBigInt.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a {@link ox#Hex.Hex} value into a string.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toString('0x48656c6c6f20576f726c6421')\n * // @log: 'Hello world!'\n *\n * Hex.toString('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *  size: 32,\n * })\n * // @log: 'Hello world'\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded string.\n */\nexport function toString(hex: Hex, options: toString.Options = {}): string {\n  const { size } = options\n\n  let bytes = Bytes.fromHex(hex)\n  if (size) {\n    internal_bytes.assertSize(bytes, size)\n    bytes = Bytes.trimRight(bytes)\n  }\n  return new TextDecoder().decode(bytes)\n}\n\nexport declare namespace toString {\n  type Options = {\n    /** Size (in bytes) of the hex value. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | internal_bytes.assertSize.ErrorType\n    | Bytes.fromHex.ErrorType\n    | Bytes.trimRight.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Checks if the given value is {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes, Hex } from 'ox'\n *\n * Hex.validate('0xdeadbeef')\n * // @log: true\n *\n * Hex.validate(Bytes.from([1, 2, 3]))\n * // @log: false\n * ```\n *\n * @param value - The value to check.\n * @param options - Options.\n * @returns `true` if the value is a {@link ox#Hex.Hex}, `false` otherwise.\n */\nexport function validate(\n  value: unknown,\n  options: validate.Options = {},\n): value is Hex {\n  const { strict = false } = options\n  try {\n    assert(value, { strict })\n    return true\n  } catch {\n    return false\n  }\n}\n\nexport declare namespace validate {\n  type Options = {\n    /** Checks if the {@link ox#Hex.Hex} value contains invalid hexadecimal characters. @default false */\n    strict?: boolean | undefined\n  }\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Thrown when the provided integer is out of range, and cannot be represented as a hex value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.fromNumber(420182738912731283712937129)\n * // @error: Hex.IntegerOutOfRangeError: Number \\`4.2018273891273126e+26\\` is not in safe unsigned integer range (`0` to `9007199254740991`)\n * ```\n */\nexport class IntegerOutOfRangeError extends Errors.BaseError {\n  override readonly name = 'Hex.IntegerOutOfRangeError'\n\n  constructor({\n    max,\n    min,\n    signed,\n    size,\n    value,\n  }: {\n    max?: string | undefined\n    min: string\n    signed?: boolean | undefined\n    size?: number | undefined\n    value: string\n  }) {\n    super(\n      `Number \\`${value}\\` is not in safe${\n        size ? ` ${size * 8}-bit` : ''\n      }${signed ? ' signed' : ' unsigned'} integer range ${max ? `(\\`${min}\\` to \\`${max}\\`)` : `(above \\`${min}\\`)`}`,\n    )\n  }\n}\n\n/**\n * Thrown when the provided hex value cannot be represented as a boolean.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toBoolean('0xa')\n * // @error: Hex.InvalidHexBooleanError: Hex value `\"0xa\"` is not a valid boolean.\n * // @error: The hex value must be `\"0x0\"` (false) or `\"0x1\"` (true).\n * ```\n */\nexport class InvalidHexBooleanError extends Errors.BaseError {\n  override readonly name = 'Hex.InvalidHexBooleanError'\n\n  constructor(hex: Hex) {\n    super(`Hex value \\`\"${hex}\"\\` is not a valid boolean.`, {\n      metaMessages: [\n        'The hex value must be `\"0x0\"` (false) or `\"0x1\"` (true).',\n      ],\n    })\n  }\n}\n\n/**\n * Thrown when the provided value is not a valid hex type.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.assert(1)\n * // @error: Hex.InvalidHexTypeError: Value `1` of type `number` is an invalid hex type.\n * ```\n */\nexport class InvalidHexTypeError extends Errors.BaseError {\n  override readonly name = 'Hex.InvalidHexTypeError'\n\n  constructor(value: unknown) {\n    super(\n      `Value \\`${typeof value === 'object' ? Json.stringify(value) : value}\\` of type \\`${typeof value}\\` is an invalid hex type.`,\n      {\n        metaMessages: ['Hex types must be represented as `\"0x${string}\"`.'],\n      },\n    )\n  }\n}\n\n/**\n * Thrown when the provided hex value is invalid.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.assert('0x0123456789abcdefg')\n * // @error: Hex.InvalidHexValueError: Value `0x0123456789abcdefg` is an invalid hex value.\n * // @error: Hex values must start with `\"0x\"` and contain only hexadecimal characters (0-9, a-f, A-F).\n * ```\n */\nexport class InvalidHexValueError extends Errors.BaseError {\n  override readonly name = 'Hex.InvalidHexValueError'\n\n  constructor(value: unknown) {\n    super(`Value \\`${value}\\` is an invalid hex value.`, {\n      metaMessages: [\n        'Hex values must start with `\"0x\"` and contain only hexadecimal characters (0-9, a-f, A-F).',\n      ],\n    })\n  }\n}\n\n/**\n * Thrown when the provided hex value is an odd length.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.fromHex('0xabcde')\n * // @error: Hex.InvalidLengthError: Hex value `\"0xabcde\"` is an odd length (5 nibbles).\n * ```\n */\nexport class InvalidLengthError extends Errors.BaseError {\n  override readonly name = 'Hex.InvalidLengthError'\n\n  constructor(value: Hex) {\n    super(\n      `Hex value \\`\"${value}\"\\` is an odd length (${value.length - 2} nibbles).`,\n      {\n        metaMessages: ['It must be an even length.'],\n      },\n    )\n  }\n}\n\n/**\n * Thrown when the size of the value exceeds the expected max size.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.fromString('Hello World!', { size: 8 })\n * // @error: Hex.SizeOverflowError: Size cannot exceed `8` bytes. Given size: `12` bytes.\n * ```\n */\nexport class SizeOverflowError extends Errors.BaseError {\n  override readonly name = 'Hex.SizeOverflowError'\n\n  constructor({ givenSize, maxSize }: { givenSize: number; maxSize: number }) {\n    super(\n      `Size cannot exceed \\`${maxSize}\\` bytes. Given size: \\`${givenSize}\\` bytes.`,\n    )\n  }\n}\n\n/**\n * Thrown when the slice offset exceeds the bounds of the value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.slice('0x0123456789', 6)\n * // @error: Hex.SliceOffsetOutOfBoundsError: Slice starting at offset `6` is out-of-bounds (size: `5`).\n * ```\n */\nexport class SliceOffsetOutOfBoundsError extends Errors.BaseError {\n  override readonly name = 'Hex.SliceOffsetOutOfBoundsError'\n\n  constructor({\n    offset,\n    position,\n    size,\n  }: { offset: number; position: 'start' | 'end'; size: number }) {\n    super(\n      `Slice ${\n        position === 'start' ? 'starting' : 'ending'\n      } at offset \\`${offset}\\` is out-of-bounds (size: \\`${size}\\`).`,\n    )\n  }\n}\n\n/**\n * Thrown when the size of the value exceeds the pad size.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.padLeft('0x1a4e12a45a21323123aaa87a897a897a898a6567a578a867a98778a667a85a875a87a6a787a65a675a6a9', 32)\n * // @error: Hex.SizeExceedsPaddingSizeError: Hex size (`43`) exceeds padding size (`32`).\n * ```\n */\nexport class SizeExceedsPaddingSizeError extends Errors.BaseError {\n  override readonly name = 'Hex.SizeExceedsPaddingSizeError'\n\n  constructor({\n    size,\n    targetSize,\n    type,\n  }: {\n    size: number\n    targetSize: number\n    type: 'Hex' | 'Bytes'\n  }) {\n    super(\n      `${type.charAt(0).toUpperCase()}${type\n        .slice(1)\n        .toLowerCase()} size (\\`${size}\\`) exceeds padding size (\\`${targetSize}\\`).`,\n    )\n  }\n}\n","import * as Bytes from '../Bytes.js'\nimport type * as Errors from '../Errors.js'\n\n/** @internal */\nexport function assertSize(bytes: Bytes.Bytes, size_: number): void {\n  if (Bytes.size(bytes) > size_)\n    throw new Bytes.SizeOverflowError({\n      givenSize: Bytes.size(bytes),\n      maxSize: size_,\n    })\n}\n\n/** @internal */\nexport declare namespace assertSize {\n  type ErrorType =\n    | Bytes.size.ErrorType\n    | Bytes.SizeOverflowError\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function assertStartOffset(\n  value: Bytes.Bytes,\n  start?: number | undefined,\n) {\n  if (typeof start === 'number' && start > 0 && start > Bytes.size(value) - 1)\n    throw new Bytes.SliceOffsetOutOfBoundsError({\n      offset: start,\n      position: 'start',\n      size: Bytes.size(value),\n    })\n}\n\nexport declare namespace assertStartOffset {\n  export type ErrorType =\n    | Bytes.SliceOffsetOutOfBoundsError\n    | Bytes.size.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function assertEndOffset(\n  value: Bytes.Bytes,\n  start?: number | undefined,\n  end?: number | undefined,\n) {\n  if (\n    typeof start === 'number' &&\n    typeof end === 'number' &&\n    Bytes.size(value) !== end - start\n  ) {\n    throw new Bytes.SliceOffsetOutOfBoundsError({\n      offset: end,\n      position: 'end',\n      size: Bytes.size(value),\n    })\n  }\n}\n\n/** @internal */\nexport declare namespace assertEndOffset {\n  type ErrorType =\n    | Bytes.SliceOffsetOutOfBoundsError\n    | Bytes.size.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport const charCodeMap = {\n  zero: 48,\n  nine: 57,\n  A: 65,\n  F: 70,\n  a: 97,\n  f: 102,\n} as const\n\n/** @internal */\nexport function charCodeToBase16(char: number) {\n  if (char >= charCodeMap.zero && char <= charCodeMap.nine)\n    return char - charCodeMap.zero\n  if (char >= charCodeMap.A && char <= charCodeMap.F)\n    return char - (charCodeMap.A - 10)\n  if (char >= charCodeMap.a && char <= charCodeMap.f)\n    return char - (charCodeMap.a - 10)\n  return undefined\n}\n\n/** @internal */\nexport function pad(bytes: Bytes.Bytes, options: pad.Options = {}) {\n  const { dir, size = 32 } = options\n  if (size === 0) return bytes\n  if (bytes.length > size)\n    throw new Bytes.SizeExceedsPaddingSizeError({\n      size: bytes.length,\n      targetSize: size,\n      type: 'Bytes',\n    })\n  const paddedBytes = new Uint8Array(size)\n  for (let i = 0; i < size; i++) {\n    const padEnd = dir === 'right'\n    paddedBytes[padEnd ? i : size - i - 1] =\n      bytes[padEnd ? i : bytes.length - i - 1]!\n  }\n  return paddedBytes\n}\n\n/** @internal */\nexport declare namespace pad {\n  type Options = {\n    dir?: 'left' | 'right' | undefined\n    size?: number | undefined\n  }\n\n  type ReturnType = Bytes.Bytes\n\n  type ErrorType = Bytes.SizeExceedsPaddingSizeError | Errors.GlobalErrorType\n}\n\n/** @internal */\nexport function trim(\n  value: Bytes.Bytes,\n  options: trim.Options = {},\n): trim.ReturnType {\n  const { dir = 'left' } = options\n\n  let data = value\n\n  let sliceLength = 0\n  for (let i = 0; i < data.length - 1; i++) {\n    if (data[dir === 'left' ? i : data.length - i - 1]!.toString() === '0')\n      sliceLength++\n    else break\n  }\n  data =\n    dir === 'left'\n      ? data.slice(sliceLength)\n      : data.slice(0, data.length - sliceLength)\n\n  return data as trim.ReturnType\n}\n\n/** @internal */\nexport declare namespace trim {\n  type Options = {\n    dir?: 'left' | 'right' | undefined\n  }\n\n  type ReturnType = Bytes.Bytes\n\n  type ErrorType = Errors.GlobalErrorType\n}\n","import { equalBytes } from '@noble/curves/abstract/utils'\nimport * as Errors from './Errors.js'\nimport * as Hex from './Hex.js'\nimport * as Json from './Json.js'\nimport * as internal from './internal/bytes.js'\nimport * as internal_hex from './internal/hex.js'\n\nconst decoder = /*#__PURE__*/ new TextDecoder()\nconst encoder = /*#__PURE__*/ new TextEncoder()\n\n/** Root type for a Bytes array. */\nexport type Bytes = Uint8Array\n\n/**\n * Asserts if the given value is {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.assert('abc')\n * // @error: Bytes.InvalidBytesTypeError:\n * // @error: Value `\"abc\"` of type `string` is an invalid Bytes value.\n * // @error: Bytes values must be of type `Uint8Array`.\n * ```\n *\n * @param value - Value to assert.\n */\nexport function assert(value: unknown): asserts value is Bytes {\n  if (value instanceof Uint8Array) return\n  if (!value) throw new InvalidBytesTypeError(value)\n  if (typeof value !== 'object') throw new InvalidBytesTypeError(value)\n  if (!('BYTES_PER_ELEMENT' in value)) throw new InvalidBytesTypeError(value)\n  if (value.BYTES_PER_ELEMENT !== 1 || value.constructor.name !== 'Uint8Array')\n    throw new InvalidBytesTypeError(value)\n}\n\nexport declare namespace assert {\n  type ErrorType = InvalidBytesTypeError | Errors.GlobalErrorType\n}\n\n/**\n * Concatenates two or more {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const bytes = Bytes.concat(\n *   Bytes.from([1]),\n *   Bytes.from([69]),\n *   Bytes.from([420, 69]),\n * )\n * // @log: Uint8Array [ 1, 69, 420, 69 ]\n * ```\n *\n * @param values - Values to concatenate.\n * @returns Concatenated {@link ox#Bytes.Bytes}.\n */\nexport function concat(...values: readonly Bytes[]): Bytes {\n  let length = 0\n  for (const arr of values) {\n    length += arr.length\n  }\n  const result = new Uint8Array(length)\n  for (let i = 0, index = 0; i < values.length; i++) {\n    const arr = values[i]\n    result.set(arr!, index)\n    index += arr!.length\n  }\n  return result\n}\n\nexport declare namespace concat {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Instantiates a {@link ox#Bytes.Bytes} value from a `Uint8Array`, a hex string, or an array of unsigned 8-bit integers.\n *\n * :::tip\n *\n * To instantiate from a **Boolean**, **String**, or **Number**, use one of the following:\n *\n * - `Bytes.fromBoolean`\n *\n * - `Bytes.fromString`\n *\n * - `Bytes.fromNumber`\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.from([255, 124, 5, 4])\n * // @log: Uint8Array([255, 124, 5, 4])\n *\n * const data = Bytes.from('0xdeadbeef')\n * // @log: Uint8Array([222, 173, 190, 239])\n * ```\n *\n * @param value - Value to convert.\n * @returns A {@link ox#Bytes.Bytes} instance.\n */\nexport function from(value: Hex.Hex | Bytes | readonly number[]): Bytes {\n  if (value instanceof Uint8Array) return value\n  if (typeof value === 'string') return fromHex(value)\n  return fromArray(value)\n}\n\nexport declare namespace from {\n  type ErrorType =\n    | fromHex.ErrorType\n    | fromArray.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Converts an array of unsigned 8-bit integers into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromArray([255, 124, 5, 4])\n * // @log: Uint8Array([255, 124, 5, 4])\n * ```\n *\n * @param value - Value to convert.\n * @returns A {@link ox#Bytes.Bytes} instance.\n */\nexport function fromArray(value: readonly number[] | Uint8Array): Bytes {\n  return value instanceof Uint8Array ? value : new Uint8Array(value)\n}\n\nexport declare namespace fromArray {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Encodes a boolean value into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromBoolean(true)\n * // @log: Uint8Array([1])\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromBoolean(true, { size: 32 })\n * // @log: Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])\n * ```\n *\n * @param value - Boolean value to encode.\n * @param options - Encoding options.\n * @returns Encoded {@link ox#Bytes.Bytes}.\n */\nexport function fromBoolean(value: boolean, options: fromBoolean.Options = {}) {\n  const { size } = options\n  const bytes = new Uint8Array(1)\n  bytes[0] = Number(value)\n  if (typeof size === 'number') {\n    internal.assertSize(bytes, size)\n    return padLeft(bytes, size)\n  }\n  return bytes\n}\n\nexport declare namespace fromBoolean {\n  type Options = {\n    /** Size of the output bytes. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | internal.assertSize.ErrorType\n    | padLeft.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Encodes a {@link ox#Hex.Hex} value into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromHex('0x48656c6c6f20776f726c6421')\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromHex('0x48656c6c6f20776f726c6421', { size: 32 })\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n * ```\n *\n * @param value - {@link ox#Hex.Hex} value to encode.\n * @param options - Encoding options.\n * @returns Encoded {@link ox#Bytes.Bytes}.\n */\nexport function fromHex(value: Hex.Hex, options: fromHex.Options = {}): Bytes {\n  const { size } = options\n\n  let hex = value\n  if (size) {\n    internal_hex.assertSize(value, size)\n    hex = Hex.padRight(value, size)\n  }\n\n  let hexString = hex.slice(2) as string\n  if (hexString.length % 2) hexString = `0${hexString}`\n\n  const length = hexString.length / 2\n  const bytes = new Uint8Array(length)\n  for (let index = 0, j = 0; index < length; index++) {\n    const nibbleLeft = internal.charCodeToBase16(hexString.charCodeAt(j++))\n    const nibbleRight = internal.charCodeToBase16(hexString.charCodeAt(j++))\n    if (nibbleLeft === undefined || nibbleRight === undefined) {\n      throw new Errors.BaseError(\n        `Invalid byte sequence (\"${hexString[j - 2]}${hexString[j - 1]}\" in \"${hexString}\").`,\n      )\n    }\n    bytes[index] = nibbleLeft * 16 + nibbleRight\n  }\n  return bytes\n}\n\nexport declare namespace fromHex {\n  type Options = {\n    /** Size of the output bytes. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | internal_hex.assertSize.ErrorType\n    | Hex.padRight.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Encodes a number value into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromNumber(420)\n * // @log: Uint8Array([1, 164])\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromNumber(420, { size: 4 })\n * // @log: Uint8Array([0, 0, 1, 164])\n * ```\n *\n * @param value - Number value to encode.\n * @param options - Encoding options.\n * @returns Encoded {@link ox#Bytes.Bytes}.\n */\nexport function fromNumber(\n  value: bigint | number,\n  options?: fromNumber.Options | undefined,\n) {\n  const hex = Hex.fromNumber(value, options)\n  return fromHex(hex)\n}\n\nexport declare namespace fromNumber {\n  export type Options = Hex.fromNumber.Options\n\n  export type ErrorType =\n    | Hex.fromNumber.ErrorType\n    | fromHex.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Encodes a string into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromString('Hello world!')\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 33])\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromString('Hello world!', { size: 32 })\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n * ```\n *\n * @param value - String to encode.\n * @param options - Encoding options.\n * @returns Encoded {@link ox#Bytes.Bytes}.\n */\nexport function fromString(\n  value: string,\n  options: fromString.Options = {},\n): Bytes {\n  const { size } = options\n\n  const bytes = encoder.encode(value)\n  if (typeof size === 'number') {\n    internal.assertSize(bytes, size)\n    return padRight(bytes, size)\n  }\n  return bytes\n}\n\nexport declare namespace fromString {\n  type Options = {\n    /** Size of the output bytes. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | internal.assertSize.ErrorType\n    | padRight.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Checks if two {@link ox#Bytes.Bytes} values are equal.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.isEqual(Bytes.from([1]), Bytes.from([1]))\n * // @log: true\n *\n * Bytes.isEqual(Bytes.from([1]), Bytes.from([2]))\n * // @log: false\n * ```\n *\n * @param bytesA - First {@link ox#Bytes.Bytes} value.\n * @param bytesB - Second {@link ox#Bytes.Bytes} value.\n * @returns `true` if the two values are equal, otherwise `false`.\n */\nexport function isEqual(bytesA: Bytes, bytesB: Bytes) {\n  return equalBytes(bytesA, bytesB)\n}\n\nexport declare namespace isEqual {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Pads a {@link ox#Bytes.Bytes} value to the left with zero bytes until it reaches the given `size` (default: 32 bytes).\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.padLeft(Bytes.from([1]), 4)\n * // @log: Uint8Array([0, 0, 0, 1])\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value to pad.\n * @param size - Size to pad the {@link ox#Bytes.Bytes} value to.\n * @returns Padded {@link ox#Bytes.Bytes} value.\n */\nexport function padLeft(\n  value: Bytes,\n  size?: number | undefined,\n): padLeft.ReturnType {\n  return internal.pad(value, { dir: 'left', size })\n}\n\nexport declare namespace padLeft {\n  type ReturnType = internal.pad.ReturnType\n  type ErrorType = internal.pad.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Pads a {@link ox#Bytes.Bytes} value to the right with zero bytes until it reaches the given `size` (default: 32 bytes).\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.padRight(Bytes.from([1]), 4)\n * // @log: Uint8Array([1, 0, 0, 0])\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value to pad.\n * @param size - Size to pad the {@link ox#Bytes.Bytes} value to.\n * @returns Padded {@link ox#Bytes.Bytes} value.\n */\nexport function padRight(\n  value: Bytes,\n  size?: number | undefined,\n): padRight.ReturnType {\n  return internal.pad(value, { dir: 'right', size })\n}\n\nexport declare namespace padRight {\n  type ReturnType = internal.pad.ReturnType\n  type ErrorType = internal.pad.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Generates random {@link ox#Bytes.Bytes} of the specified length.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const bytes = Bytes.random(32)\n * // @log: Uint8Array([... x32])\n * ```\n *\n * @param length - Length of the random {@link ox#Bytes.Bytes} to generate.\n * @returns Random {@link ox#Bytes.Bytes} of the specified length.\n */\nexport function random(length: number): Bytes {\n  return crypto.getRandomValues(new Uint8Array(length))\n}\n\nexport declare namespace random {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Retrieves the size of a {@link ox#Bytes.Bytes} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.size(Bytes.from([1, 2, 3, 4]))\n * // @log: 4\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value.\n * @returns Size of the {@link ox#Bytes.Bytes} value.\n */\nexport function size(value: Bytes): number {\n  return value.length\n}\n\nexport declare namespace size {\n  export type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Returns a section of a {@link ox#Bytes.Bytes} value given a start/end bytes offset.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.slice(\n *   Bytes.from([1, 2, 3, 4, 5, 6, 7, 8, 9]),\n *   1,\n *   4,\n * )\n * // @log: Uint8Array([2, 3, 4])\n * ```\n *\n * @param value - The {@link ox#Bytes.Bytes} value.\n * @param start - Start offset.\n * @param end - End offset.\n * @param options - Slice options.\n * @returns Sliced {@link ox#Bytes.Bytes} value.\n */\nexport function slice(\n  value: Bytes,\n  start?: number | undefined,\n  end?: number | undefined,\n  options: slice.Options = {},\n): Bytes {\n  const { strict } = options\n  internal.assertStartOffset(value, start)\n  const value_ = value.slice(start, end)\n  if (strict) internal.assertEndOffset(value_, start, end)\n  return value_\n}\n\nexport declare namespace slice {\n  type Options = {\n    /** Asserts that the sliced value is the same size as the given start/end offsets. */\n    strict?: boolean | undefined\n  }\n\n  export type ErrorType =\n    | internal.assertStartOffset.ErrorType\n    | internal.assertEndOffset.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a {@link ox#Bytes.Bytes} into a bigint.\n *\n * @example\n * ```ts\n * import { Bytes } from 'ox'\n *\n * Bytes.toBigInt(Bytes.from([1, 164]))\n * // @log: 420n\n * ```\n *\n * @param bytes - The {@link ox#Bytes.Bytes} to decode.\n * @param options - Decoding options.\n * @returns Decoded bigint.\n */\nexport function toBigInt(bytes: Bytes, options: toBigInt.Options = {}): bigint {\n  const { size } = options\n  if (typeof size !== 'undefined') internal.assertSize(bytes, size)\n  const hex = Hex.fromBytes(bytes, options)\n  return Hex.toBigInt(hex, options)\n}\n\nexport declare namespace toBigInt {\n  type Options = {\n    /** Whether or not the number of a signed representation. */\n    signed?: boolean | undefined\n    /** Size of the bytes. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | Hex.fromBytes.ErrorType\n    | Hex.toBigInt.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a {@link ox#Bytes.Bytes} into a boolean.\n *\n * @example\n * ```ts\n * import { Bytes } from 'ox'\n *\n * Bytes.toBoolean(Bytes.from([1]))\n * // @log: true\n * ```\n *\n * @param bytes - The {@link ox#Bytes.Bytes} to decode.\n * @param options - Decoding options.\n * @returns Decoded boolean.\n */\nexport function toBoolean(\n  bytes: Bytes,\n  options: toBoolean.Options = {},\n): boolean {\n  const { size } = options\n  let bytes_ = bytes\n  if (typeof size !== 'undefined') {\n    internal.assertSize(bytes_, size)\n    bytes_ = trimLeft(bytes_)\n  }\n  if (bytes_.length > 1 || bytes_[0]! > 1)\n    throw new InvalidBytesBooleanError(bytes_)\n  return Boolean(bytes_[0])\n}\n\nexport declare namespace toBoolean {\n  type Options = {\n    /** Size of the bytes. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | internal.assertSize.ErrorType\n    | trimLeft.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Encodes a {@link ox#Bytes.Bytes} value into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.toHex(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // '0x48656c6c6f20576f726c6421'\n * ```\n *\n * @param value - The {@link ox#Bytes.Bytes} to decode.\n * @param options - Options.\n * @returns Decoded {@link ox#Hex.Hex} value.\n */\nexport function toHex(value: Bytes, options: toHex.Options = {}): Hex.Hex {\n  return Hex.fromBytes(value, options)\n}\n\nexport declare namespace toHex {\n  type Options = {\n    /** Size of the bytes. */\n    size?: number | undefined\n  }\n\n  type ErrorType = Hex.fromBytes.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a {@link ox#Bytes.Bytes} into a number.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.toNumber(Bytes.from([1, 164]))\n * // @log: 420\n * ```\n */\nexport function toNumber(bytes: Bytes, options: toNumber.Options = {}): number {\n  const { size } = options\n  if (typeof size !== 'undefined') internal.assertSize(bytes, size)\n  const hex = Hex.fromBytes(bytes, options)\n  return Hex.toNumber(hex, options)\n}\n\nexport declare namespace toNumber {\n  type Options = {\n    /** Whether or not the number of a signed representation. */\n    signed?: boolean | undefined\n    /** Size of the bytes. */\n    size?: number | undefined\n  }\n\n  type ErrorType =\n    | Hex.fromBytes.ErrorType\n    | Hex.toNumber.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a {@link ox#Bytes.Bytes} into a string.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.toString(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // @log: 'Hello world'\n * ```\n *\n * @param bytes - The {@link ox#Bytes.Bytes} to decode.\n * @param options - Options.\n * @returns Decoded string.\n */\nexport function toString(bytes: Bytes, options: toString.Options = {}): string {\n  const { size } = options\n\n  let bytes_ = bytes\n  if (typeof size !== 'undefined') {\n    internal.assertSize(bytes_, size)\n    bytes_ = trimRight(bytes_)\n  }\n  return decoder.decode(bytes_)\n}\n\nexport declare namespace toString {\n  export type Options = {\n    /** Size of the bytes. */\n    size?: number | undefined\n  }\n\n  export type ErrorType =\n    | internal.assertSize.ErrorType\n    | trimRight.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Trims leading zeros from a {@link ox#Bytes.Bytes} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.trimLeft(Bytes.from([0, 0, 0, 0, 1, 2, 3]))\n * // @log: Uint8Array([1, 2, 3])\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value.\n * @returns Trimmed {@link ox#Bytes.Bytes} value.\n */\nexport function trimLeft(value: Bytes): Bytes {\n  return internal.trim(value, { dir: 'left' })\n}\n\nexport declare namespace trimLeft {\n  type ErrorType = internal.trim.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Trims trailing zeros from a {@link ox#Bytes.Bytes} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.trimRight(Bytes.from([1, 2, 3, 0, 0, 0, 0]))\n * // @log: Uint8Array([1, 2, 3])\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value.\n * @returns Trimmed {@link ox#Bytes.Bytes} value.\n */\nexport function trimRight(value: Bytes): Bytes {\n  return internal.trim(value, { dir: 'right' })\n}\n\nexport declare namespace trimRight {\n  export type ErrorType = internal.trim.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Checks if the given value is {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.validate('0x')\n * // @log: false\n *\n * Bytes.validate(Bytes.from([1, 2, 3]))\n * // @log: true\n * ```\n *\n * @param value - Value to check.\n * @returns `true` if the value is {@link ox#Bytes.Bytes}, otherwise `false`.\n */\nexport function validate(value: unknown): value is Bytes {\n  try {\n    assert(value)\n    return true\n  } catch {\n    return false\n  }\n}\n\nexport declare namespace validate {\n  export type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Thrown when the bytes value cannot be represented as a boolean.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.toBoolean(Bytes.from([5]))\n * // @error: Bytes.InvalidBytesBooleanError: Bytes value `[5]` is not a valid boolean.\n * // @error: The bytes array must contain a single byte of either a `0` or `1` value.\n * ```\n */\nexport class InvalidBytesBooleanError extends Errors.BaseError {\n  override readonly name = 'Bytes.InvalidBytesBooleanError'\n\n  constructor(bytes: Bytes) {\n    super(`Bytes value \\`${bytes}\\` is not a valid boolean.`, {\n      metaMessages: [\n        'The bytes array must contain a single byte of either a `0` or `1` value.',\n      ],\n    })\n  }\n}\n\n/**\n * Thrown when a value cannot be converted to bytes.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Bytes } from 'ox'\n *\n * Bytes.from('foo')\n * // @error: Bytes.InvalidBytesTypeError: Value `foo` of type `string` is an invalid Bytes value.\n * ```\n */\nexport class InvalidBytesTypeError extends Errors.BaseError {\n  override readonly name = 'Bytes.InvalidBytesTypeError'\n\n  constructor(value: unknown) {\n    super(\n      `Value \\`${typeof value === 'object' ? Json.stringify(value) : value}\\` of type \\`${typeof value}\\` is an invalid Bytes value.`,\n      {\n        metaMessages: ['Bytes values must be of type `Bytes`.'],\n      },\n    )\n  }\n}\n\n/**\n * Thrown when a size exceeds the maximum allowed size.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.fromString('Hello World!', { size: 8 })\n * // @error: Bytes.SizeOverflowError: Size cannot exceed `8` bytes. Given size: `12` bytes.\n * ```\n */\nexport class SizeOverflowError extends Errors.BaseError {\n  override readonly name = 'Bytes.SizeOverflowError'\n\n  constructor({ givenSize, maxSize }: { givenSize: number; maxSize: number }) {\n    super(\n      `Size cannot exceed \\`${maxSize}\\` bytes. Given size: \\`${givenSize}\\` bytes.`,\n    )\n  }\n}\n\n/**\n * Thrown when a slice offset is out-of-bounds.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.slice(Bytes.from([1, 2, 3]), 4)\n * // @error: Bytes.SliceOffsetOutOfBoundsError: Slice starting at offset `4` is out-of-bounds (size: `3`).\n * ```\n */\nexport class SliceOffsetOutOfBoundsError extends Errors.BaseError {\n  override readonly name = 'Bytes.SliceOffsetOutOfBoundsError'\n\n  constructor({\n    offset,\n    position,\n    size,\n  }: { offset: number; position: 'start' | 'end'; size: number }) {\n    super(\n      `Slice ${\n        position === 'start' ? 'starting' : 'ending'\n      } at offset \\`${offset}\\` is out-of-bounds (size: \\`${size}\\`).`,\n    )\n  }\n}\n\n/**\n * Thrown when a the padding size exceeds the maximum allowed size.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.padLeft(Bytes.fromString('Hello World!'), 8)\n * // @error: [Bytes.SizeExceedsPaddingSizeError: Bytes size (`12`) exceeds padding size (`8`).\n * ```\n */\nexport class SizeExceedsPaddingSizeError extends Errors.BaseError {\n  override readonly name = 'Bytes.SizeExceedsPaddingSizeError'\n\n  constructor({\n    size,\n    targetSize,\n    type,\n  }: {\n    size: number\n    targetSize: number\n    type: 'Hex' | 'Bytes'\n  }) {\n    super(\n      `${type.charAt(0).toUpperCase()}${type\n        .slice(1)\n        .toLowerCase()} size (\\`${size}\\`) exceeds padding size (\\`${targetSize}\\`).`,\n    )\n  }\n}\n","import * as Bytes from './Bytes.js'\nimport * as Errors from './Errors.js'\nimport * as Hex from './Hex.js'\nimport * as Json from './Json.js'\nimport type { Compute, ExactPartial } from './internal/types.js'\n\n/** Root type for an ECDSA Public Key. */\nexport type PublicKey<\n  compressed extends boolean = false,\n  bigintType = bigint,\n  numberType = number,\n> = Compute<\n  compressed extends true\n    ? {\n        prefix: numberType\n        x: bigintType\n        y?: undefined\n      }\n    : {\n        prefix: numberType\n        x: bigintType\n        y: bigintType\n      }\n>\n\n/**\n * Asserts that a {@link ox#PublicKey.PublicKey} is valid.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * PublicKey.assert({\n *   prefix: 4,\n *   y: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * })\n * // @error: PublicKey.InvalidError: Value \\`{\"y\":\"1\"}\\` is not a valid public key.\n * // @error: Public key must contain:\n * // @error: - an `x` and `prefix` value (compressed)\n * // @error: - an `x`, `y`, and `prefix` value (uncompressed)\n * ```\n *\n * @param publicKey - The public key object to assert.\n */\nexport function assert(\n  publicKey: ExactPartial<PublicKey>,\n  options: assert.Options = {},\n): asserts publicKey is PublicKey {\n  const { compressed } = options\n  const { prefix, x, y } = publicKey\n\n  // Uncompressed\n  if (\n    compressed === false ||\n    (typeof x === 'bigint' && typeof y === 'bigint')\n  ) {\n    if (prefix !== 4)\n      throw new InvalidPrefixError({\n        prefix,\n        cause: new InvalidUncompressedPrefixError(),\n      })\n    return\n  }\n\n  // Compressed\n  if (\n    compressed === true ||\n    (typeof x === 'bigint' && typeof y === 'undefined')\n  ) {\n    if (prefix !== 3 && prefix !== 2)\n      throw new InvalidPrefixError({\n        prefix,\n        cause: new InvalidCompressedPrefixError(),\n      })\n    return\n  }\n\n  // Unknown/invalid\n  throw new InvalidError({ publicKey })\n}\n\nexport declare namespace assert {\n  type Options = {\n    /** Whether or not the public key should be compressed. */\n    compressed?: boolean\n  }\n\n  type ErrorType = InvalidError | InvalidPrefixError | Errors.GlobalErrorType\n}\n\n/**\n * Compresses a {@link ox#PublicKey.PublicKey}.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.from({\n *   prefix: 4,\n *   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n *   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * })\n *\n * const compressed = PublicKey.compress(publicKey) // [!code focus]\n * // @log: {\n * // @log:   prefix: 3,\n * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n * // @log: }\n * ```\n *\n * @param publicKey - The public key to compress.\n * @returns The compressed public key.\n */\nexport function compress(publicKey: PublicKey<false>): PublicKey<true> {\n  const { x, y } = publicKey\n  return {\n    prefix: y % 2n === 0n ? 2 : 3,\n    x,\n  }\n}\n\nexport declare namespace compress {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Instantiates a typed {@link ox#PublicKey.PublicKey} object from a {@link ox#PublicKey.PublicKey}, {@link ox#Bytes.Bytes}, or {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.from({\n *   prefix: 4,\n *   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n *   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * })\n * // @log: {\n * // @log:   prefix: 4,\n * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n * // @log:   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * // @log: }\n * ```\n *\n * @example\n * ### From Serialized\n *\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.from('0x048318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed753547f11ca8696646f2f3acb08e31016afac23e630c5d11f59f61fef57b0d2aa5')\n * // @log: {\n * // @log:   prefix: 4,\n * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n * // @log:   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * // @log: }\n * ```\n *\n * @param value - The public key value to instantiate.\n * @returns The instantiated {@link ox#PublicKey.PublicKey}.\n */\nexport function from<\n  const publicKey extends\n    | CompressedPublicKey\n    | UncompressedPublicKey\n    | Hex.Hex\n    | Bytes.Bytes,\n>(value: from.Value<publicKey>): from.ReturnType<publicKey> {\n  const publicKey = (() => {\n    if (Hex.validate(value)) return fromHex(value)\n    if (Bytes.validate(value)) return fromBytes(value)\n\n    const { prefix, x, y } = value\n    if (typeof x === 'bigint' && typeof y === 'bigint')\n      return { prefix: prefix ?? 0x04, x, y }\n    return { prefix, x }\n  })()\n\n  assert(publicKey)\n\n  return publicKey as never\n}\n\n/** @internal */\ntype CompressedPublicKey = PublicKey<true>\n\n/** @internal */\ntype UncompressedPublicKey = Omit<PublicKey<false>, 'prefix'> & {\n  prefix?: PublicKey['prefix'] | undefined\n}\n\nexport declare namespace from {\n  type Value<\n    publicKey extends\n      | CompressedPublicKey\n      | UncompressedPublicKey\n      | Hex.Hex\n      | Bytes.Bytes = PublicKey,\n  > = publicKey | CompressedPublicKey | UncompressedPublicKey\n\n  type ReturnType<\n    publicKey extends\n      | CompressedPublicKey\n      | UncompressedPublicKey\n      | Hex.Hex\n      | Bytes.Bytes = PublicKey,\n  > = publicKey extends CompressedPublicKey | UncompressedPublicKey\n    ? publicKey extends UncompressedPublicKey\n      ? Compute<publicKey & { readonly prefix: 0x04 }>\n      : publicKey\n    : PublicKey\n\n  type ErrorType = assert.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Deserializes a {@link ox#PublicKey.PublicKey} from a {@link ox#Bytes.Bytes} value.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.fromBytes(new Uint8Array([128, 3, 131, ...]))\n * // @log: {\n * // @log:   prefix: 4,\n * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n * // @log:   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * // @log: }\n * ```\n *\n * @param publicKey - The serialized public key.\n * @returns The deserialized public key.\n */\nexport function fromBytes(publicKey: Bytes.Bytes): PublicKey {\n  return fromHex(Hex.fromBytes(publicKey))\n}\n\nexport declare namespace fromBytes {\n  type ErrorType =\n    | fromHex.ErrorType\n    | Hex.fromBytes.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Deserializes a {@link ox#PublicKey.PublicKey} from a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.fromHex('0x8318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed753547f11ca8696646f2f3acb08e31016afac23e630c5d11f59f61fef57b0d2aa5')\n * // @log: {\n * // @log:   prefix: 4,\n * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n * // @log:   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * // @log: }\n * ```\n *\n * @example\n * ### Deserializing a Compressed Public Key\n *\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.fromHex('0x038318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed75')\n * // @log: {\n * // @log:   prefix: 3,\n * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n * // @log: }\n * ```\n *\n * @param publicKey - The serialized public key.\n * @returns The deserialized public key.\n */\nexport function fromHex(publicKey: Hex.Hex): PublicKey {\n  if (\n    publicKey.length !== 132 &&\n    publicKey.length !== 130 &&\n    publicKey.length !== 68\n  )\n    throw new InvalidSerializedSizeError({ publicKey })\n\n  if (publicKey.length === 130) {\n    const x = BigInt(Hex.slice(publicKey, 0, 32))\n    const y = BigInt(Hex.slice(publicKey, 32, 64))\n    return {\n      prefix: 4,\n      x,\n      y,\n    } as never\n  }\n\n  if (publicKey.length === 132) {\n    const prefix = Number(Hex.slice(publicKey, 0, 1))\n    const x = BigInt(Hex.slice(publicKey, 1, 33))\n    const y = BigInt(Hex.slice(publicKey, 33, 65))\n    return {\n      prefix,\n      x,\n      y,\n    } as never\n  }\n\n  const prefix = Number(Hex.slice(publicKey, 0, 1))\n  const x = BigInt(Hex.slice(publicKey, 1, 33))\n  return {\n    prefix,\n    x,\n  } as never\n}\n\nexport declare namespace fromHex {\n  type ErrorType = Hex.slice.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Serializes a {@link ox#PublicKey.PublicKey} to {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.from({\n *   prefix: 4,\n *   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n *   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * })\n *\n * const bytes = PublicKey.toBytes(publicKey) // [!code focus]\n * // @log: Uint8Array [128, 3, 131, ...]\n * ```\n *\n * @param publicKey - The public key to serialize.\n * @returns The serialized public key.\n */\nexport function toBytes(\n  publicKey: PublicKey<boolean>,\n  options: toBytes.Options = {},\n): Bytes.Bytes {\n  return Bytes.fromHex(toHex(publicKey, options))\n}\n\nexport declare namespace toBytes {\n  type Options = {\n    /**\n     * Whether to include the prefix in the serialized public key.\n     * @default true\n     */\n    includePrefix?: boolean | undefined\n  }\n\n  type ErrorType =\n    | Hex.fromNumber.ErrorType\n    | Bytes.fromHex.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Serializes a {@link ox#PublicKey.PublicKey} to {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.from({\n *   prefix: 4,\n *   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n *   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * })\n *\n * const hex = PublicKey.toHex(publicKey) // [!code focus]\n * // @log: '0x048318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed753547f11ca8696646f2f3acb08e31016afac23e630c5d11f59f61fef57b0d2aa5'\n * ```\n *\n * @param publicKey - The public key to serialize.\n * @returns The serialized public key.\n */\nexport function toHex(\n  publicKey: PublicKey<boolean>,\n  options: toHex.Options = {},\n): Hex.Hex {\n  assert(publicKey)\n\n  const { prefix, x, y } = publicKey\n  const { includePrefix = true } = options\n\n  const publicKey_ = Hex.concat(\n    includePrefix ? Hex.fromNumber(prefix, { size: 1 }) : '0x',\n    Hex.fromNumber(x, { size: 32 }),\n    // If the public key is not compressed, add the y coordinate.\n    typeof y === 'bigint' ? Hex.fromNumber(y, { size: 32 }) : '0x',\n  )\n\n  return publicKey_\n}\n\nexport declare namespace toHex {\n  type Options = {\n    /**\n     * Whether to include the prefix in the serialized public key.\n     * @default true\n     */\n    includePrefix?: boolean | undefined\n  }\n\n  type ErrorType = Hex.fromNumber.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Validates a {@link ox#PublicKey.PublicKey}. Returns `true` if valid, `false` otherwise.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const valid = PublicKey.validate({\n *   prefix: 4,\n *   y: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * })\n * // @log: false\n * ```\n *\n * @param publicKey - The public key object to assert.\n */\nexport function validate(\n  publicKey: ExactPartial<PublicKey>,\n  options: validate.Options = {},\n): boolean {\n  try {\n    assert(publicKey, options)\n    return true\n  } catch (error) {\n    return false\n  }\n}\n\nexport declare namespace validate {\n  type Options = {\n    /** Whether or not the public key should be compressed. */\n    compressed?: boolean\n  }\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Thrown when a public key is invalid.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * PublicKey.assert({ y: 1n })\n * // @error: PublicKey.InvalidError: Value `{\"y\":1n}` is not a valid public key.\n * // @error: Public key must contain:\n * // @error: - an `x` and `prefix` value (compressed)\n * // @error: - an `x`, `y`, and `prefix` value (uncompressed)\n * ```\n */\nexport class InvalidError extends Errors.BaseError {\n  override readonly name = 'PublicKey.InvalidError'\n\n  constructor({ publicKey }: { publicKey: unknown }) {\n    super(`Value \\`${Json.stringify(publicKey)}\\` is not a valid public key.`, {\n      metaMessages: [\n        'Public key must contain:',\n        '- an `x` and `prefix` value (compressed)',\n        '- an `x`, `y`, and `prefix` value (uncompressed)',\n      ],\n    })\n  }\n}\n\n/** Thrown when a public key has an invalid prefix. */\nexport class InvalidPrefixError<\n  cause extends InvalidCompressedPrefixError | InvalidUncompressedPrefixError =\n    | InvalidCompressedPrefixError\n    | InvalidUncompressedPrefixError,\n> extends Errors.BaseError<cause> {\n  override readonly name = 'PublicKey.InvalidPrefixError'\n\n  constructor({ prefix, cause }: { prefix: number | undefined; cause: cause }) {\n    super(`Prefix \"${prefix}\" is invalid.`, {\n      cause,\n    })\n  }\n}\n\n/** Thrown when the public key has an invalid prefix for a compressed public key. */\nexport class InvalidCompressedPrefixError extends Errors.BaseError {\n  override readonly name = 'PublicKey.InvalidCompressedPrefixError'\n\n  constructor() {\n    super('Prefix must be 2 or 3 for compressed public keys.')\n  }\n}\n\n/** Thrown when the public key has an invalid prefix for an uncompressed public key. */\nexport class InvalidUncompressedPrefixError extends Errors.BaseError {\n  override readonly name = 'PublicKey.InvalidUncompressedPrefixError'\n\n  constructor() {\n    super('Prefix must be 4 for uncompressed public keys.')\n  }\n}\n\n/** Thrown when the public key has an invalid serialized size. */\nexport class InvalidSerializedSizeError extends Errors.BaseError {\n  override readonly name = 'PublicKey.InvalidSerializedSizeError'\n\n  constructor({ publicKey }: { publicKey: Hex.Hex | Bytes.Bytes }) {\n    super(`Value \\`${publicKey}\\` is an invalid public key size.`, {\n      metaMessages: [\n        'Expected: 33 bytes (compressed + prefix), 64 bytes (uncompressed) or 65 bytes (uncompressed + prefix).',\n        `Received ${Hex.size(Hex.from(publicKey))} bytes.`,\n      ],\n    })\n  }\n}\n","import * as Bytes from './Bytes.js'\nimport type * as Errors from './Errors.js'\nimport * as Hex from './Hex.js'\n\nconst encoder = /*#__PURE__*/ new TextEncoder()\nconst decoder = /*#__PURE__*/ new TextDecoder()\n\nconst integerToCharacter = /*#__PURE__*/ Object.fromEntries(\n  Array.from(\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  ).map((a, i) => [i, a.charCodeAt(0)]),\n)\n\nconst characterToInteger = /*#__PURE__*/ {\n  ...Object.fromEntries(\n    Array.from(\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n    ).map((a, i) => [a.charCodeAt(0), i]),\n  ),\n  ['='.charCodeAt(0)]: 0,\n  ['-'.charCodeAt(0)]: 62,\n  ['_'.charCodeAt(0)]: 63,\n} as Record<number, number>\n\n/**\n * Encodes a {@link ox#Bytes.Bytes} to a Base64-encoded string (with optional padding and/or URL-safe characters).\n *\n * @example\n * ```ts twoslash\n * import { Base64, Bytes } from 'ox'\n *\n * const value = Base64.fromBytes(Bytes.fromString('hello world'))\n * // @log: 'aGVsbG8gd29ybGQ='\n * ```\n *\n * @example\n * ### No Padding\n *\n * Turn off [padding of encoded data](https://datatracker.ietf.org/doc/html/rfc4648#section-3.2) with the `pad` option:\n *\n * ```ts twoslash\n * import { Base64, Bytes } from 'ox'\n *\n * const value = Base64.fromBytes(Bytes.fromString('hello world'), { pad: false })\n * // @log: 'aGVsbG8gd29ybGQ'\n * ```\n *\n * ### URL-safe Encoding\n *\n * Turn on [URL-safe encoding](https://datatracker.ietf.org/doc/html/rfc4648#section-5) (Base64 URL) with the `url` option:\n *\n * ```ts twoslash\n * import { Base64, Bytes } from 'ox'\n *\n * const value = Base64.fromBytes(Bytes.fromString('hello wod'), { url: true })\n * // @log: 'aGVsbG8gd29_77-9ZA=='\n * ```\n *\n * @param value - The byte array to encode.\n * @param options - Encoding options.\n * @returns The Base64 encoded string.\n */\nexport function fromBytes(value: Bytes.Bytes, options: fromBytes.Options = {}) {\n  const { pad = true, url = false } = options\n\n  const encoded = new Uint8Array(Math.ceil(value.length / 3) * 4)\n\n  for (let i = 0, j = 0; j < value.length; i += 4, j += 3) {\n    const y = (value[j]! << 16) + (value[j + 1]! << 8) + (value[j + 2]! | 0)\n    encoded[i] = integerToCharacter[y >> 18]!\n    encoded[i + 1] = integerToCharacter[(y >> 12) & 0x3f]!\n    encoded[i + 2] = integerToCharacter[(y >> 6) & 0x3f]!\n    encoded[i + 3] = integerToCharacter[y & 0x3f]!\n  }\n\n  const k = value.length % 3\n  const end = Math.floor(value.length / 3) * 4 + (k && k + 1)\n  let base64 = decoder.decode(new Uint8Array(encoded.buffer, 0, end))\n  if (pad && k === 1) base64 += '=='\n  if (pad && k === 2) base64 += '='\n  if (url) base64 = base64.replaceAll('+', '-').replaceAll('/', '_')\n  return base64\n}\n\nexport declare namespace fromBytes {\n  type Options = {\n    /**\n     * Whether to [pad](https://datatracker.ietf.org/doc/html/rfc4648#section-3.2) the Base64 encoded string.\n     *\n     * @default true\n     */\n    pad?: boolean | undefined\n    /**\n     * Whether to Base64 encode with [URL safe characters](https://datatracker.ietf.org/doc/html/rfc4648#section-5).\n     *\n     * @default false\n     */\n    url?: boolean | undefined\n  }\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Encodes a {@link ox#Hex.Hex} to a Base64-encoded string (with optional padding and/or URL-safe characters).\n *\n * @example\n * ```ts twoslash\n * import { Base64, Hex } from 'ox'\n *\n * const value = Base64.fromHex(Hex.fromString('hello world'))\n * // @log: 'aGVsbG8gd29ybGQ='\n * ```\n *\n * @example\n * ### No Padding\n *\n * Turn off [padding of encoded data](https://datatracker.ietf.org/doc/html/rfc4648#section-3.2) with the `pad` option:\n *\n * ```ts twoslash\n * import { Base64, Hex } from 'ox'\n *\n * const value = Base64.fromHex(Hex.fromString('hello world'), { pad: false })\n * // @log: 'aGVsbG8gd29ybGQ'\n * ```\n *\n * ### URL-safe Encoding\n *\n * Turn on [URL-safe encoding](https://datatracker.ietf.org/doc/html/rfc4648#section-5) (Base64 URL) with the `url` option:\n *\n * ```ts twoslash\n * import { Base64, Hex } from 'ox'\n *\n * const value = Base64.fromHex(Hex.fromString('hello wod'), { url: true })\n * // @log: 'aGVsbG8gd29_77-9ZA=='\n * ```\n *\n * @param value - The hex value to encode.\n * @param options - Encoding options.\n * @returns The Base64 encoded string.\n */\nexport function fromHex(value: Hex.Hex, options: fromHex.Options = {}) {\n  return fromBytes(Bytes.fromHex(value), options)\n}\n\nexport declare namespace fromHex {\n  type Options = {\n    /**\n     * Whether to [pad](https://datatracker.ietf.org/doc/html/rfc4648#section-3.2) the Base64 encoded string.\n     *\n     * @default true\n     */\n    pad?: boolean | undefined\n    /**\n     * Whether to Base64 encode with [URL safe characters](https://datatracker.ietf.org/doc/html/rfc4648#section-5).\n     *\n     * @default false\n     */\n    url?: boolean | undefined\n  }\n\n  type ErrorType = fromBytes.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Encodes a string to a Base64-encoded string (with optional padding and/or URL-safe characters).\n *\n * @example\n * ```ts twoslash\n * import { Base64 } from 'ox'\n *\n * const value = Base64.fromString('hello world')\n * // @log: 'aGVsbG8gd29ybGQ='\n * ```\n *\n * @example\n * ### No Padding\n *\n * Turn off [padding of encoded data](https://datatracker.ietf.org/doc/html/rfc4648#section-3.2) with the `pad` option:\n *\n * ```ts twoslash\n * import { Base64 } from 'ox'\n *\n * const value = Base64.fromString('hello world', { pad: false })\n * // @log: 'aGVsbG8gd29ybGQ'\n * ```\n *\n * ### URL-safe Encoding\n *\n * Turn on [URL-safe encoding](https://datatracker.ietf.org/doc/html/rfc4648#section-5) (Base64 URL) with the `url` option:\n *\n * ```ts twoslash\n * import { Base64 } from 'ox'\n *\n * const value = Base64.fromString('hello wod', { url: true })\n * // @log: 'aGVsbG8gd29_77-9ZA=='\n * ```\n *\n * @param value - The string to encode.\n * @param options - Encoding options.\n * @returns The Base64 encoded string.\n */\nexport function fromString(value: string, options: fromString.Options = {}) {\n  return fromBytes(Bytes.fromString(value), options)\n}\n\nexport declare namespace fromString {\n  type Options = {\n    /**\n     * Whether to [pad](https://datatracker.ietf.org/doc/html/rfc4648#section-3.2) the Base64 encoded string.\n     *\n     * @default true\n     */\n    pad?: boolean | undefined\n    /**\n     * Whether to Base64 encode with [URL safe characters](https://datatracker.ietf.org/doc/html/rfc4648#section-5).\n     *\n     * @default false\n     */\n    url?: boolean | undefined\n  }\n\n  type ErrorType = fromBytes.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a Base64-encoded string (with optional padding and/or URL-safe characters) to {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Base64, Bytes } from 'ox'\n *\n * const value = Base64.toBytes('aGVsbG8gd29ybGQ=')\n * // @log: Uint8Array([104, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100])\n * ```\n *\n * @param value - The string, hex value, or byte array to encode.\n * @returns The Base64 decoded {@link ox#Bytes.Bytes}.\n */\nexport function toBytes(value: string): Bytes.Bytes {\n  const base64 = value.replace(/=+$/, '')\n\n  const size = base64.length\n\n  const decoded = new Uint8Array(size + 3)\n  encoder.encodeInto(base64 + '===', decoded)\n\n  for (let i = 0, j = 0; i < base64.length; i += 4, j += 3) {\n    const x =\n      (characterToInteger[decoded[i]!]! << 18) +\n      (characterToInteger[decoded[i + 1]!]! << 12) +\n      (characterToInteger[decoded[i + 2]!]! << 6) +\n      characterToInteger[decoded[i + 3]!]!\n    decoded[j] = x >> 16\n    decoded[j + 1] = (x >> 8) & 0xff\n    decoded[j + 2] = x & 0xff\n  }\n\n  const decodedSize = (size >> 2) * 3 + (size % 4 && (size % 4) - 1)\n  return new Uint8Array(decoded.buffer, 0, decodedSize)\n}\n\nexport declare namespace toBytes {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Decodes a Base64-encoded string (with optional padding and/or URL-safe characters) to {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Base64, Hex } from 'ox'\n *\n * const value = Base64.toHex('aGVsbG8gd29ybGQ=')\n * // @log: 0x68656c6c6f20776f726c64\n * ```\n *\n * @param value - The string, hex value, or byte array to encode.\n * @returns The Base64 decoded {@link ox#Hex.Hex}.\n */\nexport function toHex(value: string): Hex.Hex {\n  return Hex.fromBytes(toBytes(value))\n}\n\nexport declare namespace toHex {\n  type ErrorType = toBytes.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Decodes a Base64-encoded string (with optional padding and/or URL-safe characters) to a string.\n *\n * @example\n * ```ts twoslash\n * import { Base64 } from 'ox'\n *\n * const value = Base64.toString('aGVsbG8gd29ybGQ=')\n * // @log: 'hello world'\n * ```\n *\n * @param value - The string, hex value, or byte array to encode.\n * @returns The Base64 decoded string.\n */\nexport function toString(value: string): string {\n  return Bytes.toString(toBytes(value))\n}\n\nexport declare namespace toString {\n  type ErrorType = toBytes.ErrorType | Errors.GlobalErrorType\n}\n","/**\n * SHA2-256 a.k.a. sha256. In JS, it is the fastest hash, even faster than Blake3.\n *\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n *\n * Check out [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n * @deprecated\n */\nimport {\n  SHA224 as SHA224n,\n  sha224 as sha224n,\n  SHA256 as SHA256n,\n  sha256 as sha256n,\n} from './sha2.ts';\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA256: typeof SHA256n = SHA256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha256: typeof sha256n = sha256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA224: typeof SHA224n = SHA224n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha224: typeof sha224n = sha224n;\n","import { ripemd160 as noble_ripemd160 } from '@noble/hashes/ripemd160'\nimport { keccak_256 as noble_keccak256 } from '@noble/hashes/sha3'\nimport { sha256 as noble_sha256 } from '@noble/hashes/sha256'\nimport * as Bytes from './Bytes.js'\nimport type * as Errors from './Errors.js'\nimport * as Hex from './Hex.js'\n\n/**\n * Calculates the [Keccak256](https://en.wikipedia.org/wiki/SHA-3) hash of a {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n *\n * This function is a re-export of `keccak_256` from [`@noble/hashes`](https://github.com/paulmillr/noble-hashes), an audited & minimal JS hashing library.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.keccak256('0xdeadbeef')\n * // @log: '0xd4fd4e189132273036449fc9e11198c739161b4c0116a9a2dccdfa1c492006f1'\n * ```\n *\n * @example\n * ### Calculate Hash of a String\n *\n * ```ts twoslash\n * import { Hash, Hex } from 'ox'\n *\n * Hash.keccak256(Hex.fromString('hello world'))\n * // @log: '0x3ea2f1d0abf3fc66cf29eebb70cbd4e7fe762ef8a09bcc06c8edf641230afec0'\n * ```\n *\n * @example\n * ### Configure Return Type\n *\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.keccak256('0xdeadbeef', { as: 'Bytes' })\n * // @log: Uint8Array [...]\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n * @param options - Options.\n * @returns Keccak256 hash.\n */\nexport function keccak256<\n  value extends Hex.Hex | Bytes.Bytes,\n  as extends 'Hex' | 'Bytes' =\n    | (value extends Hex.Hex ? 'Hex' : never)\n    | (value extends Bytes.Bytes ? 'Bytes' : never),\n>(\n  value: value | Hex.Hex | Bytes.Bytes,\n  options: keccak256.Options<as> = {},\n): keccak256.ReturnType<as> {\n  const { as = typeof value === 'string' ? 'Hex' : 'Bytes' } = options\n  const bytes = noble_keccak256(Bytes.from(value))\n  if (as === 'Bytes') return bytes as never\n  return Hex.fromBytes(bytes) as never\n}\n\nexport declare namespace keccak256 {\n  type Options<as extends 'Hex' | 'Bytes' = 'Hex' | 'Bytes'> = {\n    /** The return type. @default 'Hex' */\n    as?: as | 'Hex' | 'Bytes' | undefined\n  }\n\n  type ReturnType<as extends 'Hex' | 'Bytes' = 'Hex' | 'Bytes'> =\n    | (as extends 'Bytes' ? Bytes.Bytes : never)\n    | (as extends 'Hex' ? Hex.Hex : never)\n\n  type ErrorType =\n    | Bytes.from.ErrorType\n    | Hex.fromBytes.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Calculates the [Ripemd160](https://en.wikipedia.org/wiki/RIPEMD) hash of a {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n *\n * This function is a re-export of `ripemd160` from [`@noble/hashes`](https://github.com/paulmillr/noble-hashes), an audited & minimal JS hashing library.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.ripemd160('0xdeadbeef')\n * // '0x226821c2f5423e11fe9af68bd285c249db2e4b5a'\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n * @param options - Options.\n * @returns Ripemd160 hash.\n */\nexport function ripemd160<\n  value extends Hex.Hex | Bytes.Bytes,\n  as extends 'Hex' | 'Bytes' =\n    | (value extends Hex.Hex ? 'Hex' : never)\n    | (value extends Bytes.Bytes ? 'Bytes' : never),\n>(\n  value: value | Hex.Hex | Bytes.Bytes,\n  options: ripemd160.Options<as> = {},\n): ripemd160.ReturnType<as> {\n  const { as = typeof value === 'string' ? 'Hex' : 'Bytes' } = options\n  const bytes = noble_ripemd160(Bytes.from(value))\n  if (as === 'Bytes') return bytes as never\n  return Hex.fromBytes(bytes) as never\n}\n\nexport declare namespace ripemd160 {\n  type Options<as extends 'Hex' | 'Bytes' = 'Hex' | 'Bytes'> = {\n    /** The return type. @default 'Hex' */\n    as?: as | 'Hex' | 'Bytes' | undefined\n  }\n\n  type ReturnType<as extends 'Hex' | 'Bytes' = 'Hex' | 'Bytes'> =\n    | (as extends 'Bytes' ? Bytes.Bytes : never)\n    | (as extends 'Hex' ? Hex.Hex : never)\n\n  type ErrorType =\n    | Bytes.from.ErrorType\n    | Hex.fromBytes.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Calculates the [Sha256](https://en.wikipedia.org/wiki/SHA-256) hash of a {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n *\n * This function is a re-export of `sha256` from [`@noble/hashes`](https://github.com/paulmillr/noble-hashes), an audited & minimal JS hashing library.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.sha256('0xdeadbeef')\n * // '0x5f78c33274e43fa9de5659265c1d917e25c03722dcb0b8d27db8d5feaa813953'\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n * @param options - Options.\n * @returns Sha256 hash.\n */\nexport function sha256<\n  value extends Hex.Hex | Bytes.Bytes,\n  as extends 'Hex' | 'Bytes' =\n    | (value extends Hex.Hex ? 'Hex' : never)\n    | (value extends Bytes.Bytes ? 'Bytes' : never),\n>(\n  value: value | Hex.Hex | Bytes.Bytes,\n  options: sha256.Options<as> = {},\n): sha256.ReturnType<as> {\n  const { as = typeof value === 'string' ? 'Hex' : 'Bytes' } = options\n  const bytes = noble_sha256(Bytes.from(value))\n  if (as === 'Bytes') return bytes as never\n  return Hex.fromBytes(bytes) as never\n}\n\nexport declare namespace sha256 {\n  type Options<as extends 'Hex' | 'Bytes' = 'Hex'> = {\n    /** The return type. @default 'Hex' */\n    as?: as | 'Hex' | 'Bytes' | undefined\n  }\n\n  type ReturnType<as extends 'Hex' | 'Bytes' = 'Hex'> =\n    | (as extends 'Bytes' ? Bytes.Bytes : never)\n    | (as extends 'Hex' ? Hex.Hex : never)\n\n  type ErrorType =\n    | Bytes.from.ErrorType\n    | Hex.fromBytes.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Checks if a string is a valid hash value.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.validate('0x')\n * // @log: false\n *\n * Hash.validate('0x3ea2f1d0abf3fc66cf29eebb70cbd4e7fe762ef8a09bcc06c8edf641230afec0')\n * // @log: true\n * ```\n *\n * @param value - Value to check.\n * @returns Whether the value is a valid hash.\n */\nexport function validate(value: string): value is Hex.Hex {\n  return Hex.validate(value) && Hex.size(value) === 32\n}\n\nexport declare namespace validate {\n  type ErrorType =\n    | Hex.validate.ErrorType\n    | Hex.size.ErrorType\n    | Errors.GlobalErrorType\n}\n","import * as Base64 from './Base64.js'\nimport * as Bytes from './Bytes.js'\nimport * as Errors from './Errors.js'\nimport * as Hash from './Hash.js'\nimport * as Hex from './Hex.js'\nimport * as P256 from './P256.js'\nimport type * as PublicKey from './PublicKey.js'\nimport type * as Signature from './Signature.js'\nimport type { Compute, OneOf } from './internal/types.js'\nimport * as internal from './internal/webauthn.js'\n\n/** A WebAuthn-flavored P256 credential. */\nexport type P256Credential = {\n  id: string\n  publicKey: PublicKey.PublicKey\n  raw: internal.PublicKeyCredential\n}\n\n/** Metadata for a WebAuthn P256 signature. */\nexport type SignMetadata = Compute<{\n  authenticatorData: Hex.Hex\n  challengeIndex: number\n  clientDataJSON: string\n  typeIndex: number\n  userVerificationRequired: boolean\n}>\n\nexport const createChallenge = Uint8Array.from([\n  105, 171, 180, 181, 160, 222, 75, 198, 42, 42, 32, 31, 141, 37, 186, 233,\n])\n\n/**\n * Creates a new WebAuthn P256 Credential, which can be stored and later used for signing.\n *\n * @example\n * ```ts twoslash\n * import { WebAuthnP256 } from 'ox'\n *\n * const credential = await WebAuthnP256.createCredential({ name: 'Example' }) // [!code focus]\n * // @log: {\n * // @log:   id: 'oZ48...',\n * // @log:   publicKey: { x: 51421...5123n, y: 12345...6789n },\n * // @log:   raw: PublicKeyCredential {},\n * // @log: }\n *\n * const { metadata, signature } = await WebAuthnP256.sign({\n *   credentialId: credential.id,\n *   challenge: '0xdeadbeef',\n * })\n * ```\n *\n * @param options - Credential creation options.\n * @returns A WebAuthn P256 credential.\n */\nexport async function createCredential(\n  options: createCredential.Options,\n): Promise<P256Credential> {\n  const {\n    createFn = window.navigator.credentials.create.bind(\n      window.navigator.credentials,\n    ),\n    ...rest\n  } = options\n  const creationOptions = getCredentialCreationOptions(rest)\n  try {\n    const credential = (await createFn(\n      creationOptions,\n    )) as internal.PublicKeyCredential\n    if (!credential) throw new CredentialCreationFailedError()\n\n    const response = credential.response as AuthenticatorAttestationResponse\n    const publicKey = await internal.parseCredentialPublicKey(response)\n\n    return {\n      id: credential.id,\n      publicKey,\n      raw: credential,\n    }\n  } catch (error) {\n    throw new CredentialCreationFailedError({\n      cause: error as Error,\n    })\n  }\n}\n\nexport declare namespace createCredential {\n  type Options = getCredentialCreationOptions.Options & {\n    /**\n     * Credential creation function. Useful for environments that do not support\n     * the WebAuthn API natively (i.e. React Native or testing environments).\n     *\n     * @default window.navigator.credentials.create\n     */\n    createFn?:\n      | ((\n          options?: internal.CredentialCreationOptions | undefined,\n        ) => Promise<internal.Credential | null>)\n      | undefined\n  }\n\n  type ErrorType =\n    | getCredentialCreationOptions.ErrorType\n    | internal.parseCredentialPublicKey.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Gets the authenticator data which contains information about the\n * processing of an authenticator request (ie. from `WebAuthnP256.sign`).\n *\n * :::warning\n *\n * This function is mainly for testing purposes or for manually constructing\n * autenticator data. In most cases you will not need this function.\n * `authenticatorData` is typically returned as part of the\n * {@link ox#WebAuthnP256.(sign:function)} response (ie. an authenticator response).\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * import { WebAuthnP256 } from 'ox'\n *\n * const authenticatorData = WebAuthnP256.getAuthenticatorData({\n *   rpId: 'example.com',\n *   signCount: 420,\n * })\n * // @log: \"0xa379a6f6eeafb9a55e378c118034e2751e682fab9f2d30ab13d2125586ce194705000001a4\"\n * ```\n *\n * @param options - Options to construct the authenticator data.\n * @returns The authenticator data.\n */\nexport function getAuthenticatorData(\n  options: getAuthenticatorData.Options = {},\n): Hex.Hex {\n  const { flag = 5, rpId = window.location.hostname, signCount = 0 } = options\n  const rpIdHash = Hash.sha256(Hex.fromString(rpId))\n  const flag_bytes = Hex.fromNumber(flag, { size: 1 })\n  const signCount_bytes = Hex.fromNumber(signCount, { size: 4 })\n  return Hex.concat(rpIdHash, flag_bytes, signCount_bytes)\n}\n\nexport declare namespace getAuthenticatorData {\n  type Options = {\n    /** A bitfield that indicates various attributes that were asserted by the authenticator. [Read more](https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Authenticator_data#flags) */\n    flag?: number | undefined\n    /** The [Relying Party ID](https://w3c.github.io/webauthn/#relying-party-identifier) that the credential is scoped to. */\n    rpId?: internal.PublicKeyCredentialRequestOptions['rpId'] | undefined\n    /** A signature counter, if supported by the authenticator (set to 0 otherwise). */\n    signCount?: number | undefined\n  }\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Constructs the Client Data in stringified JSON format which represents client data that\n * was passed to `credentials.get()` in {@link ox#WebAuthnP256.(sign:function)}.\n *\n * :::warning\n *\n * This function is mainly for testing purposes or for manually constructing\n * client data. In most cases you will not need this function.\n * `clientDataJSON` is typically returned as part of the\n * {@link ox#WebAuthnP256.(sign:function)} response (ie. an authenticator response).\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * import { WebAuthnP256 } from 'ox'\n *\n * const clientDataJSON = WebAuthnP256.getClientDataJSON({\n *   challenge: '0xdeadbeef',\n *   origin: 'https://example.com',\n * })\n * // @log: \"{\"type\":\"webauthn.get\",\"challenge\":\"3q2-7w\",\"origin\":\"https://example.com\",\"crossOrigin\":false}\"\n * ```\n *\n * @param options - Options to construct the client data.\n * @returns The client data.\n */\nexport function getClientDataJSON(options: getClientDataJSON.Options): string {\n  const {\n    challenge,\n    crossOrigin = false,\n    extraClientData,\n    origin = window.location.origin,\n  } = options\n\n  return JSON.stringify({\n    type: 'webauthn.get',\n    challenge: Base64.fromHex(challenge, { url: true, pad: false }),\n    origin,\n    crossOrigin,\n    ...extraClientData,\n  })\n}\n\nexport declare namespace getClientDataJSON {\n  type Options = {\n    /** The challenge to sign. */\n    challenge: Hex.Hex\n    /** If set to `true`, it means that the calling context is an `<iframe>` that is not same origin with its ancestor frames. */\n    crossOrigin?: boolean | undefined\n    /** Additional client data to include in the client data JSON. */\n    extraClientData?: Record<string, unknown> | undefined\n    /** The fully qualified origin of the relying party which has been given by the client/browser to the authenticator. */\n    origin?: string | undefined\n  }\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Returns the creation options for a P256 WebAuthn Credential to be used with\n * the Web Authentication API.\n *\n * @example\n * ```ts twoslash\n * import { WebAuthnP256 } from 'ox'\n *\n * const options = WebAuthnP256.getCredentialCreationOptions({ name: 'Example' })\n *\n * const credential = await window.navigator.credentials.create(options)\n * ```\n *\n * @param options - Options.\n * @returns The credential creation options.\n */\nexport function getCredentialCreationOptions(\n  options: getCredentialCreationOptions.Options,\n): internal.CredentialCreationOptions {\n  const {\n    attestation = 'none',\n    authenticatorSelection = {\n      residentKey: 'preferred',\n      requireResidentKey: false,\n      userVerification: 'required',\n    },\n    challenge = createChallenge,\n    excludeCredentialIds,\n    name: name_,\n    rp = {\n      id: window.location.hostname,\n      name: window.document.title,\n    },\n    user,\n    extensions,\n  } = options\n  const name = (user?.name ?? name_)!\n  return {\n    publicKey: {\n      attestation,\n      authenticatorSelection,\n      challenge,\n      ...(excludeCredentialIds\n        ? {\n            excludeCredentials: excludeCredentialIds?.map((id) => ({\n              id: Base64.toBytes(id),\n              type: 'public-key',\n            })),\n          }\n        : {}),\n      pubKeyCredParams: [\n        {\n          type: 'public-key',\n          alg: -7, // p256\n        },\n      ],\n      rp,\n      user: {\n        id: user?.id ?? Hash.keccak256(Bytes.fromString(name), { as: 'Bytes' }),\n        name,\n        displayName: user?.displayName ?? name,\n      },\n      extensions,\n    },\n  } as internal.CredentialCreationOptions\n}\n\nexport declare namespace getCredentialCreationOptions {\n  type Options = {\n    /**\n     * A string specifying the relying party's preference for how the attestation statement\n     * (i.e., provision of verifiable evidence of the authenticity of the authenticator and its data)\n     * is conveyed during credential creation.\n     */\n    attestation?:\n      | internal.PublicKeyCredentialCreationOptions['attestation']\n      | undefined\n    /**\n     * An object whose properties are criteria used to filter out the potential authenticators\n     * for the credential creation operation.\n     */\n    authenticatorSelection?:\n      | internal.PublicKeyCredentialCreationOptions['authenticatorSelection']\n      | undefined\n    /**\n     * An `ArrayBuffer`, `TypedArray`, or `DataView` used as a cryptographic challenge.\n     */\n    challenge?:\n      | internal.PublicKeyCredentialCreationOptions['challenge']\n      | undefined\n    /**\n     * List of credential IDs to exclude from the creation. This property can be used\n     * to prevent creation of a credential if it already exists.\n     */\n    excludeCredentialIds?: readonly string[] | undefined\n    /**\n     * List of Web Authentication API credentials to use during creation or authentication.\n     */\n    extensions?:\n      | internal.PublicKeyCredentialCreationOptions['extensions']\n      | undefined\n    /**\n     * An object describing the relying party that requested the credential creation\n     */\n    rp?:\n      | {\n          id: string\n          name: string\n        }\n      | undefined\n    /**\n     * A numerical hint, in milliseconds, which indicates the time the calling web app is willing to wait for the creation operation to complete.\n     */\n    timeout?: internal.PublicKeyCredentialCreationOptions['timeout'] | undefined\n  } & OneOf<\n    | {\n        /** Name for the credential (user.name). */\n        name: string\n      }\n    | {\n        /**\n         * An object describing the user account for which the credential is generated.\n         */\n        user: {\n          displayName?: string\n          id?: BufferSource\n          name: string\n        }\n      }\n  >\n\n  type ErrorType =\n    | Base64.toBytes.ErrorType\n    | Hash.keccak256.ErrorType\n    | Bytes.fromString.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Returns the request options to sign a challenge with the Web Authentication API.\n *\n * @example\n * ```ts twoslash\n * import { WebAuthnP256 } from 'ox'\n *\n * const options = WebAuthnP256.getCredentialRequestOptions({\n *   challenge: '0xdeadbeef',\n * })\n *\n * const credential = await window.navigator.credentials.get(options)\n * ```\n *\n * @param options - Options.\n * @returns The credential request options.\n */\nexport function getCredentialRequestOptions(\n  options: getCredentialRequestOptions.Options,\n): internal.CredentialRequestOptions {\n  const {\n    credentialId,\n    challenge,\n    rpId = window.location.hostname,\n    userVerification = 'required',\n  } = options\n  return {\n    publicKey: {\n      ...(credentialId\n        ? {\n            allowCredentials: [\n              {\n                id: Base64.toBytes(credentialId),\n                type: 'public-key',\n              },\n            ],\n          }\n        : {}),\n      challenge: Bytes.fromHex(challenge),\n      rpId,\n      userVerification,\n    },\n  }\n}\n\nexport declare namespace getCredentialRequestOptions {\n  type Options = {\n    /** The credential ID to use. */\n    credentialId?: string | undefined\n    /** The challenge to sign. */\n    challenge: Hex.Hex\n    /** The relying party identifier to use. */\n    rpId?: internal.PublicKeyCredentialRequestOptions['rpId'] | undefined\n    /** The user verification requirement. */\n    userVerification?:\n      | internal.PublicKeyCredentialRequestOptions['userVerification']\n      | undefined\n  }\n\n  type ErrorType =\n    | Bytes.fromHex.ErrorType\n    | Base64.toBytes.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Constructs the final digest that was signed and computed by the authenticator. This payload includes\n * the cryptographic `challenge`, as well as authenticator metadata (`authenticatorData` + `clientDataJSON`).\n * This value can be also used with raw P256 verification (such as {@link ox#P256.(verify:function)} or\n * {@link ox#WebCryptoP256.(verify:function)}).\n *\n * :::warning\n *\n * This function is mainly for testing purposes or for manually constructing\n * signing payloads. In most cases you will not need this function and\n * instead use {@link ox#WebAuthnP256.(sign:function)}.\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * import { WebAuthnP256, WebCryptoP256 } from 'ox'\n *\n * const { metadata, payload } = WebAuthnP256.getSignPayload({ // [!code focus]\n *   challenge: '0xdeadbeef', // [!code focus]\n * }) // [!code focus]\n * // @log: {\n * // @log:   metadata: {\n * // @log:     authenticatorData: \"0x49960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d97630500000000\",\n * // @log:     challengeIndex: 23,\n * // @log:     clientDataJSON: \"{\"type\":\"webauthn.get\",\"challenge\":\"9jEFijuhEWrM4SOW-tChJbUEHEP44VcjcJ-Bqo1fTM8\",\"origin\":\"http://localhost:5173\",\"crossOrigin\":false}\",\n * // @log:     typeIndex: 1,\n * // @log:     userVerificationRequired: true,\n * // @log:   },\n * // @log:   payload: \"0x49960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d9763050000000045086dcb06a5f234db625bcdc94e657f86b76b6fd3eb9c30543eabc1e577a4b0\",\n * // @log: }\n *\n * const { publicKey, privateKey } = await WebCryptoP256.createKeyPair()\n *\n * const signature = await WebCryptoP256.sign({\n *   payload,\n *   privateKey,\n * })\n * ```\n *\n * @param options - Options to construct the signing payload.\n * @returns The signing payload.\n */\nexport function getSignPayload(\n  options: getSignPayload.Options,\n): getSignPayload.ReturnType {\n  const {\n    challenge,\n    crossOrigin,\n    extraClientData,\n    flag,\n    origin,\n    rpId,\n    signCount,\n    userVerification = 'required',\n  } = options\n\n  const authenticatorData = getAuthenticatorData({\n    flag,\n    rpId,\n    signCount,\n  })\n  const clientDataJSON = getClientDataJSON({\n    challenge,\n    crossOrigin,\n    extraClientData,\n    origin,\n  })\n  const clientDataJSONHash = Hash.sha256(Hex.fromString(clientDataJSON))\n\n  const challengeIndex = clientDataJSON.indexOf('\"challenge\"')\n  const typeIndex = clientDataJSON.indexOf('\"type\"')\n\n  const metadata = {\n    authenticatorData,\n    clientDataJSON,\n    challengeIndex,\n    typeIndex,\n    userVerificationRequired: userVerification === 'required',\n  }\n\n  const payload = Hex.concat(authenticatorData, clientDataJSONHash)\n\n  return { metadata, payload }\n}\n\nexport declare namespace getSignPayload {\n  type Options = {\n    /** The challenge to sign. */\n    challenge: Hex.Hex\n    /** If set to `true`, it means that the calling context is an `<iframe>` that is not same origin with its ancestor frames. */\n    crossOrigin?: boolean | undefined\n    /** Additional client data to include in the client data JSON. */\n    extraClientData?: Record<string, unknown> | undefined\n    /** If set to `true`, the payload will be hashed before being returned. */\n    hash?: boolean | undefined\n    /** A bitfield that indicates various attributes that were asserted by the authenticator. [Read more](https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Authenticator_data#flags) */\n    flag?: number | undefined\n    /** The fully qualified origin of the relying party which has been given by the client/browser to the authenticator. */\n    origin?: string | undefined\n    /** The [Relying Party ID](https://w3c.github.io/webauthn/#relying-party-identifier) that the credential is scoped to. */\n    rpId?: internal.PublicKeyCredentialRequestOptions['rpId'] | undefined\n    /** A signature counter, if supported by the authenticator (set to 0 otherwise). */\n    signCount?: number | undefined\n    /** The user verification requirement that the authenticator will enforce. */\n    userVerification?:\n      | internal.PublicKeyCredentialRequestOptions['userVerification']\n      | undefined\n  }\n\n  type ReturnType = {\n    metadata: SignMetadata\n    payload: Hex.Hex\n  }\n\n  type ErrorType =\n    | Hash.sha256.ErrorType\n    | Hex.concat.ErrorType\n    | Hex.fromString.ErrorType\n    | getAuthenticatorData.ErrorType\n    | getClientDataJSON.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Signs a challenge using a stored WebAuthn P256 Credential. If no Credential is provided,\n * a prompt will be displayed for the user to select an existing Credential\n * that was previously registered.\n *\n * @example\n * ```ts twoslash\n * import { WebAuthnP256 } from 'ox'\n *\n * const credential = await WebAuthnP256.createCredential({\n *   name: 'Example',\n * })\n *\n * const { metadata, signature } = await WebAuthnP256.sign({ // [!code focus]\n *   credentialId: credential.id, // [!code focus]\n *   challenge: '0xdeadbeef', // [!code focus]\n * }) // [!code focus]\n * // @log: {\n * // @log:   metadata: {\n * // @log:     authenticatorData: '0x49960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d97630500000000',\n * // @log:     clientDataJSON: '{\"type\":\"webauthn.get\",\"challenge\":\"9jEFijuhEWrM4SOW-tChJbUEHEP44VcjcJ-Bqo1fTM8\",\"origin\":\"http://localhost:5173\",\"crossOrigin\":false}',\n * // @log:     challengeIndex: 23,\n * // @log:     typeIndex: 1,\n * // @log:     userVerificationRequired: true,\n * // @log:   },\n * // @log:   signature: { r: 51231...4215n, s: 12345...6789n },\n * // @log: }\n * ```\n *\n * @param options - Options.\n * @returns The signature.\n */\nexport async function sign(options: sign.Options): Promise<sign.ReturnType> {\n  const {\n    getFn = window.navigator.credentials.get.bind(window.navigator.credentials),\n    ...rest\n  } = options\n  const requestOptions = getCredentialRequestOptions(rest)\n  try {\n    const credential = (await getFn(\n      requestOptions,\n    )) as internal.PublicKeyCredential\n    if (!credential) throw new CredentialRequestFailedError()\n    const response = credential.response as AuthenticatorAssertionResponse\n\n    const clientDataJSON = String.fromCharCode(\n      ...new Uint8Array(response.clientDataJSON),\n    )\n    const challengeIndex = clientDataJSON.indexOf('\"challenge\"')\n    const typeIndex = clientDataJSON.indexOf('\"type\"')\n\n    const signature = internal.parseAsn1Signature(\n      new Uint8Array(response.signature),\n    )\n\n    return {\n      metadata: {\n        authenticatorData: Hex.fromBytes(\n          new Uint8Array(response.authenticatorData),\n        ),\n        clientDataJSON,\n        challengeIndex,\n        typeIndex,\n        userVerificationRequired:\n          requestOptions.publicKey!.userVerification === 'required',\n      },\n      signature,\n      raw: credential,\n    }\n  } catch (error) {\n    throw new CredentialRequestFailedError({\n      cause: error as Error,\n    })\n  }\n}\n\nexport declare namespace sign {\n  type Options = getCredentialRequestOptions.Options & {\n    /**\n     * Credential request function. Useful for environments that do not support\n     * the WebAuthn API natively (i.e. React Native or testing environments).\n     *\n     * @default window.navigator.credentials.get\n     */\n    getFn?:\n      | ((\n          options?: internal.CredentialRequestOptions | undefined,\n        ) => Promise<internal.Credential | null>)\n      | undefined\n  }\n\n  type ReturnType = {\n    metadata: SignMetadata\n    raw: internal.PublicKeyCredential\n    signature: Signature.Signature<false>\n  }\n\n  type ErrorType =\n    | Hex.fromBytes.ErrorType\n    | getCredentialRequestOptions.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Verifies a signature using the Credential's public key and the challenge which was signed.\n *\n * @example\n * ```ts twoslash\n * import { WebAuthnP256 } from 'ox'\n *\n * const credential = await WebAuthnP256.createCredential({\n *   name: 'Example',\n * })\n *\n * const { metadata, signature } = await WebAuthnP256.sign({\n *   credentialId: credential.id,\n *   challenge: '0xdeadbeef',\n * })\n *\n * const result = await WebAuthnP256.verify({ // [!code focus]\n *   metadata, // [!code focus]\n *   challenge: '0xdeadbeef', // [!code focus]\n *   publicKey: credential.publicKey, // [!code focus]\n *   signature, // [!code focus]\n * }) // [!code focus]\n * // @log: true\n * ```\n *\n * @param options - Options.\n * @returns Whether the signature is valid.\n */\nexport function verify(options: verify.Options): boolean {\n  const { challenge, hash = true, metadata, publicKey, signature } = options\n  const {\n    authenticatorData,\n    challengeIndex,\n    clientDataJSON,\n    typeIndex,\n    userVerificationRequired,\n  } = metadata\n\n  const authenticatorDataBytes = Bytes.fromHex(authenticatorData)\n\n  // Check length of `authenticatorData`.\n  if (authenticatorDataBytes.length < 37) return false\n\n  const flag = authenticatorDataBytes[32]!\n\n  // Verify that the UP bit of the flags in authData is set.\n  if ((flag & 0x01) !== 0x01) return false\n\n  // If user verification was determined to be required, verify that\n  // the UV bit of the flags in authData is set. Otherwise, ignore the\n  // value of the UV flag.\n  if (userVerificationRequired && (flag & 0x04) !== 0x04) return false\n\n  // If the BE bit of the flags in authData is not set, verify that\n  // the BS bit is not set.\n  if ((flag & 0x08) !== 0x08 && (flag & 0x10) === 0x10) return false\n\n  // Check that response is for an authentication assertion\n  const type = '\"type\":\"webauthn.get\"'\n  if (type !== clientDataJSON.slice(Number(typeIndex), type.length + 1))\n    return false\n\n  // Check that hash is in the clientDataJSON.\n  const match = clientDataJSON\n    .slice(Number(challengeIndex))\n    .match(/^\"challenge\":\"(.*?)\"/)\n  if (!match) return false\n\n  // Validate the challenge in the clientDataJSON.\n  const [_, challenge_extracted] = match\n  if (Hex.fromBytes(Base64.toBytes(challenge_extracted!)) !== challenge)\n    return false\n\n  const clientDataJSONHash = Hash.sha256(Bytes.fromString(clientDataJSON), {\n    as: 'Bytes',\n  })\n  const payload = Bytes.concat(authenticatorDataBytes, clientDataJSONHash)\n\n  return P256.verify({\n    hash,\n    payload,\n    publicKey,\n    signature,\n  })\n}\n\nexport declare namespace verify {\n  type Options = {\n    /** The challenge to verify. */\n    challenge: Hex.Hex\n    /** If set to `true`, the payload will be hashed (sha256) before being verified. */\n    hash?: boolean | undefined\n    /** The public key to verify the signature with. */\n    publicKey: PublicKey.PublicKey\n    /** The signature to verify. */\n    signature: Signature.Signature<false>\n    /** The metadata to verify the signature with. */\n    metadata: SignMetadata\n  }\n\n  type ErrorType =\n    | Base64.toBytes.ErrorType\n    | Bytes.concat.ErrorType\n    | Bytes.fromHex.ErrorType\n    | P256.verify.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/** Thrown when a WebAuthn P256 credential creation fails. */\nexport class CredentialCreationFailedError extends Errors.BaseError<Error> {\n  override readonly name = 'WebAuthnP256.CredentialCreationFailedError'\n\n  constructor({ cause }: { cause?: Error | undefined } = {}) {\n    super('Failed to create credential.', {\n      cause,\n    })\n  }\n}\n\n/** Thrown when a WebAuthn P256 credential request fails. */\nexport class CredentialRequestFailedError extends Errors.BaseError<Error> {\n  override readonly name = 'WebAuthnP256.CredentialRequestFailedError'\n\n  constructor({ cause }: { cause?: Error | undefined } = {}) {\n    super('Failed to request credential.', {\n      cause,\n    })\n  }\n}\n","export const arrayRegex = /^(.*)\\[([0-9]*)\\]$/\n\n// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n// https://regexr.com/6va55\nexport const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/\n\n// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n// https://regexr.com/6v8hp\nexport const integerRegex =\n  /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/\n\nexport const maxInt8 = 2n ** (8n - 1n) - 1n\nexport const maxInt16 = 2n ** (16n - 1n) - 1n\nexport const maxInt24 = 2n ** (24n - 1n) - 1n\nexport const maxInt32 = 2n ** (32n - 1n) - 1n\nexport const maxInt40 = 2n ** (40n - 1n) - 1n\nexport const maxInt48 = 2n ** (48n - 1n) - 1n\nexport const maxInt56 = 2n ** (56n - 1n) - 1n\nexport const maxInt64 = 2n ** (64n - 1n) - 1n\nexport const maxInt72 = 2n ** (72n - 1n) - 1n\nexport const maxInt80 = 2n ** (80n - 1n) - 1n\nexport const maxInt88 = 2n ** (88n - 1n) - 1n\nexport const maxInt96 = 2n ** (96n - 1n) - 1n\nexport const maxInt104 = 2n ** (104n - 1n) - 1n\nexport const maxInt112 = 2n ** (112n - 1n) - 1n\nexport const maxInt120 = 2n ** (120n - 1n) - 1n\nexport const maxInt128 = 2n ** (128n - 1n) - 1n\nexport const maxInt136 = 2n ** (136n - 1n) - 1n\nexport const maxInt144 = 2n ** (144n - 1n) - 1n\nexport const maxInt152 = 2n ** (152n - 1n) - 1n\nexport const maxInt160 = 2n ** (160n - 1n) - 1n\nexport const maxInt168 = 2n ** (168n - 1n) - 1n\nexport const maxInt176 = 2n ** (176n - 1n) - 1n\nexport const maxInt184 = 2n ** (184n - 1n) - 1n\nexport const maxInt192 = 2n ** (192n - 1n) - 1n\nexport const maxInt200 = 2n ** (200n - 1n) - 1n\nexport const maxInt208 = 2n ** (208n - 1n) - 1n\nexport const maxInt216 = 2n ** (216n - 1n) - 1n\nexport const maxInt224 = 2n ** (224n - 1n) - 1n\nexport const maxInt232 = 2n ** (232n - 1n) - 1n\nexport const maxInt240 = 2n ** (240n - 1n) - 1n\nexport const maxInt248 = 2n ** (248n - 1n) - 1n\nexport const maxInt256 = 2n ** (256n - 1n) - 1n\n\nexport const minInt8 = -(2n ** (8n - 1n))\nexport const minInt16 = -(2n ** (16n - 1n))\nexport const minInt24 = -(2n ** (24n - 1n))\nexport const minInt32 = -(2n ** (32n - 1n))\nexport const minInt40 = -(2n ** (40n - 1n))\nexport const minInt48 = -(2n ** (48n - 1n))\nexport const minInt56 = -(2n ** (56n - 1n))\nexport const minInt64 = -(2n ** (64n - 1n))\nexport const minInt72 = -(2n ** (72n - 1n))\nexport const minInt80 = -(2n ** (80n - 1n))\nexport const minInt88 = -(2n ** (88n - 1n))\nexport const minInt96 = -(2n ** (96n - 1n))\nexport const minInt104 = -(2n ** (104n - 1n))\nexport const minInt112 = -(2n ** (112n - 1n))\nexport const minInt120 = -(2n ** (120n - 1n))\nexport const minInt128 = -(2n ** (128n - 1n))\nexport const minInt136 = -(2n ** (136n - 1n))\nexport const minInt144 = -(2n ** (144n - 1n))\nexport const minInt152 = -(2n ** (152n - 1n))\nexport const minInt160 = -(2n ** (160n - 1n))\nexport const minInt168 = -(2n ** (168n - 1n))\nexport const minInt176 = -(2n ** (176n - 1n))\nexport const minInt184 = -(2n ** (184n - 1n))\nexport const minInt192 = -(2n ** (192n - 1n))\nexport const minInt200 = -(2n ** (200n - 1n))\nexport const minInt208 = -(2n ** (208n - 1n))\nexport const minInt216 = -(2n ** (216n - 1n))\nexport const minInt224 = -(2n ** (224n - 1n))\nexport const minInt232 = -(2n ** (232n - 1n))\nexport const minInt240 = -(2n ** (240n - 1n))\nexport const minInt248 = -(2n ** (248n - 1n))\nexport const minInt256 = -(2n ** (256n - 1n))\n\nexport const maxUint8 = 2n ** 8n - 1n\nexport const maxUint16 = 2n ** 16n - 1n\nexport const maxUint24 = 2n ** 24n - 1n\nexport const maxUint32 = 2n ** 32n - 1n\nexport const maxUint40 = 2n ** 40n - 1n\nexport const maxUint48 = 2n ** 48n - 1n\nexport const maxUint56 = 2n ** 56n - 1n\nexport const maxUint64 = 2n ** 64n - 1n\nexport const maxUint72 = 2n ** 72n - 1n\nexport const maxUint80 = 2n ** 80n - 1n\nexport const maxUint88 = 2n ** 88n - 1n\nexport const maxUint96 = 2n ** 96n - 1n\nexport const maxUint104 = 2n ** 104n - 1n\nexport const maxUint112 = 2n ** 112n - 1n\nexport const maxUint120 = 2n ** 120n - 1n\nexport const maxUint128 = 2n ** 128n - 1n\nexport const maxUint136 = 2n ** 136n - 1n\nexport const maxUint144 = 2n ** 144n - 1n\nexport const maxUint152 = 2n ** 152n - 1n\nexport const maxUint160 = 2n ** 160n - 1n\nexport const maxUint168 = 2n ** 168n - 1n\nexport const maxUint176 = 2n ** 176n - 1n\nexport const maxUint184 = 2n ** 184n - 1n\nexport const maxUint192 = 2n ** 192n - 1n\nexport const maxUint200 = 2n ** 200n - 1n\nexport const maxUint208 = 2n ** 208n - 1n\nexport const maxUint216 = 2n ** 216n - 1n\nexport const maxUint224 = 2n ** 224n - 1n\nexport const maxUint232 = 2n ** 232n - 1n\nexport const maxUint240 = 2n ** 240n - 1n\nexport const maxUint248 = 2n ** 248n - 1n\nexport const maxUint256 = 2n ** 256n - 1n\n","import { secp256k1 } from '@noble/curves/secp256k1'\nimport * as Bytes from './Bytes.js'\nimport * as Errors from './Errors.js'\nimport * as Hex from './Hex.js'\nimport * as Json from './Json.js'\nimport * as Solidity from './Solidity.js'\nimport type { Compute, ExactPartial, OneOf } from './internal/types.js'\n\n/** Root type for an ECDSA signature. */\nexport type Signature<\n  recovered extends boolean = true,\n  bigintType = bigint,\n  numberType = number,\n> = Compute<\n  recovered extends true\n    ? {\n        r: bigintType\n        s: bigintType\n        yParity: numberType\n      }\n    : {\n        r: bigintType\n        s: bigintType\n        yParity?: numberType | undefined\n      }\n>\n\n/** RPC-formatted ECDSA signature. */\nexport type Rpc<recovered extends boolean = true> = Signature<\n  recovered,\n  Hex.Hex,\n  Hex.Hex\n>\n\n/** (Legacy) ECDSA signature. */\nexport type Legacy<bigintType = bigint, numberType = number> = {\n  r: bigintType\n  s: bigintType\n  v: numberType\n}\n\n/** RPC-formatted (Legacy) ECDSA signature. */\nexport type LegacyRpc = Legacy<Hex.Hex, Hex.Hex>\n\nexport type Tuple = readonly [yParity: Hex.Hex, r: Hex.Hex, s: Hex.Hex]\n\n/**\n * Asserts that a Signature is valid.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * Signature.assert({\n *   r: -49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1,\n * })\n * // @error: InvalidSignatureRError:\n * // @error: Value `-549...n` is an invalid r value.\n * // @error: r must be a positive integer less than 2^256.\n * ```\n *\n * @param signature - The signature object to assert.\n */\nexport function assert(\n  signature: ExactPartial<Signature>,\n  options: assert.Options = {},\n): asserts signature is Signature {\n  const { recovered } = options\n  if (typeof signature.r === 'undefined')\n    throw new MissingPropertiesError({ signature })\n  if (typeof signature.s === 'undefined')\n    throw new MissingPropertiesError({ signature })\n  if (recovered && typeof signature.yParity === 'undefined')\n    throw new MissingPropertiesError({ signature })\n  if (signature.r < 0n || signature.r > Solidity.maxUint256)\n    throw new InvalidRError({ value: signature.r })\n  if (signature.s < 0n || signature.s > Solidity.maxUint256)\n    throw new InvalidSError({ value: signature.s })\n  if (\n    typeof signature.yParity === 'number' &&\n    signature.yParity !== 0 &&\n    signature.yParity !== 1\n  )\n    throw new InvalidYParityError({ value: signature.yParity })\n}\n\nexport declare namespace assert {\n  type Options = {\n    /** Whether or not the signature should be recovered (contain `yParity`). */\n    recovered?: boolean\n  }\n\n  type ErrorType =\n    | MissingPropertiesError\n    | InvalidRError\n    | InvalidSError\n    | InvalidYParityError\n    | Errors.GlobalErrorType\n}\n\n/**\n * Deserializes a {@link ox#Bytes.Bytes} signature into a structured {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Signature } from 'ox'\n *\n * Signature.fromBytes(new Uint8Array([128, 3, 131, ...]))\n * // @log: { r: 5231...n, s: 3522...n, yParity: 0 }\n * ```\n *\n * @param signature - The serialized signature.\n * @returns The deserialized {@link ox#Signature.Signature}.\n */\nexport function fromBytes(signature: Bytes.Bytes): Signature {\n  return fromHex(Hex.fromBytes(signature))\n}\n\nexport declare namespace fromBytes {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Deserializes a {@link ox#Hex.Hex} signature into a structured {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * Signature.fromHex('0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c')\n * // @log: { r: 5231...n, s: 3522...n, yParity: 0 }\n * ```\n *\n * @param serialized - The serialized signature.\n * @returns The deserialized {@link ox#Signature.Signature}.\n */\nexport function fromHex(signature: Hex.Hex): Signature {\n  if (signature.length !== 130 && signature.length !== 132)\n    throw new InvalidSerializedSizeError({ signature })\n\n  const r = BigInt(Hex.slice(signature, 0, 32))\n  const s = BigInt(Hex.slice(signature, 32, 64))\n\n  const yParity = (() => {\n    const yParity = Number(`0x${signature.slice(130)}`)\n    if (Number.isNaN(yParity)) return undefined\n    try {\n      return vToYParity(yParity)\n    } catch {\n      throw new InvalidYParityError({ value: yParity })\n    }\n  })()\n\n  if (typeof yParity === 'undefined')\n    return {\n      r,\n      s,\n    } as never\n  return {\n    r,\n    s,\n    yParity,\n  } as never\n}\n\nexport declare namespace fromHex {\n  type ErrorType =\n    | Hex.from.ErrorType\n    | InvalidSerializedSizeError\n    | Errors.GlobalErrorType\n}\n\n/**\n * Extracts a {@link ox#Signature.Signature} from an arbitrary object that may include signature properties.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Signature } from 'ox'\n *\n * Signature.extract({\n *   baz: 'barry',\n *   foo: 'bar',\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1,\n *   zebra: 'stripes',\n * })\n * // @log: {\n * // @log:   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * // @log:   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * // @log:   yParity: 1\n * // @log: }\n * ```\n *\n * @param value - The arbitrary object to extract the signature from.\n * @returns The extracted {@link ox#Signature.Signature}.\n */\nexport function extract(value: extract.Value): Signature | undefined {\n  if (typeof value.r === 'undefined') return undefined\n  if (typeof value.s === 'undefined') return undefined\n  return from(value as any)\n}\n\nexport declare namespace extract {\n  type Value = {\n    r?: bigint | Hex.Hex | undefined\n    s?: bigint | Hex.Hex | undefined\n    yParity?: number | Hex.Hex | undefined\n    v?: number | Hex.Hex | undefined\n  }\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Instantiates a typed {@link ox#Signature.Signature} object from a {@link ox#Signature.Signature}, {@link ox#Signature.Legacy}, {@link ox#Bytes.Bytes}, or {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * Signature.from({\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1,\n * })\n * // @log: {\n * // @log:   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * // @log:   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * // @log:   yParity: 1\n * // @log: }\n * ```\n *\n * @example\n * ### From Serialized\n *\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * Signature.from('0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db801')\n * // @log: {\n * // @log:   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * // @log:   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * // @log:   yParity: 1,\n * // @log: }\n * ```\n *\n * @example\n * ### From Legacy\n *\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * Signature.from({\n *   r: 47323457007453657207889730243826965761922296599680473886588287015755652701072n,\n *   s: 57228803202727131502949358313456071280488184270258293674242124340113824882788n,\n *   v: 27,\n * })\n * // @log: {\n * // @log:   r: 47323457007453657207889730243826965761922296599680473886588287015755652701072n,\n * // @log:   s: 57228803202727131502949358313456071280488184270258293674242124340113824882788n,\n * // @log:   yParity: 0\n * // @log: }\n * ```\n *\n * @param signature - The signature value to instantiate.\n * @returns The instantiated {@link ox#Signature.Signature}.\n */\nexport function from<\n  const signature extends\n    | OneOf<Signature<boolean> | Rpc<boolean> | Legacy | LegacyRpc>\n    | Hex.Hex\n    | Bytes.Bytes,\n>(\n  signature:\n    | signature\n    | OneOf<Signature<boolean> | Rpc<boolean> | Legacy | LegacyRpc>\n    | Hex.Hex\n    | Bytes.Bytes,\n): from.ReturnType<signature> {\n  const signature_ = (() => {\n    if (typeof signature === 'string') return fromHex(signature)\n    if (signature instanceof Uint8Array) return fromBytes(signature)\n    if (typeof signature.r === 'string') return fromRpc(signature)\n    if (signature.v) return fromLegacy(signature)\n    return {\n      r: signature.r,\n      s: signature.s,\n      ...(typeof signature.yParity !== 'undefined'\n        ? { yParity: signature.yParity }\n        : {}),\n    }\n  })()\n  assert(signature_)\n  return signature_ as never\n}\n\nexport declare namespace from {\n  type ReturnType<\n    signature extends\n      | OneOf<Signature<boolean> | Rpc<boolean> | Legacy | LegacyRpc>\n      | Hex.Hex\n      | Bytes.Bytes,\n  > = signature extends Signature<boolean> & { v?: undefined }\n    ? signature\n    : Signature\n\n  type ErrorType =\n    | assert.ErrorType\n    | fromBytes.ErrorType\n    | fromHex.ErrorType\n    | vToYParity.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Converts a DER-encoded signature to a {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Signature } from 'ox'\n *\n * const signature = Signature.fromDerBytes(new Uint8Array([132, 51, 23, ...]))\n * // @log: {\n * // @log:   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * // @log:   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * // @log: }\n * ```\n *\n * @param signature - The DER-encoded signature to convert.\n * @returns The {@link ox#Signature.Signature}.\n */\nexport function fromDerBytes(signature: Bytes.Bytes): Signature<false> {\n  return fromDerHex(Hex.fromBytes(signature))\n}\n\nexport declare namespace fromDerBytes {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Converts a DER-encoded signature to a {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.fromDerHex('0x304402206e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf02204a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db8')\n * // @log: {\n * // @log:   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * // @log:   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * // @log: }\n * ```\n *\n * @param signature - The DER-encoded signature to convert.\n * @returns The {@link ox#Signature.Signature}.\n */\nexport function fromDerHex(signature: Hex.Hex): Signature<false> {\n  const { r, s } = secp256k1.Signature.fromDER(Hex.from(signature).slice(2))\n  return { r, s }\n}\n\nexport declare namespace fromDerHex {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Converts a {@link ox#Signature.Legacy} into a {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const legacy = Signature.fromLegacy({ r: 1n, s: 2n, v: 28 })\n * // @log: { r: 1n, s: 2n, yParity: 1 }\n * ```\n *\n * @param signature - The {@link ox#Signature.Legacy} to convert.\n * @returns The converted {@link ox#Signature.Signature}.\n */\nexport function fromLegacy(signature: Legacy): Signature {\n  return {\n    r: signature.r,\n    s: signature.s,\n    yParity: vToYParity(signature.v),\n  }\n}\n\nexport declare namespace fromLegacy {\n  type ErrorType = vToYParity.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Converts a {@link ox#Signature.Rpc} into a {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.fromRpc({\n *   r: '0x635dc2033e60185bb36709c29c75d64ea51dfbd91c32ef4be198e4ceb169fb4d',\n *   s: '0x50c2667ac4c771072746acfdcf1f1483336dcca8bd2df47cd83175dbe60f0540',\n *   yParity: '0x0',\n * })\n * ```\n *\n * @param signature - The {@link ox#Signature.Rpc} to convert.\n * @returns The converted {@link ox#Signature.Signature}.\n */\nexport function fromRpc(signature: {\n  r: Hex.Hex\n  s: Hex.Hex\n  yParity?: Hex.Hex | undefined\n  v?: Hex.Hex | undefined\n}): Signature {\n  const yParity = (() => {\n    const v = signature.v ? Number(signature.v) : undefined\n    let yParity = signature.yParity ? Number(signature.yParity) : undefined\n    if (typeof v === 'number' && typeof yParity !== 'number')\n      yParity = vToYParity(v)\n    if (typeof yParity !== 'number')\n      throw new InvalidYParityError({ value: signature.yParity })\n    return yParity\n  })()\n\n  return {\n    r: BigInt(signature.r),\n    s: BigInt(signature.s),\n    yParity,\n  }\n}\n\nexport declare namespace fromRpc {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Converts a {@link ox#Signature.Tuple} to a {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.fromTuple(['0x01', '0x7b', '0x1c8'])\n * // @log: {\n * // @log:   r: 123n,\n * // @log:   s: 456n,\n * // @log:   yParity: 1,\n * // @log: }\n * ```\n *\n * @param tuple - The {@link ox#Signature.Tuple} to convert.\n * @returns The {@link ox#Signature.Signature}.\n */\nexport function fromTuple(tuple: Tuple): Signature {\n  const [yParity, r, s] = tuple\n  return from({\n    r: r === '0x' ? 0n : BigInt(r),\n    s: s === '0x' ? 0n : BigInt(s),\n    yParity: yParity === '0x' ? 0 : Number(yParity),\n  })\n}\n\nexport declare namespace fromTuple {\n  type ErrorType = from.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Serializes a {@link ox#Signature.Signature} to {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.toBytes({\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1\n * })\n * // @log: Uint8Array [102, 16, 10, ...]\n * ```\n *\n * @param signature - The signature to serialize.\n * @returns The serialized signature.\n */\nexport function toBytes(signature: Signature<boolean>): Bytes.Bytes {\n  return Bytes.fromHex(toHex(signature))\n}\n\nexport declare namespace toBytes {\n  type ErrorType =\n    | toHex.ErrorType\n    | Bytes.fromHex.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Serializes a {@link ox#Signature.Signature} to {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.toHex({\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1\n * })\n * // @log: '0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c'\n * ```\n *\n * @param signature - The signature to serialize.\n * @returns The serialized signature.\n */\nexport function toHex(signature: Signature<boolean>): Hex.Hex {\n  assert(signature)\n\n  const r = signature.r\n  const s = signature.s\n\n  const signature_ = Hex.concat(\n    Hex.fromNumber(r, { size: 32 }),\n    Hex.fromNumber(s, { size: 32 }),\n    // If the signature is recovered, add the recovery byte to the signature.\n    typeof signature.yParity === 'number'\n      ? Hex.fromNumber(yParityToV(signature.yParity), { size: 1 })\n      : '0x',\n  )\n\n  return signature_\n}\n\nexport declare namespace toHex {\n  type ErrorType =\n    | Hex.concat.ErrorType\n    | Hex.fromNumber.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Converts a {@link ox#Signature.Signature} to DER-encoded format.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.from({\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * })\n *\n * const signature_der = Signature.toDerBytes(signature)\n * // @log: Uint8Array [132, 51, 23, ...]\n * ```\n *\n * @param signature - The signature to convert.\n * @returns The DER-encoded signature.\n */\nexport function toDerBytes(signature: Signature<boolean>): Bytes.Bytes {\n  const sig = new secp256k1.Signature(signature.r, signature.s)\n  return sig.toDERRawBytes()\n}\n\nexport declare namespace toDerBytes {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Converts a {@link ox#Signature.Signature} to DER-encoded format.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.from({\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * })\n *\n * const signature_der = Signature.toDerHex(signature)\n * // @log: '0x304402206e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf02204a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db8'\n * ```\n *\n * @param signature - The signature to convert.\n * @returns The DER-encoded signature.\n */\nexport function toDerHex(signature: Signature<boolean>): Hex.Hex {\n  const sig = new secp256k1.Signature(signature.r, signature.s)\n  return `0x${sig.toDERHex()}`\n}\n\nexport declare namespace toDerHex {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Converts a {@link ox#Signature.Signature} into a {@link ox#Signature.Legacy}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const legacy = Signature.toLegacy({ r: 1n, s: 2n, yParity: 1 })\n * // @log: { r: 1n, s: 2n, v: 28 }\n * ```\n *\n * @param signature - The {@link ox#Signature.Signature} to convert.\n * @returns The converted {@link ox#Signature.Legacy}.\n */\nexport function toLegacy(signature: Signature): Legacy {\n  return {\n    r: signature.r,\n    s: signature.s,\n    v: yParityToV(signature.yParity),\n  }\n}\n\nexport declare namespace toLegacy {\n  type ErrorType = yParityToV.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Converts a {@link ox#Signature.Signature} into a {@link ox#Signature.Rpc}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.toRpc({\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1\n * })\n * ```\n *\n * @param signature - The {@link ox#Signature.Signature} to convert.\n * @returns The converted {@link ox#Signature.Rpc}.\n */\nexport function toRpc(signature: Signature): Rpc {\n  const { r, s, yParity } = signature\n  return {\n    r: Hex.fromNumber(r, { size: 32 }),\n    s: Hex.fromNumber(s, { size: 32 }),\n    yParity: yParity === 0 ? '0x0' : '0x1',\n  }\n}\n\nexport declare namespace toRpc {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Converts a {@link ox#Signature.Signature} to a serialized {@link ox#Signature.Tuple} to be used for signatures in Transaction Envelopes, EIP-7702 Authorization Lists, etc.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signatureTuple = Signature.toTuple({\n *   r: 123n,\n *   s: 456n,\n *   yParity: 1,\n * })\n * // @log: [yParity: '0x01', r: '0x7b', s: '0x1c8']\n * ```\n *\n * @param signature - The {@link ox#Signature.Signature} to convert.\n * @returns The {@link ox#Signature.Tuple}.\n */\nexport function toTuple(signature: Signature): Tuple {\n  const { r, s, yParity } = signature\n\n  return [\n    yParity ? '0x01' : '0x',\n    r === 0n ? '0x' : Hex.trimLeft(Hex.fromNumber(r!)),\n    s === 0n ? '0x' : Hex.trimLeft(Hex.fromNumber(s!)),\n  ] as const\n}\n\nexport declare namespace toTuple {\n  type ErrorType =\n    | Hex.trimLeft.ErrorType\n    | Hex.fromNumber.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Validates a Signature. Returns `true` if the signature is valid, `false` otherwise.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const valid = Signature.validate({\n *   r: -49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1,\n * })\n * // @log: false\n * ```\n *\n * @param signature - The signature object to assert.\n */\nexport function validate(\n  signature: ExactPartial<Signature>,\n  options: validate.Options = {},\n): boolean {\n  try {\n    assert(signature, options)\n    return true\n  } catch {\n    return false\n  }\n}\n\nexport declare namespace validate {\n  type Options = {\n    /** Whether or not the signature should be recovered (contain `yParity`). */\n    recovered?: boolean\n  }\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Converts a ECDSA `v` value to a `yParity` value.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const yParity = Signature.vToYParity(28)\n * // @log: 1\n * ```\n *\n * @param v - The ECDSA `v` value to convert.\n * @returns The `yParity` value.\n */\nexport function vToYParity(v: number): Signature['yParity'] {\n  if (v === 0 || v === 27) return 0\n  if (v === 1 || v === 28) return 1\n  if (v >= 35) return v % 2 === 0 ? 1 : 0\n  throw new InvalidVError({ value: v })\n}\n\nexport declare namespace vToYParity {\n  type ErrorType = InvalidVError | Errors.GlobalErrorType\n}\n\n/**\n * Converts a ECDSA `v` value to a `yParity` value.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const v = Signature.yParityToV(1)\n * // @log: 28\n * ```\n *\n * @param yParity - The ECDSA `yParity` value to convert.\n * @returns The `v` value.\n */\nexport function yParityToV(yParity: number): number {\n  if (yParity === 0) return 27\n  if (yParity === 1) return 28\n  throw new InvalidYParityError({ value: yParity })\n}\n\nexport declare namespace yParityToV {\n  type ErrorType = InvalidVError | Errors.GlobalErrorType\n}\n\n/** Thrown when the serialized signature is of an invalid size. */\nexport class InvalidSerializedSizeError extends Errors.BaseError {\n  override readonly name = 'Signature.InvalidSerializedSizeError'\n\n  constructor({ signature }: { signature: Hex.Hex | Bytes.Bytes }) {\n    super(`Value \\`${signature}\\` is an invalid signature size.`, {\n      metaMessages: [\n        'Expected: 64 bytes or 65 bytes.',\n        `Received ${Hex.size(Hex.from(signature))} bytes.`,\n      ],\n    })\n  }\n}\n\n/** Thrown when the signature is missing either an `r`, `s`, or `yParity` property. */\nexport class MissingPropertiesError extends Errors.BaseError {\n  override readonly name = 'Signature.MissingPropertiesError'\n\n  constructor({ signature }: { signature: unknown }) {\n    super(\n      `Signature \\`${Json.stringify(signature)}\\` is missing either an \\`r\\`, \\`s\\`, or \\`yParity\\` property.`,\n    )\n  }\n}\n\n/** Thrown when the signature has an invalid `r` value. */\nexport class InvalidRError extends Errors.BaseError {\n  override readonly name = 'Signature.InvalidRError'\n\n  constructor({ value }: { value: unknown }) {\n    super(\n      `Value \\`${value}\\` is an invalid r value. r must be a positive integer less than 2^256.`,\n    )\n  }\n}\n\n/** Thrown when the signature has an invalid `s` value. */\nexport class InvalidSError extends Errors.BaseError {\n  override readonly name = 'Signature.InvalidSError'\n\n  constructor({ value }: { value: unknown }) {\n    super(\n      `Value \\`${value}\\` is an invalid s value. s must be a positive integer less than 2^256.`,\n    )\n  }\n}\n\n/** Thrown when the signature has an invalid `yParity` value. */\nexport class InvalidYParityError extends Errors.BaseError {\n  override readonly name = 'Signature.InvalidYParityError'\n\n  constructor({ value }: { value: unknown }) {\n    super(\n      `Value \\`${value}\\` is an invalid y-parity value. Y-parity must be 0 or 1.`,\n    )\n  }\n}\n\n/** Thrown when the signature has an invalid `v` value. */\nexport class InvalidVError extends Errors.BaseError {\n  override readonly name = 'Signature.InvalidVError'\n\n  constructor({ value }: { value: number }) {\n    super(`Value \\`${value}\\` is an invalid v value. v must be 27, 28 or >=35.`)\n  }\n}\n","function promisifyRequest(request) {\n    return new Promise((resolve, reject) => {\n        // @ts-ignore - file size hacks\n        request.oncomplete = request.onsuccess = () => resolve(request.result);\n        // @ts-ignore - file size hacks\n        request.onabort = request.onerror = () => reject(request.error);\n    });\n}\nfunction createStore(dbName, storeName) {\n    const request = indexedDB.open(dbName);\n    request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n    const dbp = promisifyRequest(request);\n    return (txMode, callback) => dbp.then((db) => callback(db.transaction(storeName, txMode).objectStore(storeName)));\n}\nlet defaultGetStoreFunc;\nfunction defaultGetStore() {\n    if (!defaultGetStoreFunc) {\n        defaultGetStoreFunc = createStore('keyval-store', 'keyval');\n    }\n    return defaultGetStoreFunc;\n}\n/**\n * Get a value by its key.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction get(key, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => promisifyRequest(store.get(key)));\n}\n/**\n * Set a value with a key.\n *\n * @param key\n * @param value\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction set(key, value, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.put(value, key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Set multiple values at once. This is faster than calling set() multiple times.\n * It's also atomic – if one of the pairs can't be added, none will be added.\n *\n * @param entries Array of entries, where each entry is an array of `[key, value]`.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction setMany(entries, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        entries.forEach((entry) => store.put(entry[1], entry[0]));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Get multiple values by their keys\n *\n * @param keys\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction getMany(keys, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => Promise.all(keys.map((key) => promisifyRequest(store.get(key)))));\n}\n/**\n * Update a value. This lets you see the old value and update it as an atomic operation.\n *\n * @param key\n * @param updater A callback that takes the old value and returns a new value.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction update(key, updater, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => \n    // Need to create the promise manually.\n    // If I try to chain promises, the transaction closes in browsers\n    // that use a promise polyfill (IE10/11).\n    new Promise((resolve, reject) => {\n        store.get(key).onsuccess = function () {\n            try {\n                store.put(updater(this.result), key);\n                resolve(promisifyRequest(store.transaction));\n            }\n            catch (err) {\n                reject(err);\n            }\n        };\n    }));\n}\n/**\n * Delete a particular key from the store.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction del(key, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.delete(key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Delete multiple keys at once.\n *\n * @param keys List of keys to delete.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction delMany(keys, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        keys.forEach((key) => store.delete(key));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Clear all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction clear(customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.clear();\n        return promisifyRequest(store.transaction);\n    });\n}\nfunction eachCursor(store, callback) {\n    store.openCursor().onsuccess = function () {\n        if (!this.result)\n            return;\n        callback(this.result);\n        this.result.continue();\n    };\n    return promisifyRequest(store.transaction);\n}\n/**\n * Get all keys in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction keys(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        if (store.getAllKeys) {\n            return promisifyRequest(store.getAllKeys());\n        }\n        const items = [];\n        return eachCursor(store, (cursor) => items.push(cursor.key)).then(() => items);\n    });\n}\n/**\n * Get all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction values(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        if (store.getAll) {\n            return promisifyRequest(store.getAll());\n        }\n        const items = [];\n        return eachCursor(store, (cursor) => items.push(cursor.value)).then(() => items);\n    });\n}\n/**\n * Get all entries in the store. Each entry is an array of `[key, value]`.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction entries(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        // (although, hopefully we'll get a simpler path some day)\n        if (store.getAll && store.getAllKeys) {\n            return Promise.all([\n                promisifyRequest(store.getAllKeys()),\n                promisifyRequest(store.getAll()),\n            ]).then(([keys, values]) => keys.map((key, i) => [key, values[i]]));\n        }\n        const items = [];\n        return customStore('readonly', (store) => eachCursor(store, (cursor) => items.push([cursor.key, cursor.value])).then(() => items));\n    });\n}\n\nexport { clear, createStore, del, delMany, entries, get, getMany, keys, promisifyRequest, set, setMany, update, values };\n",null,null,"import { p256 } from '@noble/curves/p256'\nimport * as Bytes from './Bytes.js'\nimport type * as Errors from './Errors.js'\nimport type * as Hex from './Hex.js'\nimport * as PublicKey from './PublicKey.js'\nimport type * as Signature from './Signature.js'\nimport type { Compute } from './internal/types.js'\n\n/**\n * Generates an ECDSA P256 key pair that includes:\n *\n * - a `privateKey` of type [`CryptoKey`](https://developer.mozilla.org/en-US/docs/Web/API/CryptoKey)\n *\n * - a `publicKey` of type {@link ox#Hex.Hex} or {@link ox#Bytes.Bytes}\n *\n * @example\n * ```ts twoslash\n * import { WebCryptoP256 } from 'ox'\n *\n * const { publicKey, privateKey } = await WebCryptoP256.createKeyPair()\n * // @log: {\n * // @log:   privateKey: CryptoKey {},\n * // @log:   publicKey: {\n * // @log:     x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n * // @log:     y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * // @log:     prefix: 4,\n * // @log:   },\n * // @log: }\n * ```\n *\n * @param options - Options for creating the key pair.\n * @returns The key pair.\n */\nexport async function createKeyPair(\n  options: createKeyPair.Options = {},\n): Promise<createKeyPair.ReturnType> {\n  const { extractable = false } = options\n  const keypair = await globalThis.crypto.subtle.generateKey(\n    {\n      name: 'ECDSA',\n      namedCurve: 'P-256',\n    },\n    extractable,\n    ['sign', 'verify'],\n  )\n  const publicKey_raw = await globalThis.crypto.subtle.exportKey(\n    'raw',\n    keypair.publicKey,\n  )\n  const publicKey = PublicKey.from(new Uint8Array(publicKey_raw))\n  return {\n    privateKey: keypair.privateKey,\n    publicKey,\n  }\n}\n\nexport declare namespace createKeyPair {\n  type Options = {\n    /** A boolean value indicating whether it will be possible to export the private key using `globalThis.crypto.subtle.exportKey()`. */\n    extractable?: boolean | undefined\n  }\n\n  type ReturnType = Compute<{\n    privateKey: CryptoKey\n    publicKey: PublicKey.PublicKey\n  }>\n\n  type ErrorType = PublicKey.from.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Signs a payload with the provided `CryptoKey` private key and returns a P256 signature.\n *\n * @example\n * ```ts twoslash\n * import { WebCryptoP256 } from 'ox'\n *\n * const { privateKey } = await WebCryptoP256.createKeyPair()\n *\n * const signature = await WebCryptoP256.sign({ // [!code focus]\n *   payload: '0xdeadbeef', // [!code focus]\n *   privateKey, // [!code focus]\n * }) // [!code focus]\n * // @log: {\n * // @log:   r: 151231...4423n,\n * // @log:   s: 516123...5512n,\n * // @log: }\n * ```\n *\n * @param options - Options for signing the payload.\n * @returns The P256 ECDSA {@link ox#Signature.Signature}.\n */\nexport async function sign(\n  options: sign.Options,\n): Promise<Signature.Signature<false>> {\n  const { payload, privateKey } = options\n  const signature = await globalThis.crypto.subtle.sign(\n    {\n      name: 'ECDSA',\n      hash: 'SHA-256',\n    },\n    privateKey,\n    Bytes.from(payload),\n  )\n  const signature_bytes = Bytes.fromArray(new Uint8Array(signature))\n  const r = Bytes.toBigInt(Bytes.slice(signature_bytes, 0, 32))\n  let s = Bytes.toBigInt(Bytes.slice(signature_bytes, 32, 64))\n  if (s > p256.CURVE.n / 2n) s = p256.CURVE.n - s\n  return { r, s }\n}\n\nexport declare namespace sign {\n  type Options = {\n    /** Payload to sign. */\n    payload: Hex.Hex | Bytes.Bytes\n    /** ECDSA private key. */\n    privateKey: CryptoKey\n  }\n\n  type ErrorType = Bytes.fromArray.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Verifies a payload was signed by the provided public key.\n *\n * @example\n *\n * ```ts twoslash\n * import { WebCryptoP256 } from 'ox'\n *\n * const { privateKey, publicKey } = await WebCryptoP256.createKeyPair()\n * const signature = await WebCryptoP256.sign({ payload: '0xdeadbeef', privateKey })\n *\n * const verified = await WebCryptoP256.verify({ // [!code focus]\n *   payload: '0xdeadbeef', // [!code focus]\n *   publicKey, // [!code focus]\n *   signature, // [!code focus]\n * }) // [!code focus]\n * // @log: true\n * ```\n *\n * @param options - The verification options.\n * @returns Whether the payload was signed by the provided public key.\n */\nexport async function verify(options: verify.Options): Promise<boolean> {\n  const { payload, signature } = options\n\n  const publicKey = await globalThis.crypto.subtle.importKey(\n    'raw',\n    PublicKey.toBytes(options.publicKey),\n    { name: 'ECDSA', namedCurve: 'P-256' },\n    true,\n    ['verify'],\n  )\n\n  return await globalThis.crypto.subtle.verify(\n    {\n      name: 'ECDSA',\n      hash: 'SHA-256',\n    },\n    publicKey,\n    Bytes.concat(Bytes.fromNumber(signature.r), Bytes.fromNumber(signature.s)),\n    Bytes.from(payload),\n  )\n}\n\nexport declare namespace verify {\n  type Options = {\n    /** Public key that signed the payload. */\n    publicKey: PublicKey.PublicKey<boolean>\n    /** Signature of the payload. */\n    signature: Signature.Signature<false>\n    /** Payload that was signed. */\n    payload: Hex.Hex | Bytes.Bytes\n  }\n\n  type ErrorType = Errors.GlobalErrorType\n}\n",null,null,"import type { GetCallsStatusReturnType } from '../actions/wallet/getCallsStatus.js'\nimport { BaseError } from './base.js'\n\nexport type BundleFailedErrorType = BundleFailedError & {\n  name: 'BundleFailedError'\n}\nexport class BundleFailedError extends BaseError {\n  result: GetCallsStatusReturnType\n\n  constructor(result: GetCallsStatusReturnType) {\n    super(`Call bundle failed with status: ${result.statusCode}`, {\n      name: 'BundleFailedError',\n    })\n\n    this.result = result\n  }\n}\n","import type { Address, Narrow } from 'abitype'\nimport { parseAccount } from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { BaseError } from '../../errors/base.js'\nimport {\n  AtomicityNotSupportedError,\n  UnsupportedNonOptionalCapabilityError,\n} from '../../errors/rpc.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account, GetAccountParameter } from '../../types/account.js'\nimport type { Call, Calls } from '../../types/calls.js'\nimport type { ExtractCapabilities } from '../../types/capabilities.js'\nimport type { Chain, DeriveChain } from '../../types/chain.js'\nimport type { WalletSendCallsParameters } from '../../types/eip1193.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport { encodeFunctionData } from '../../utils/abi/encodeFunctionData.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { concat } from '../../utils/data/concat.js'\nimport { hexToBigInt } from '../../utils/encoding/fromHex.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\nimport { getTransactionError } from '../../utils/errors/getTransactionError.js'\nimport { sendTransaction } from './sendTransaction.js'\n\nexport const fallbackMagicIdentifier =\n  '0x5792579257925792579257925792579257925792579257925792579257925792'\nexport const fallbackTransactionErrorMagicIdentifier = numberToHex(0, {\n  size: 32,\n})\n\nexport type SendCallsParameters<\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  calls extends readonly unknown[] = readonly unknown[],\n  //\n  _chain extends Chain | undefined = DeriveChain<chain, chainOverride>,\n> = {\n  chain?: chainOverride | Chain | undefined\n  calls: Calls<Narrow<calls>>\n  capabilities?: ExtractCapabilities<'sendCalls', 'Request'> | undefined\n  experimental_fallback?: boolean | undefined\n  experimental_fallbackDelay?: number | undefined\n  forceAtomic?: boolean | undefined\n  id?: string | undefined\n  version?: WalletSendCallsParameters[number]['version'] | undefined\n} & GetAccountParameter<account, Account | Address, false, true>\n\nexport type SendCallsReturnType = Prettify<{\n  capabilities?: ExtractCapabilities<'sendCalls', 'ReturnType'> | undefined\n  id: string\n}>\n\nexport type SendCallsErrorType = RequestErrorType | ErrorType\n\n/**\n * Requests the connected wallet to send a batch of calls.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/sendCalls\n * - JSON-RPC Methods: [`wallet_sendCalls`](https://eips.ethereum.org/EIPS/eip-5792)\n *\n * @param client - Client to use\n * @returns Transaction identifier. {@link SendCallsReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { sendCalls } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const id = await sendCalls(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   calls: [\n *     {\n *       data: '0xdeadbeef',\n *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *     },\n *     {\n *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *       value: 69420n,\n *     },\n *   ],\n * })\n */\nexport async function sendCalls<\n  const calls extends readonly unknown[],\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n  chainOverride extends Chain | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: SendCallsParameters<chain, account, chainOverride, calls>,\n): Promise<SendCallsReturnType> {\n  const {\n    account: account_ = client.account,\n    capabilities,\n    chain = client.chain,\n    experimental_fallback,\n    experimental_fallbackDelay = 32,\n    forceAtomic = false,\n    id,\n    version = '2.0.0',\n  } = parameters\n\n  const account = account_ ? parseAccount(account_) : null\n\n  const calls = parameters.calls.map((call_: unknown) => {\n    const call = call_ as Call\n\n    const data = call.abi\n      ? encodeFunctionData({\n          abi: call.abi,\n          functionName: call.functionName,\n          args: call.args,\n        })\n      : call.data\n\n    return {\n      data: call.dataSuffix && data ? concat([data, call.dataSuffix]) : data,\n      to: call.to,\n      value: call.value ? numberToHex(call.value) : undefined,\n    }\n  })\n\n  try {\n    const response = await client.request(\n      {\n        method: 'wallet_sendCalls',\n        params: [\n          {\n            atomicRequired: forceAtomic,\n            calls,\n            capabilities,\n            chainId: numberToHex(chain!.id),\n            from: account?.address,\n            id,\n            version,\n          },\n        ],\n      },\n      { retryCount: 0 },\n    )\n    if (typeof response === 'string') return { id: response }\n    return response as never\n  } catch (err) {\n    const error = err as BaseError\n\n    // If the transport does not support EIP-5792, fall back to\n    // `eth_sendTransaction`.\n    if (\n      experimental_fallback &&\n      (error.name === 'MethodNotFoundRpcError' ||\n        error.name === 'MethodNotSupportedRpcError' ||\n        error.name === 'UnknownRpcError' ||\n        error.details\n          .toLowerCase()\n          .includes('does not exist / is not available') ||\n        error.details.toLowerCase().includes('missing or invalid. request()') ||\n        error.details\n          .toLowerCase()\n          .includes('did not match any variant of untagged enum') ||\n        error.details\n          .toLowerCase()\n          .includes('account upgraded to unsupported contract') ||\n        error.details.toLowerCase().includes('eip-7702 not supported') ||\n        error.details.toLowerCase().includes('unsupported wc_ method') ||\n        // magic.link\n        error.details\n          .toLowerCase()\n          .includes('feature toggled misconfigured') ||\n        // Trust Wallet\n        error.details\n          .toLowerCase()\n          .includes(\n            'jsonrpcengine: response has no error or result for request',\n          ))\n    ) {\n      if (capabilities) {\n        const hasNonOptionalCapability = Object.values(capabilities).some(\n          (capability) => !capability.optional,\n        )\n        if (hasNonOptionalCapability) {\n          const message =\n            'non-optional `capabilities` are not supported on fallback to `eth_sendTransaction`.'\n          throw new UnsupportedNonOptionalCapabilityError(\n            new BaseError(message, {\n              details: message,\n            }),\n          )\n        }\n      }\n      if (forceAtomic && calls.length > 1) {\n        const message =\n          '`forceAtomic` is not supported on fallback to `eth_sendTransaction`.'\n        throw new AtomicityNotSupportedError(\n          new BaseError(message, {\n            details: message,\n          }),\n        )\n      }\n\n      const promises: Promise<Hex>[] = []\n      for (const call of calls) {\n        const promise = sendTransaction(client, {\n          account,\n          chain,\n          data: call.data,\n          to: call.to,\n          value: call.value ? hexToBigInt(call.value) : undefined,\n        })\n        promises.push(promise)\n\n        // Note: some browser wallets require a small delay between transactions\n        // to prevent duplicate JSON-RPC requests.\n        if (experimental_fallbackDelay > 0)\n          await new Promise((resolve) =>\n            setTimeout(resolve, experimental_fallbackDelay),\n          )\n      }\n\n      const results = await Promise.allSettled(promises)\n      if (results.every((r) => r.status === 'rejected')) throw results[0].reason\n\n      const hashes = results.map((result) => {\n        if (result.status === 'fulfilled') return result.value\n        return fallbackTransactionErrorMagicIdentifier\n      })\n      return {\n        id: concat([\n          ...hashes,\n          numberToHex(chain!.id, { size: 32 }),\n          fallbackMagicIdentifier,\n        ]),\n      }\n    }\n\n    throw getTransactionError(err as BaseError, {\n      ...parameters,\n      account,\n      chain: parameters.chain!,\n    })\n  }\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { ExtractCapabilities } from '../../types/capabilities.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { WalletGetCallsStatusReturnType } from '../../types/eip1193.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RpcTransactionReceipt } from '../../types/rpc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { sliceHex } from '../../utils/data/slice.js'\nimport { trim } from '../../utils/data/trim.js'\nimport { hexToBigInt, hexToNumber } from '../../utils/encoding/fromHex.js'\nimport { receiptStatuses } from '../../utils/formatters/transactionReceipt.js'\nimport {\n  fallbackMagicIdentifier,\n  fallbackTransactionErrorMagicIdentifier,\n} from './sendCalls.js'\n\nexport type GetCallsStatusParameters = { id: string }\n\nexport type GetCallsStatusReturnType = Prettify<\n  Omit<\n    WalletGetCallsStatusReturnType<\n      ExtractCapabilities<'getCallsStatus', 'ReturnType'>,\n      number,\n      bigint,\n      'success' | 'reverted'\n    >,\n    'status'\n  > & {\n    statusCode: number\n    status: 'pending' | 'success' | 'failure' | undefined\n  }\n>\n\nexport type GetCallsStatusErrorType = RequestErrorType | ErrorType\n\n/**\n * Returns the status of a call batch that was sent via `sendCalls`.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/getCallsStatus\n * - JSON-RPC Methods: [`wallet_getCallsStatus`](https://eips.ethereum.org/EIPS/eip-5792)\n *\n * @param client - Client to use\n * @returns Status of the calls. {@link GetCallsStatusReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getCallsStatus } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const { receipts, status } = await getCallsStatus(client, { id: '0xdeadbeef' })\n */\nexport async function getCallsStatus<\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: GetCallsStatusParameters,\n): Promise<GetCallsStatusReturnType> {\n  async function getStatus(id: Hex) {\n    const isTransactions = id.endsWith(fallbackMagicIdentifier.slice(2))\n    if (isTransactions) {\n      const chainId = trim(sliceHex(id, -64, -32))\n      const hashes = sliceHex(id, 0, -64)\n        .slice(2)\n        .match(/.{1,64}/g)\n\n      const receipts = await Promise.all(\n        hashes!.map((hash) =>\n          fallbackTransactionErrorMagicIdentifier.slice(2) !== hash\n            ? client.request(\n                {\n                  method: 'eth_getTransactionReceipt',\n                  params: [`0x${hash}`],\n                },\n                { dedupe: true },\n              )\n            : undefined,\n        ),\n      )\n\n      const status = (() => {\n        if (receipts.some((r) => r === null)) return 100 // pending\n        if (receipts.every((r) => r?.status === '0x1')) return 200 // success\n        if (receipts.every((r) => r?.status === '0x0')) return 500 // complete failure\n        return 600 // partial failure\n      })()\n\n      return {\n        atomic: false,\n        chainId: hexToNumber(chainId),\n        receipts: receipts.filter(Boolean) as RpcTransactionReceipt[],\n        status,\n        version: '2.0.0',\n      }\n    }\n    return client.request({\n      method: 'wallet_getCallsStatus',\n      params: [id],\n    })\n  }\n\n  const {\n    atomic = false,\n    chainId,\n    receipts,\n    version = '2.0.0',\n    ...response\n  } = await getStatus(parameters.id as Hex)\n  const [status, statusCode] = (() => {\n    const statusCode = response.status\n    if (statusCode >= 100 && statusCode < 200)\n      return ['pending', statusCode] as const\n    if (statusCode >= 200 && statusCode < 300)\n      return ['success', statusCode] as const\n    if (statusCode >= 300 && statusCode < 700)\n      return ['failure', statusCode] as const\n    // @ts-expect-error: for backwards compatibility\n    if (statusCode === 'CONFIRMED') return ['success', 200] as const\n    // @ts-expect-error: for backwards compatibility\n    if (statusCode === 'PENDING') return ['pending', 100] as const\n    return [undefined, statusCode]\n  })()\n  return {\n    ...response,\n    atomic,\n    // @ts-expect-error: for backwards compatibility\n    chainId: chainId ? hexToNumber(chainId) : undefined,\n    receipts:\n      receipts?.map((receipt) => ({\n        ...receipt,\n        blockNumber: hexToBigInt(receipt.blockNumber),\n        gasUsed: hexToBigInt(receipt.gasUsed),\n        status: receiptStatuses[receipt.status as '0x0' | '0x1'],\n      })) ?? [],\n    statusCode,\n    status,\n    version,\n  }\n}\n","import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { BaseError } from '../../errors/base.js'\nimport { BundleFailedError } from '../../errors/calls.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { type ObserveErrorType, observe } from '../../utils/observe.js'\nimport { type PollErrorType, poll } from '../../utils/poll.js'\nimport { withResolvers } from '../../utils/promise/withResolvers.js'\nimport {\n  type WithRetryParameters,\n  withRetry,\n} from '../../utils/promise/withRetry.js'\nimport { stringify } from '../../utils/stringify.js'\nimport {\n  type GetCallsStatusErrorType,\n  type GetCallsStatusReturnType,\n  getCallsStatus,\n} from './getCallsStatus.js'\n\nexport type WaitForCallsStatusParameters = {\n  /**\n   * The id of the call batch to wait for.\n   */\n  id: string\n  /**\n   * Polling frequency (in ms). Defaults to the client's pollingInterval config.\n   *\n   * @default client.pollingInterval\n   */\n  pollingInterval?: number | undefined\n  /**\n   * Number of times to retry if the call bundle failed.\n   * @default 4 (exponential backoff)\n   */\n  retryCount?: WithRetryParameters['retryCount'] | undefined\n  /**\n   * Time to wait (in ms) between retries.\n   * @default `({ count }) => ~~(1 << count) * 200` (exponential backoff)\n   */\n  retryDelay?: WithRetryParameters['delay'] | undefined\n  /**\n   * The status range to wait for.\n   *\n   * @default (status) => status >= 200\n   */\n  status?: ((parameters: GetCallsStatusReturnType) => boolean) | undefined\n  /**\n   * Whether to throw an error if the call bundle fails.\n   *\n   * @default false\n   */\n  throwOnFailure?: boolean | undefined\n  /**\n   * Optional timeout (in milliseconds) to wait before stopping polling.\n   *\n   * @default 60_000\n   */\n  timeout?: number | undefined\n}\n\nexport type WaitForCallsStatusReturnType = GetCallsStatusReturnType\n\nexport type WaitForCallsStatusErrorType =\n  | ObserveErrorType\n  | PollErrorType\n  | GetCallsStatusErrorType\n  | WaitForCallsStatusTimeoutError\n  | ErrorType\n\n/**\n * Waits for the status & receipts of a call bundle that was sent via `sendCalls`.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/waitForCallsStatus\n * - JSON-RPC Methods: [`wallet_getCallsStatus`](https://eips.ethereum.org/EIPS/eip-5792)\n *\n * @param client - Client to use\n * @param parameters - {@link WaitForCallsStatusParameters}\n * @returns Status & receipts of the call bundle. {@link WaitForCallsStatusReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { waitForCallsStatus } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n *\n * const { receipts, status } = await waitForCallsStatus(client, { id: '0xdeadbeef' })\n */\nexport async function waitForCallsStatus<chain extends Chain | undefined>(\n  client: Client<Transport, chain>,\n  parameters: WaitForCallsStatusParameters,\n): Promise<WaitForCallsStatusReturnType> {\n  const {\n    id,\n    pollingInterval = client.pollingInterval,\n    status = ({ statusCode }) => statusCode === 200 || statusCode >= 300,\n    retryCount = 4,\n    retryDelay = ({ count }) => ~~(1 << count) * 200, // exponential backoff\n    timeout = 60_000,\n    throwOnFailure = false,\n  } = parameters\n  const observerId = stringify(['waitForCallsStatus', client.uid, id])\n\n  const { promise, resolve, reject } =\n    withResolvers<WaitForCallsStatusReturnType>()\n\n  let timer: Timer | undefined\n\n  const unobserve = observe(observerId, { resolve, reject }, (emit) => {\n    const unpoll = poll(\n      async () => {\n        const done = (fn: () => void) => {\n          clearTimeout(timer)\n          unpoll()\n          fn()\n          unobserve()\n        }\n\n        try {\n          const result = await withRetry(\n            async () => {\n              const result = await getAction(\n                client,\n                getCallsStatus,\n                'getCallsStatus',\n              )({ id })\n              if (throwOnFailure && result.status === 'failure')\n                throw new BundleFailedError(result)\n              return result\n            },\n            {\n              retryCount,\n              delay: retryDelay,\n            },\n          )\n          if (!status(result)) return\n          done(() => emit.resolve(result))\n        } catch (error) {\n          done(() => emit.reject(error))\n        }\n      },\n      {\n        interval: pollingInterval,\n        emitOnBegin: true,\n      },\n    )\n\n    return unpoll\n  })\n\n  timer = timeout\n    ? setTimeout(() => {\n        unobserve()\n        clearTimeout(timer)\n        reject(new WaitForCallsStatusTimeoutError({ id }))\n      }, timeout)\n    : undefined\n\n  return await promise\n}\n\nexport type WaitForCallsStatusTimeoutErrorType =\n  WaitForCallsStatusTimeoutError & {\n    name: 'WaitForCallsStatusTimeoutError'\n  }\nexport class WaitForCallsStatusTimeoutError extends BaseError {\n  constructor({ id }: { id: string }) {\n    super(\n      `Timed out while waiting for call bundle with id \"${id}\" to be confirmed.`,\n      { name: 'WaitForCallsStatusTimeoutError' },\n    )\n  }\n}\n",null,null,"import type {\n  AbiParameterToPrimitiveType,\n  AbiType,\n  Address,\n  SolidityAddress,\n  SolidityArrayWithoutTuple,\n  SolidityBool,\n  SolidityBytes,\n  SolidityInt,\n  SolidityString,\n} from 'abitype'\n\nimport {\n  AbiEncodingLengthMismatchError,\n  type AbiEncodingLengthMismatchErrorType,\n  BytesSizeMismatchError,\n  type BytesSizeMismatchErrorType,\n  UnsupportedPackedAbiType,\n} from '../../errors/abi.js'\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\nimport { type PadErrorType, pad } from '../data/pad.js'\nimport {\n  type BoolToHexErrorType,\n  boolToHex,\n  type NumberToHexErrorType,\n  numberToHex,\n  type StringToHexErrorType,\n  stringToHex,\n} from '../encoding/toHex.js'\nimport { arrayRegex, bytesRegex, integerRegex } from '../regex.js'\n\ntype PackedAbiType =\n  | SolidityAddress\n  | SolidityBool\n  | SolidityBytes\n  | SolidityInt\n  | SolidityString\n  | SolidityArrayWithoutTuple\n\ntype EncodePackedValues<\n  packedAbiTypes extends readonly PackedAbiType[] | readonly unknown[],\n> = {\n  [K in keyof packedAbiTypes]: packedAbiTypes[K] extends AbiType\n    ? AbiParameterToPrimitiveType<{ type: packedAbiTypes[K] }>\n    : unknown\n}\n\nexport type EncodePackedErrorType =\n  | AbiEncodingLengthMismatchErrorType\n  | ConcatHexErrorType\n  | EncodeErrorType\n  | ErrorType\n\nexport function encodePacked<\n  const packedAbiTypes extends readonly PackedAbiType[] | readonly unknown[],\n>(types: packedAbiTypes, values: EncodePackedValues<packedAbiTypes>): Hex {\n  if (types.length !== values.length)\n    throw new AbiEncodingLengthMismatchError({\n      expectedLength: types.length as number,\n      givenLength: values.length as number,\n    })\n\n  const data: Hex[] = []\n  for (let i = 0; i < (types as unknown[]).length; i++) {\n    const type = types[i]\n    const value = values[i]\n    data.push(encode(type, value))\n  }\n  return concatHex(data)\n}\n\ntype EncodeErrorType =\n  | BoolToHexErrorType\n  | BytesSizeMismatchErrorType\n  | InvalidAddressErrorType\n  | IsAddressErrorType\n  | NumberToHexErrorType\n  | PadErrorType\n  | StringToHexErrorType\n  | UnsupportedPackedAbiType\n  | ErrorType\n\nfunction encode<const packedAbiType extends PackedAbiType | unknown>(\n  type: packedAbiType,\n  value: EncodePackedValues<[packedAbiType]>[0],\n  isArray = false,\n): Hex {\n  if (type === 'address') {\n    const address = value as Address\n    if (!isAddress(address)) throw new InvalidAddressError({ address })\n    return pad(address.toLowerCase() as Hex, {\n      size: isArray ? 32 : null,\n    }) as Address\n  }\n  if (type === 'string') return stringToHex(value as string)\n  if (type === 'bytes') return value as Hex\n  if (type === 'bool')\n    return pad(boolToHex(value as boolean), { size: isArray ? 32 : 1 })\n\n  const intMatch = (type as string).match(integerRegex)\n  if (intMatch) {\n    const [_type, baseType, bits = '256'] = intMatch\n    const size = Number.parseInt(bits, 10) / 8\n    return numberToHex(value as number, {\n      size: isArray ? 32 : size,\n      signed: baseType === 'int',\n    })\n  }\n\n  const bytesMatch = (type as string).match(bytesRegex)\n  if (bytesMatch) {\n    const [_type, size] = bytesMatch\n    if (Number.parseInt(size, 10) !== ((value as Hex).length - 2) / 2)\n      throw new BytesSizeMismatchError({\n        expectedSize: Number.parseInt(size, 10),\n        givenSize: ((value as Hex).length - 2) / 2,\n      })\n    return pad(value as Hex, { dir: 'right', size: isArray ? 32 : null }) as Hex\n  }\n\n  const arrayMatch = (type as string).match(arrayRegex)\n  if (arrayMatch && Array.isArray(value)) {\n    const [_type, childType] = arrayMatch\n    const data: Hex[] = []\n    for (let i = 0; i < value.length; i++) {\n      data.push(encode(childType, value[i], true))\n    }\n    if (data.length === 0) return '0x'\n    return concatHex(data)\n  }\n\n  throw new UnsupportedPackedAbiType(type)\n}\n","export const entryPoint06Abi = [\n  {\n    inputs: [\n      { name: 'preOpGas', type: 'uint256' },\n      { name: 'paid', type: 'uint256' },\n      { name: 'validAfter', type: 'uint48' },\n      { name: 'validUntil', type: 'uint48' },\n      { name: 'targetSuccess', type: 'bool' },\n      { name: 'targetResult', type: 'bytes' },\n    ],\n    name: 'ExecutionResult',\n    type: 'error',\n  },\n  {\n    inputs: [\n      { name: 'opIndex', type: 'uint256' },\n      { name: 'reason', type: 'string' },\n    ],\n    name: 'FailedOp',\n    type: 'error',\n  },\n  {\n    inputs: [{ name: 'sender', type: 'address' }],\n    name: 'SenderAddressResult',\n    type: 'error',\n  },\n  {\n    inputs: [{ name: 'aggregator', type: 'address' }],\n    name: 'SignatureValidationFailed',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { name: 'preOpGas', type: 'uint256' },\n          { name: 'prefund', type: 'uint256' },\n          { name: 'sigFailed', type: 'bool' },\n          { name: 'validAfter', type: 'uint48' },\n          { name: 'validUntil', type: 'uint48' },\n          { name: 'paymasterContext', type: 'bytes' },\n        ],\n\n        name: 'returnInfo',\n        type: 'tuple',\n      },\n      {\n        components: [\n          { name: 'stake', type: 'uint256' },\n          { name: 'unstakeDelaySec', type: 'uint256' },\n        ],\n\n        name: 'senderInfo',\n        type: 'tuple',\n      },\n      {\n        components: [\n          { name: 'stake', type: 'uint256' },\n          { name: 'unstakeDelaySec', type: 'uint256' },\n        ],\n\n        name: 'factoryInfo',\n        type: 'tuple',\n      },\n      {\n        components: [\n          { name: 'stake', type: 'uint256' },\n          { name: 'unstakeDelaySec', type: 'uint256' },\n        ],\n\n        name: 'paymasterInfo',\n        type: 'tuple',\n      },\n    ],\n    name: 'ValidationResult',\n    type: 'error',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { name: 'preOpGas', type: 'uint256' },\n          { name: 'prefund', type: 'uint256' },\n          { name: 'sigFailed', type: 'bool' },\n          { name: 'validAfter', type: 'uint48' },\n          { name: 'validUntil', type: 'uint48' },\n          { name: 'paymasterContext', type: 'bytes' },\n        ],\n\n        name: 'returnInfo',\n        type: 'tuple',\n      },\n      {\n        components: [\n          { name: 'stake', type: 'uint256' },\n          { name: 'unstakeDelaySec', type: 'uint256' },\n        ],\n\n        name: 'senderInfo',\n        type: 'tuple',\n      },\n      {\n        components: [\n          { name: 'stake', type: 'uint256' },\n          { name: 'unstakeDelaySec', type: 'uint256' },\n        ],\n\n        name: 'factoryInfo',\n        type: 'tuple',\n      },\n      {\n        components: [\n          { name: 'stake', type: 'uint256' },\n          { name: 'unstakeDelaySec', type: 'uint256' },\n        ],\n\n        name: 'paymasterInfo',\n        type: 'tuple',\n      },\n      {\n        components: [\n          { name: 'aggregator', type: 'address' },\n          {\n            components: [\n              { name: 'stake', type: 'uint256' },\n              {\n                name: 'unstakeDelaySec',\n                type: 'uint256',\n              },\n            ],\n\n            name: 'stakeInfo',\n            type: 'tuple',\n          },\n        ],\n\n        name: 'aggregatorInfo',\n        type: 'tuple',\n      },\n    ],\n    name: 'ValidationResultWithAggregation',\n    type: 'error',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n\n        name: 'userOpHash',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n\n        name: 'factory',\n        type: 'address',\n      },\n      {\n        indexed: false,\n\n        name: 'paymaster',\n        type: 'address',\n      },\n    ],\n    name: 'AccountDeployed',\n    type: 'event',\n  },\n  { anonymous: false, inputs: [], name: 'BeforeExecution', type: 'event' },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: false,\n\n        name: 'totalDeposit',\n        type: 'uint256',\n      },\n    ],\n    name: 'Deposited',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n\n        name: 'aggregator',\n        type: 'address',\n      },\n    ],\n    name: 'SignatureAggregatorChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: false,\n\n        name: 'totalStaked',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n\n        name: 'unstakeDelaySec',\n        type: 'uint256',\n      },\n    ],\n    name: 'StakeLocked',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: false,\n\n        name: 'withdrawTime',\n        type: 'uint256',\n      },\n    ],\n    name: 'StakeUnlocked',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: false,\n\n        name: 'withdrawAddress',\n        type: 'address',\n      },\n      {\n        indexed: false,\n\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'StakeWithdrawn',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n\n        name: 'userOpHash',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        indexed: true,\n\n        name: 'paymaster',\n        type: 'address',\n      },\n      {\n        indexed: false,\n\n        name: 'nonce',\n        type: 'uint256',\n      },\n      { indexed: false, name: 'success', type: 'bool' },\n      {\n        indexed: false,\n\n        name: 'actualGasCost',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n\n        name: 'actualGasUsed',\n        type: 'uint256',\n      },\n    ],\n    name: 'UserOperationEvent',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n\n        name: 'userOpHash',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n\n        name: 'nonce',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n\n        name: 'revertReason',\n        type: 'bytes',\n      },\n    ],\n    name: 'UserOperationRevertReason',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: false,\n\n        name: 'withdrawAddress',\n        type: 'address',\n      },\n      {\n        indexed: false,\n\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'Withdrawn',\n    type: 'event',\n  },\n  {\n    inputs: [],\n    name: 'SIG_VALIDATION_FAILED',\n    outputs: [{ name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { name: 'initCode', type: 'bytes' },\n      { name: 'sender', type: 'address' },\n      { name: 'paymasterAndData', type: 'bytes' },\n    ],\n    name: '_validateSenderAndPaymaster',\n    outputs: [],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ name: 'unstakeDelaySec', type: 'uint32' }],\n    name: 'addStake',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [{ name: 'account', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ name: 'account', type: 'address' }],\n    name: 'depositTo',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [{ name: '', type: 'address' }],\n    name: 'deposits',\n    outputs: [\n      { name: 'deposit', type: 'uint112' },\n      { name: 'staked', type: 'bool' },\n      { name: 'stake', type: 'uint112' },\n      { name: 'unstakeDelaySec', type: 'uint32' },\n      { name: 'withdrawTime', type: 'uint48' },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ name: 'account', type: 'address' }],\n    name: 'getDepositInfo',\n    outputs: [\n      {\n        components: [\n          { name: 'deposit', type: 'uint112' },\n          { name: 'staked', type: 'bool' },\n          { name: 'stake', type: 'uint112' },\n          { name: 'unstakeDelaySec', type: 'uint32' },\n          { name: 'withdrawTime', type: 'uint48' },\n        ],\n\n        name: 'info',\n        type: 'tuple',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { name: 'sender', type: 'address' },\n      { name: 'key', type: 'uint192' },\n    ],\n    name: 'getNonce',\n    outputs: [{ name: 'nonce', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ name: 'initCode', type: 'bytes' }],\n    name: 'getSenderAddress',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { name: 'sender', type: 'address' },\n          { name: 'nonce', type: 'uint256' },\n          { name: 'initCode', type: 'bytes' },\n          { name: 'callData', type: 'bytes' },\n          { name: 'callGasLimit', type: 'uint256' },\n          {\n            name: 'verificationGasLimit',\n            type: 'uint256',\n          },\n          {\n            name: 'preVerificationGas',\n            type: 'uint256',\n          },\n          { name: 'maxFeePerGas', type: 'uint256' },\n          {\n            name: 'maxPriorityFeePerGas',\n            type: 'uint256',\n          },\n          { name: 'paymasterAndData', type: 'bytes' },\n          { name: 'signature', type: 'bytes' },\n        ],\n\n        name: 'userOp',\n        type: 'tuple',\n      },\n    ],\n    name: 'getUserOpHash',\n    outputs: [{ name: '', type: 'bytes32' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            components: [\n              { name: 'sender', type: 'address' },\n              { name: 'nonce', type: 'uint256' },\n              { name: 'initCode', type: 'bytes' },\n              { name: 'callData', type: 'bytes' },\n              {\n                name: 'callGasLimit',\n                type: 'uint256',\n              },\n              {\n                name: 'verificationGasLimit',\n                type: 'uint256',\n              },\n              {\n                name: 'preVerificationGas',\n                type: 'uint256',\n              },\n              {\n                name: 'maxFeePerGas',\n                type: 'uint256',\n              },\n              {\n                name: 'maxPriorityFeePerGas',\n                type: 'uint256',\n              },\n              {\n                name: 'paymasterAndData',\n                type: 'bytes',\n              },\n              { name: 'signature', type: 'bytes' },\n            ],\n\n            name: 'userOps',\n            type: 'tuple[]',\n          },\n          {\n            name: 'aggregator',\n            type: 'address',\n          },\n          { name: 'signature', type: 'bytes' },\n        ],\n\n        name: 'opsPerAggregator',\n        type: 'tuple[]',\n      },\n      { name: 'beneficiary', type: 'address' },\n    ],\n    name: 'handleAggregatedOps',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { name: 'sender', type: 'address' },\n          { name: 'nonce', type: 'uint256' },\n          { name: 'initCode', type: 'bytes' },\n          { name: 'callData', type: 'bytes' },\n          { name: 'callGasLimit', type: 'uint256' },\n          {\n            name: 'verificationGasLimit',\n            type: 'uint256',\n          },\n          {\n            name: 'preVerificationGas',\n            type: 'uint256',\n          },\n          { name: 'maxFeePerGas', type: 'uint256' },\n          {\n            name: 'maxPriorityFeePerGas',\n            type: 'uint256',\n          },\n          { name: 'paymasterAndData', type: 'bytes' },\n          { name: 'signature', type: 'bytes' },\n        ],\n\n        name: 'ops',\n        type: 'tuple[]',\n      },\n      { name: 'beneficiary', type: 'address' },\n    ],\n    name: 'handleOps',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ name: 'key', type: 'uint192' }],\n    name: 'incrementNonce',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { name: 'callData', type: 'bytes' },\n      {\n        components: [\n          {\n            components: [\n              { name: 'sender', type: 'address' },\n              { name: 'nonce', type: 'uint256' },\n              {\n                name: 'callGasLimit',\n                type: 'uint256',\n              },\n              {\n                name: 'verificationGasLimit',\n                type: 'uint256',\n              },\n              {\n                name: 'preVerificationGas',\n                type: 'uint256',\n              },\n              { name: 'paymaster', type: 'address' },\n              {\n                name: 'maxFeePerGas',\n                type: 'uint256',\n              },\n              {\n                name: 'maxPriorityFeePerGas',\n                type: 'uint256',\n              },\n            ],\n\n            name: 'mUserOp',\n            type: 'tuple',\n          },\n          { name: 'userOpHash', type: 'bytes32' },\n          { name: 'prefund', type: 'uint256' },\n          { name: 'contextOffset', type: 'uint256' },\n          { name: 'preOpGas', type: 'uint256' },\n        ],\n\n        name: 'opInfo',\n        type: 'tuple',\n      },\n      { name: 'context', type: 'bytes' },\n    ],\n    name: 'innerHandleOp',\n    outputs: [{ name: 'actualGasCost', type: 'uint256' }],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { name: '', type: 'address' },\n      { name: '', type: 'uint192' },\n    ],\n    name: 'nonceSequenceNumber',\n    outputs: [{ name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { name: 'sender', type: 'address' },\n          { name: 'nonce', type: 'uint256' },\n          { name: 'initCode', type: 'bytes' },\n          { name: 'callData', type: 'bytes' },\n          { name: 'callGasLimit', type: 'uint256' },\n          {\n            name: 'verificationGasLimit',\n            type: 'uint256',\n          },\n          {\n            name: 'preVerificationGas',\n            type: 'uint256',\n          },\n          { name: 'maxFeePerGas', type: 'uint256' },\n          {\n            name: 'maxPriorityFeePerGas',\n            type: 'uint256',\n          },\n          { name: 'paymasterAndData', type: 'bytes' },\n          { name: 'signature', type: 'bytes' },\n        ],\n\n        name: 'op',\n        type: 'tuple',\n      },\n      { name: 'target', type: 'address' },\n      { name: 'targetCallData', type: 'bytes' },\n    ],\n    name: 'simulateHandleOp',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { name: 'sender', type: 'address' },\n          { name: 'nonce', type: 'uint256' },\n          { name: 'initCode', type: 'bytes' },\n          { name: 'callData', type: 'bytes' },\n          { name: 'callGasLimit', type: 'uint256' },\n          {\n            name: 'verificationGasLimit',\n            type: 'uint256',\n          },\n          {\n            name: 'preVerificationGas',\n            type: 'uint256',\n          },\n          { name: 'maxFeePerGas', type: 'uint256' },\n          {\n            name: 'maxPriorityFeePerGas',\n            type: 'uint256',\n          },\n          { name: 'paymasterAndData', type: 'bytes' },\n          { name: 'signature', type: 'bytes' },\n        ],\n\n        name: 'userOp',\n        type: 'tuple',\n      },\n    ],\n    name: 'simulateValidation',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'unlockStake',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'withdrawAddress',\n        type: 'address',\n      },\n    ],\n    name: 'withdrawStake',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'withdrawAddress',\n        type: 'address',\n      },\n      { name: 'withdrawAmount', type: 'uint256' },\n    ],\n    name: 'withdrawTo',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  { stateMutability: 'payable', type: 'receive' },\n] as const\n\nexport const entryPoint07Abi = [\n  {\n    inputs: [\n      { name: 'success', type: 'bool' },\n      { name: 'ret', type: 'bytes' },\n    ],\n    name: 'DelegateAndRevert',\n    type: 'error',\n  },\n  {\n    inputs: [\n      { name: 'opIndex', type: 'uint256' },\n      { name: 'reason', type: 'string' },\n    ],\n    name: 'FailedOp',\n    type: 'error',\n  },\n  {\n    inputs: [\n      { name: 'opIndex', type: 'uint256' },\n      { name: 'reason', type: 'string' },\n      { name: 'inner', type: 'bytes' },\n    ],\n    name: 'FailedOpWithRevert',\n    type: 'error',\n  },\n  {\n    inputs: [{ name: 'returnData', type: 'bytes' }],\n    name: 'PostOpReverted',\n    type: 'error',\n  },\n  { inputs: [], name: 'ReentrancyGuardReentrantCall', type: 'error' },\n  {\n    inputs: [{ name: 'sender', type: 'address' }],\n    name: 'SenderAddressResult',\n    type: 'error',\n  },\n  {\n    inputs: [{ name: 'aggregator', type: 'address' }],\n    name: 'SignatureValidationFailed',\n    type: 'error',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n\n        name: 'userOpHash',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n\n        name: 'factory',\n        type: 'address',\n      },\n      {\n        indexed: false,\n\n        name: 'paymaster',\n        type: 'address',\n      },\n    ],\n    name: 'AccountDeployed',\n    type: 'event',\n  },\n  { anonymous: false, inputs: [], name: 'BeforeExecution', type: 'event' },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: false,\n\n        name: 'totalDeposit',\n        type: 'uint256',\n      },\n    ],\n    name: 'Deposited',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n\n        name: 'userOpHash',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n\n        name: 'nonce',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n\n        name: 'revertReason',\n        type: 'bytes',\n      },\n    ],\n    name: 'PostOpRevertReason',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n\n        name: 'aggregator',\n        type: 'address',\n      },\n    ],\n    name: 'SignatureAggregatorChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: false,\n\n        name: 'totalStaked',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n\n        name: 'unstakeDelaySec',\n        type: 'uint256',\n      },\n    ],\n    name: 'StakeLocked',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: false,\n\n        name: 'withdrawTime',\n        type: 'uint256',\n      },\n    ],\n    name: 'StakeUnlocked',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: false,\n\n        name: 'withdrawAddress',\n        type: 'address',\n      },\n      {\n        indexed: false,\n\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'StakeWithdrawn',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n\n        name: 'userOpHash',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        indexed: true,\n\n        name: 'paymaster',\n        type: 'address',\n      },\n      {\n        indexed: false,\n\n        name: 'nonce',\n        type: 'uint256',\n      },\n      { indexed: false, name: 'success', type: 'bool' },\n      {\n        indexed: false,\n\n        name: 'actualGasCost',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n\n        name: 'actualGasUsed',\n        type: 'uint256',\n      },\n    ],\n    name: 'UserOperationEvent',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n\n        name: 'userOpHash',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n\n        name: 'nonce',\n        type: 'uint256',\n      },\n    ],\n    name: 'UserOperationPrefundTooLow',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n\n        name: 'userOpHash',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n\n        name: 'nonce',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n\n        name: 'revertReason',\n        type: 'bytes',\n      },\n    ],\n    name: 'UserOperationRevertReason',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: false,\n\n        name: 'withdrawAddress',\n        type: 'address',\n      },\n      {\n        indexed: false,\n\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'Withdrawn',\n    type: 'event',\n  },\n  {\n    inputs: [{ name: 'unstakeDelaySec', type: 'uint32' }],\n    name: 'addStake',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [{ name: 'account', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { name: 'target', type: 'address' },\n      { name: 'data', type: 'bytes' },\n    ],\n    name: 'delegateAndRevert',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ name: 'account', type: 'address' }],\n    name: 'depositTo',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [{ name: '', type: 'address' }],\n    name: 'deposits',\n    outputs: [\n      { name: 'deposit', type: 'uint256' },\n      { name: 'staked', type: 'bool' },\n      { name: 'stake', type: 'uint112' },\n      { name: 'unstakeDelaySec', type: 'uint32' },\n      { name: 'withdrawTime', type: 'uint48' },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ name: 'account', type: 'address' }],\n    name: 'getDepositInfo',\n    outputs: [\n      {\n        components: [\n          { name: 'deposit', type: 'uint256' },\n          { name: 'staked', type: 'bool' },\n          { name: 'stake', type: 'uint112' },\n          { name: 'unstakeDelaySec', type: 'uint32' },\n          { name: 'withdrawTime', type: 'uint48' },\n        ],\n\n        name: 'info',\n        type: 'tuple',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { name: 'sender', type: 'address' },\n      { name: 'key', type: 'uint192' },\n    ],\n    name: 'getNonce',\n    outputs: [{ name: 'nonce', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ name: 'initCode', type: 'bytes' }],\n    name: 'getSenderAddress',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { name: 'sender', type: 'address' },\n          { name: 'nonce', type: 'uint256' },\n          { name: 'initCode', type: 'bytes' },\n          { name: 'callData', type: 'bytes' },\n          {\n            name: 'accountGasLimits',\n            type: 'bytes32',\n          },\n          {\n            name: 'preVerificationGas',\n            type: 'uint256',\n          },\n          { name: 'gasFees', type: 'bytes32' },\n          { name: 'paymasterAndData', type: 'bytes' },\n          { name: 'signature', type: 'bytes' },\n        ],\n\n        name: 'userOp',\n        type: 'tuple',\n      },\n    ],\n    name: 'getUserOpHash',\n    outputs: [{ name: '', type: 'bytes32' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            components: [\n              { name: 'sender', type: 'address' },\n              { name: 'nonce', type: 'uint256' },\n              { name: 'initCode', type: 'bytes' },\n              { name: 'callData', type: 'bytes' },\n              {\n                name: 'accountGasLimits',\n                type: 'bytes32',\n              },\n              {\n                name: 'preVerificationGas',\n                type: 'uint256',\n              },\n              { name: 'gasFees', type: 'bytes32' },\n              {\n                name: 'paymasterAndData',\n                type: 'bytes',\n              },\n              { name: 'signature', type: 'bytes' },\n            ],\n\n            name: 'userOps',\n            type: 'tuple[]',\n          },\n          {\n            name: 'aggregator',\n            type: 'address',\n          },\n          { name: 'signature', type: 'bytes' },\n        ],\n\n        name: 'opsPerAggregator',\n        type: 'tuple[]',\n      },\n      { name: 'beneficiary', type: 'address' },\n    ],\n    name: 'handleAggregatedOps',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { name: 'sender', type: 'address' },\n          { name: 'nonce', type: 'uint256' },\n          { name: 'initCode', type: 'bytes' },\n          { name: 'callData', type: 'bytes' },\n          {\n            name: 'accountGasLimits',\n            type: 'bytes32',\n          },\n          {\n            name: 'preVerificationGas',\n            type: 'uint256',\n          },\n          { name: 'gasFees', type: 'bytes32' },\n          { name: 'paymasterAndData', type: 'bytes' },\n          { name: 'signature', type: 'bytes' },\n        ],\n\n        name: 'ops',\n        type: 'tuple[]',\n      },\n      { name: 'beneficiary', type: 'address' },\n    ],\n    name: 'handleOps',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ name: 'key', type: 'uint192' }],\n    name: 'incrementNonce',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { name: 'callData', type: 'bytes' },\n      {\n        components: [\n          {\n            components: [\n              { name: 'sender', type: 'address' },\n              { name: 'nonce', type: 'uint256' },\n              {\n                name: 'verificationGasLimit',\n                type: 'uint256',\n              },\n              {\n                name: 'callGasLimit',\n                type: 'uint256',\n              },\n              {\n                name: 'paymasterVerificationGasLimit',\n                type: 'uint256',\n              },\n              {\n                name: 'paymasterPostOpGasLimit',\n                type: 'uint256',\n              },\n              {\n                name: 'preVerificationGas',\n                type: 'uint256',\n              },\n              { name: 'paymaster', type: 'address' },\n              {\n                name: 'maxFeePerGas',\n                type: 'uint256',\n              },\n              {\n                name: 'maxPriorityFeePerGas',\n                type: 'uint256',\n              },\n            ],\n\n            name: 'mUserOp',\n            type: 'tuple',\n          },\n          { name: 'userOpHash', type: 'bytes32' },\n          { name: 'prefund', type: 'uint256' },\n          { name: 'contextOffset', type: 'uint256' },\n          { name: 'preOpGas', type: 'uint256' },\n        ],\n\n        name: 'opInfo',\n        type: 'tuple',\n      },\n      { name: 'context', type: 'bytes' },\n    ],\n    name: 'innerHandleOp',\n    outputs: [{ name: 'actualGasCost', type: 'uint256' }],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { name: '', type: 'address' },\n      { name: '', type: 'uint192' },\n    ],\n    name: 'nonceSequenceNumber',\n    outputs: [{ name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ name: 'interfaceId', type: 'bytes4' }],\n    name: 'supportsInterface',\n    outputs: [{ name: '', type: 'bool' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'unlockStake',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'withdrawAddress',\n        type: 'address',\n      },\n    ],\n    name: 'withdrawStake',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'withdrawAddress',\n        type: 'address',\n      },\n      { name: 'withdrawAmount', type: 'uint256' },\n    ],\n    name: 'withdrawTo',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  { stateMutability: 'payable', type: 'receive' },\n] as const\n\nexport const entryPoint08Abi = [\n  { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },\n  {\n    inputs: [\n      { internalType: 'bool', name: 'success', type: 'bool' },\n      { internalType: 'bytes', name: 'ret', type: 'bytes' },\n    ],\n    name: 'DelegateAndRevert',\n    type: 'error',\n  },\n  {\n    inputs: [\n      { internalType: 'uint256', name: 'opIndex', type: 'uint256' },\n      { internalType: 'string', name: 'reason', type: 'string' },\n    ],\n    name: 'FailedOp',\n    type: 'error',\n  },\n  {\n    inputs: [\n      { internalType: 'uint256', name: 'opIndex', type: 'uint256' },\n      { internalType: 'string', name: 'reason', type: 'string' },\n      { internalType: 'bytes', name: 'inner', type: 'bytes' },\n    ],\n    name: 'FailedOpWithRevert',\n    type: 'error',\n  },\n  { inputs: [], name: 'InvalidShortString', type: 'error' },\n  {\n    inputs: [{ internalType: 'bytes', name: 'returnData', type: 'bytes' }],\n    name: 'PostOpReverted',\n    type: 'error',\n  },\n  { inputs: [], name: 'ReentrancyGuardReentrantCall', type: 'error' },\n  {\n    inputs: [{ internalType: 'address', name: 'sender', type: 'address' }],\n    name: 'SenderAddressResult',\n    type: 'error',\n  },\n  {\n    inputs: [{ internalType: 'address', name: 'aggregator', type: 'address' }],\n    name: 'SignatureValidationFailed',\n    type: 'error',\n  },\n  {\n    inputs: [{ internalType: 'string', name: 'str', type: 'string' }],\n    name: 'StringTooLong',\n    type: 'error',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'userOpHash',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'factory',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'paymaster',\n        type: 'address',\n      },\n    ],\n    name: 'AccountDeployed',\n    type: 'event',\n  },\n  { anonymous: false, inputs: [], name: 'BeforeExecution', type: 'event' },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'totalDeposit',\n        type: 'uint256',\n      },\n    ],\n    name: 'Deposited',\n    type: 'event',\n  },\n  { anonymous: false, inputs: [], name: 'EIP712DomainChanged', type: 'event' },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'userOpHash',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'nonce',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'revertReason',\n        type: 'bytes',\n      },\n    ],\n    name: 'PostOpRevertReason',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'aggregator',\n        type: 'address',\n      },\n    ],\n    name: 'SignatureAggregatorChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'totalStaked',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'unstakeDelaySec',\n        type: 'uint256',\n      },\n    ],\n    name: 'StakeLocked',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'withdrawTime',\n        type: 'uint256',\n      },\n    ],\n    name: 'StakeUnlocked',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'withdrawAddress',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'StakeWithdrawn',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'userOpHash',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'paymaster',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'nonce',\n        type: 'uint256',\n      },\n      { indexed: false, internalType: 'bool', name: 'success', type: 'bool' },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'actualGasCost',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'actualGasUsed',\n        type: 'uint256',\n      },\n    ],\n    name: 'UserOperationEvent',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'userOpHash',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'nonce',\n        type: 'uint256',\n      },\n    ],\n    name: 'UserOperationPrefundTooLow',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'userOpHash',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'nonce',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'revertReason',\n        type: 'bytes',\n      },\n    ],\n    name: 'UserOperationRevertReason',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'withdrawAddress',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'Withdrawn',\n    type: 'event',\n  },\n  {\n    inputs: [\n      { internalType: 'uint32', name: 'unstakeDelaySec', type: 'uint32' },\n    ],\n    name: 'addStake',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'target', type: 'address' },\n      { internalType: 'bytes', name: 'data', type: 'bytes' },\n    ],\n    name: 'delegateAndRevert',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],\n    name: 'depositTo',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'eip712Domain',\n    outputs: [\n      { internalType: 'bytes1', name: 'fields', type: 'bytes1' },\n      { internalType: 'string', name: 'name', type: 'string' },\n      { internalType: 'string', name: 'version', type: 'string' },\n      { internalType: 'uint256', name: 'chainId', type: 'uint256' },\n      { internalType: 'address', name: 'verifyingContract', type: 'address' },\n      { internalType: 'bytes32', name: 'salt', type: 'bytes32' },\n      { internalType: 'uint256[]', name: 'extensions', type: 'uint256[]' },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],\n    name: 'getDepositInfo',\n    outputs: [\n      {\n        components: [\n          { internalType: 'uint256', name: 'deposit', type: 'uint256' },\n          { internalType: 'bool', name: 'staked', type: 'bool' },\n          { internalType: 'uint112', name: 'stake', type: 'uint112' },\n          { internalType: 'uint32', name: 'unstakeDelaySec', type: 'uint32' },\n          { internalType: 'uint48', name: 'withdrawTime', type: 'uint48' },\n        ],\n        internalType: 'struct IStakeManager.DepositInfo',\n        name: 'info',\n        type: 'tuple',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getDomainSeparatorV4',\n    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: 'sender', type: 'address' },\n      { internalType: 'uint192', name: 'key', type: 'uint192' },\n    ],\n    name: 'getNonce',\n    outputs: [{ internalType: 'uint256', name: 'nonce', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getPackedUserOpTypeHash',\n    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'bytes', name: 'initCode', type: 'bytes' }],\n    name: 'getSenderAddress',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: 'address', name: 'sender', type: 'address' },\n          { internalType: 'uint256', name: 'nonce', type: 'uint256' },\n          { internalType: 'bytes', name: 'initCode', type: 'bytes' },\n          { internalType: 'bytes', name: 'callData', type: 'bytes' },\n          {\n            internalType: 'bytes32',\n            name: 'accountGasLimits',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint256',\n            name: 'preVerificationGas',\n            type: 'uint256',\n          },\n          { internalType: 'bytes32', name: 'gasFees', type: 'bytes32' },\n          { internalType: 'bytes', name: 'paymasterAndData', type: 'bytes' },\n          { internalType: 'bytes', name: 'signature', type: 'bytes' },\n        ],\n        internalType: 'struct PackedUserOperation',\n        name: 'userOp',\n        type: 'tuple',\n      },\n    ],\n    name: 'getUserOpHash',\n    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            components: [\n              { internalType: 'address', name: 'sender', type: 'address' },\n              { internalType: 'uint256', name: 'nonce', type: 'uint256' },\n              { internalType: 'bytes', name: 'initCode', type: 'bytes' },\n              { internalType: 'bytes', name: 'callData', type: 'bytes' },\n              {\n                internalType: 'bytes32',\n                name: 'accountGasLimits',\n                type: 'bytes32',\n              },\n              {\n                internalType: 'uint256',\n                name: 'preVerificationGas',\n                type: 'uint256',\n              },\n              { internalType: 'bytes32', name: 'gasFees', type: 'bytes32' },\n              {\n                internalType: 'bytes',\n                name: 'paymasterAndData',\n                type: 'bytes',\n              },\n              { internalType: 'bytes', name: 'signature', type: 'bytes' },\n            ],\n            internalType: 'struct PackedUserOperation[]',\n            name: 'userOps',\n            type: 'tuple[]',\n          },\n          {\n            internalType: 'contract IAggregator',\n            name: 'aggregator',\n            type: 'address',\n          },\n          { internalType: 'bytes', name: 'signature', type: 'bytes' },\n        ],\n        internalType: 'struct IEntryPoint.UserOpsPerAggregator[]',\n        name: 'opsPerAggregator',\n        type: 'tuple[]',\n      },\n      { internalType: 'address payable', name: 'beneficiary', type: 'address' },\n    ],\n    name: 'handleAggregatedOps',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: 'address', name: 'sender', type: 'address' },\n          { internalType: 'uint256', name: 'nonce', type: 'uint256' },\n          { internalType: 'bytes', name: 'initCode', type: 'bytes' },\n          { internalType: 'bytes', name: 'callData', type: 'bytes' },\n          {\n            internalType: 'bytes32',\n            name: 'accountGasLimits',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'uint256',\n            name: 'preVerificationGas',\n            type: 'uint256',\n          },\n          { internalType: 'bytes32', name: 'gasFees', type: 'bytes32' },\n          { internalType: 'bytes', name: 'paymasterAndData', type: 'bytes' },\n          { internalType: 'bytes', name: 'signature', type: 'bytes' },\n        ],\n        internalType: 'struct PackedUserOperation[]',\n        name: 'ops',\n        type: 'tuple[]',\n      },\n      { internalType: 'address payable', name: 'beneficiary', type: 'address' },\n    ],\n    name: 'handleOps',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint192', name: 'key', type: 'uint192' }],\n    name: 'incrementNonce',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'bytes', name: 'callData', type: 'bytes' },\n      {\n        components: [\n          {\n            components: [\n              { internalType: 'address', name: 'sender', type: 'address' },\n              { internalType: 'uint256', name: 'nonce', type: 'uint256' },\n              {\n                internalType: 'uint256',\n                name: 'verificationGasLimit',\n                type: 'uint256',\n              },\n              {\n                internalType: 'uint256',\n                name: 'callGasLimit',\n                type: 'uint256',\n              },\n              {\n                internalType: 'uint256',\n                name: 'paymasterVerificationGasLimit',\n                type: 'uint256',\n              },\n              {\n                internalType: 'uint256',\n                name: 'paymasterPostOpGasLimit',\n                type: 'uint256',\n              },\n              {\n                internalType: 'uint256',\n                name: 'preVerificationGas',\n                type: 'uint256',\n              },\n              { internalType: 'address', name: 'paymaster', type: 'address' },\n              {\n                internalType: 'uint256',\n                name: 'maxFeePerGas',\n                type: 'uint256',\n              },\n              {\n                internalType: 'uint256',\n                name: 'maxPriorityFeePerGas',\n                type: 'uint256',\n              },\n            ],\n            internalType: 'struct EntryPoint.MemoryUserOp',\n            name: 'mUserOp',\n            type: 'tuple',\n          },\n          { internalType: 'bytes32', name: 'userOpHash', type: 'bytes32' },\n          { internalType: 'uint256', name: 'prefund', type: 'uint256' },\n          { internalType: 'uint256', name: 'contextOffset', type: 'uint256' },\n          { internalType: 'uint256', name: 'preOpGas', type: 'uint256' },\n        ],\n        internalType: 'struct EntryPoint.UserOpInfo',\n        name: 'opInfo',\n        type: 'tuple',\n      },\n      { internalType: 'bytes', name: 'context', type: 'bytes' },\n    ],\n    name: 'innerHandleOp',\n    outputs: [\n      { internalType: 'uint256', name: 'actualGasCost', type: 'uint256' },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { internalType: 'address', name: '', type: 'address' },\n      { internalType: 'uint192', name: '', type: 'uint192' },\n    ],\n    name: 'nonceSequenceNumber',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'senderCreator',\n    outputs: [\n      { internalType: 'contract ISenderCreator', name: '', type: 'address' },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' }],\n    name: 'supportsInterface',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'unlockStake',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address payable',\n        name: 'withdrawAddress',\n        type: 'address',\n      },\n    ],\n    name: 'withdrawStake',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address payable',\n        name: 'withdrawAddress',\n        type: 'address',\n      },\n      { internalType: 'uint256', name: 'withdrawAmount', type: 'uint256' },\n    ],\n    name: 'withdrawTo',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  { stateMutability: 'payable', type: 'receive' },\n] as const\n","import type { Address } from 'abitype'\n\nimport { getTransactionCount } from '../actions/public/getTransactionCount.js'\nimport type { Client } from '../clients/createClient.js'\nimport type { MaybePromise } from '../types/utils.js'\nimport { LruMap } from './lru.js'\n\nexport type CreateNonceManagerParameters = {\n  source: NonceManagerSource\n}\n\ntype FunctionParameters = {\n  address: Address\n  chainId: number\n}\n\nexport type NonceManager = {\n  /** Get and increment a nonce. */\n  consume: (\n    parameters: FunctionParameters & { client: Client },\n  ) => Promise<number>\n  /** Increment a nonce. */\n  increment: (chainId: FunctionParameters) => void\n  /** Get a nonce. */\n  get: (chainId: FunctionParameters & { client: Client }) => Promise<number>\n  /** Reset a nonce. */\n  reset: (chainId: FunctionParameters) => void\n}\n\n/**\n * Creates a nonce manager for auto-incrementing transaction nonces.\n *\n * - Docs: https://viem.sh/docs/accounts/createNonceManager\n *\n * @example\n * ```ts\n * const nonceManager = createNonceManager({\n *   source: jsonRpc(),\n * })\n * ```\n */\nexport function createNonceManager(\n  parameters: CreateNonceManagerParameters,\n): NonceManager {\n  const { source } = parameters\n\n  const deltaMap = new Map()\n  const nonceMap = new LruMap<number>(8192)\n  const promiseMap = new Map<string, Promise<number>>()\n\n  const getKey = ({ address, chainId }: FunctionParameters) =>\n    `${address}.${chainId}`\n\n  return {\n    async consume({ address, chainId, client }) {\n      const key = getKey({ address, chainId })\n      const promise = this.get({ address, chainId, client })\n\n      this.increment({ address, chainId })\n      const nonce = await promise\n\n      await source.set({ address, chainId }, nonce)\n      nonceMap.set(key, nonce)\n\n      return nonce\n    },\n    async increment({ address, chainId }) {\n      const key = getKey({ address, chainId })\n      const delta = deltaMap.get(key) ?? 0\n      deltaMap.set(key, delta + 1)\n    },\n    async get({ address, chainId, client }) {\n      const key = getKey({ address, chainId })\n\n      let promise = promiseMap.get(key)\n      if (!promise) {\n        promise = (async () => {\n          try {\n            const nonce = await source.get({ address, chainId, client })\n            const previousNonce = nonceMap.get(key) ?? 0\n            if (previousNonce > 0 && nonce <= previousNonce)\n              return previousNonce + 1\n            nonceMap.delete(key)\n            return nonce\n          } finally {\n            this.reset({ address, chainId })\n          }\n        })()\n        promiseMap.set(key, promise)\n      }\n\n      const delta = deltaMap.get(key) ?? 0\n      return delta + (await promise)\n    },\n    reset({ address, chainId }) {\n      const key = getKey({ address, chainId })\n      deltaMap.delete(key)\n      promiseMap.delete(key)\n    },\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////\n// Sources\n\nexport type NonceManagerSource = {\n  /** Get a nonce. */\n  get(parameters: FunctionParameters & { client: Client }): MaybePromise<number>\n  /** Set a nonce. */\n  set(parameters: FunctionParameters, nonce: number): MaybePromise<void>\n}\n\n/** JSON-RPC source for a nonce manager. */\nexport function jsonRpc(): NonceManagerSource {\n  return {\n    async get(parameters) {\n      const { address, client } = parameters\n      return getTransactionCount(client, {\n        address,\n        blockTag: 'pending',\n      })\n    },\n    set() {},\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////\n// Default\n\n/** Default Nonce Manager with a JSON-RPC source. */\nexport const nonceManager = /*#__PURE__*/ createNonceManager({\n  source: jsonRpc(),\n})\n","import type { Address } from 'abitype'\nimport { erc6492MagicBytes } from '../../constants/bytes.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { encodeAbiParameters } from '../abi/encodeAbiParameters.js'\nimport { concatHex } from '../data/concat.js'\nimport { hexToBytes } from '../encoding/toBytes.js'\n\ntype To = 'bytes' | 'hex'\n\nexport type SerializeErc6492SignatureParameters<to extends To = 'hex'> = {\n  /** The ERC-4337 Account Factory address to use for counterfactual verification. */\n  address: Address\n  /** Calldata to pass to deploy account (if not deployed) for counterfactual verification. */\n  data: Hex\n  /** The original signature. */\n  signature: Hex\n  to?: to | To | undefined\n}\n\nexport type SerializeErc6492SignatureReturnType<to extends To = 'hex'> =\n  | (to extends 'hex' ? Hex : never)\n  | (to extends 'bytes' ? ByteArray : never)\n\nexport type SerializeErc6492SignatureErrorType = ErrorType\n\n/**\n * @description Serializes a ERC-6492 flavoured signature into hex format.\n *\n * @param signature ERC-6492 signature in object format.\n * @returns ERC-6492 signature in hex format.\n *\n * @example\n * serializeSignature({ address: '0x...', data: '0x...', signature: '0x...' })\n * // '0x000000000000000000000000cafebabecafebabecafebabecafebabecafebabe000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000004deadbeef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041a461f509887bd19e312c0c58467ce8ff8e300d3c1a90b608a760c5b80318eaf15fe57c96f9175d6cd4daad4663763baa7e78836e067d0163e9a2ccf2ff753f5b1b000000000000000000000000000000000000000000000000000000000000006492649264926492649264926492649264926492649264926492649264926492'\n */\nexport function serializeErc6492Signature<to extends To = 'hex'>(\n  parameters: SerializeErc6492SignatureParameters<to>,\n): SerializeErc6492SignatureReturnType<to> {\n  const { address, data, signature, to = 'hex' } = parameters\n  const signature_ = concatHex([\n    encodeAbiParameters(\n      [{ type: 'address' }, { type: 'bytes' }, { type: 'bytes' }],\n      [address, data, signature],\n    ),\n    erc6492MagicBytes,\n  ])\n\n  if (to === 'hex') return signature_ as SerializeErc6492SignatureReturnType<to>\n  return hexToBytes(signature_) as SerializeErc6492SignatureReturnType<to>\n}\n","export const erc6492MagicBytes =\n  '0x6492649264926492649264926492649264926492649264926492649264926492' as const\n\nexport const zeroHash =\n  '0x0000000000000000000000000000000000000000000000000000000000000000' as const\n","import { concat } from '../../../utils/data/concat.js'\nimport type { UserOperation } from '../../types/userOperation.js'\n\nexport function getInitCode(\n  userOperation: Pick<\n    UserOperation,\n    'authorization' | 'factory' | 'factoryData'\n  >,\n) {\n  const { authorization, factory, factoryData } = userOperation\n  if (\n    factory === '0x7702' ||\n    factory === '0x7702000000000000000000000000000000000000'\n  ) {\n    if (!authorization) return '0x7702000000000000000000000000000000000000'\n    const delegation = authorization.address\n    return concat([delegation, factoryData ?? '0x'])\n  }\n  if (!factory) return '0x'\n  return concat([factory, factoryData ?? '0x'])\n}\n","import { concat } from '../../../utils/data/concat.js'\nimport { pad } from '../../../utils/data/pad.js'\nimport { numberToHex } from '../../../utils/index.js'\nimport type {\n  PackedUserOperation,\n  UserOperation,\n} from '../../types/userOperation.js'\nimport { getInitCode } from './getInitCode.js'\n\nexport function toPackedUserOperation(\n  userOperation: UserOperation,\n): PackedUserOperation {\n  const {\n    callGasLimit,\n    callData,\n    maxPriorityFeePerGas,\n    maxFeePerGas,\n    paymaster,\n    paymasterData,\n    paymasterPostOpGasLimit,\n    paymasterVerificationGasLimit,\n    sender,\n    signature = '0x',\n    verificationGasLimit,\n  } = userOperation\n\n  const accountGasLimits = concat([\n    pad(numberToHex(verificationGasLimit || 0n), { size: 16 }),\n    pad(numberToHex(callGasLimit || 0n), { size: 16 }),\n  ])\n  const initCode = getInitCode(userOperation)\n  const gasFees = concat([\n    pad(numberToHex(maxPriorityFeePerGas || 0n), { size: 16 }),\n    pad(numberToHex(maxFeePerGas || 0n), { size: 16 }),\n  ])\n  const nonce = userOperation.nonce ?? 0n\n  const paymasterAndData = paymaster\n    ? concat([\n        paymaster,\n        pad(numberToHex(paymasterVerificationGasLimit || 0n), {\n          size: 16,\n        }),\n        pad(numberToHex(paymasterPostOpGasLimit || 0n), {\n          size: 16,\n        }),\n        paymasterData || '0x',\n      ])\n    : '0x'\n  const preVerificationGas = userOperation.preVerificationGas ?? 0n\n\n  return {\n    accountGasLimits,\n    callData,\n    initCode,\n    gasFees,\n    nonce,\n    paymasterAndData,\n    preVerificationGas,\n    sender,\n    signature,\n  }\n}\n","import type { Address } from 'abitype'\n\nimport type { TypedDataDefinition } from '../../../types/typedData.js'\nimport type { UserOperation } from '../../types/userOperation.js'\nimport { toPackedUserOperation } from './toPackedUserOperation.js'\n\nexport type GetUserOperationTypedDataParameters = {\n  chainId: number\n  entryPointAddress: Address\n  userOperation: UserOperation<'0.8'>\n}\n\nexport type GetUserOperationTypedDataReturnType = TypedDataDefinition<\n  typeof types,\n  'PackedUserOperation'\n>\n\nconst types = {\n  PackedUserOperation: [\n    { type: 'address', name: 'sender' },\n    { type: 'uint256', name: 'nonce' },\n    { type: 'bytes', name: 'initCode' },\n    { type: 'bytes', name: 'callData' },\n    { type: 'bytes32', name: 'accountGasLimits' },\n    { type: 'uint256', name: 'preVerificationGas' },\n    { type: 'bytes32', name: 'gasFees' },\n    { type: 'bytes', name: 'paymasterAndData' },\n  ],\n} as const\n\nexport function getUserOperationTypedData(\n  parameters: GetUserOperationTypedDataParameters,\n): GetUserOperationTypedDataReturnType {\n  const { chainId, entryPointAddress, userOperation } = parameters\n\n  const packedUserOp = toPackedUserOperation(userOperation)\n\n  return {\n    types,\n    primaryType: 'PackedUserOperation',\n    domain: {\n      name: 'ERC4337',\n      version: '1',\n      chainId,\n      verifyingContract: entryPointAddress,\n    },\n    message: packedUserOp,\n  }\n}\n","import type { Address } from 'abitype'\n\nimport type { Hash, Hex } from '../../../types/misc.js'\nimport { encodeAbiParameters } from '../../../utils/abi/encodeAbiParameters.js'\nimport { keccak256 } from '../../../utils/hash/keccak256.js'\nimport { hashTypedData } from '../../../utils/signature/hashTypedData.js'\nimport type { EntryPointVersion } from '../../types/entryPointVersion.js'\nimport type { UserOperation } from '../../types/userOperation.js'\nimport { getInitCode } from './getInitCode.js'\nimport { getUserOperationTypedData } from './getUserOperationTypedData.js'\nimport { toPackedUserOperation } from './toPackedUserOperation.js'\n\nexport type GetUserOperationHashParameters<\n  entryPointVersion extends EntryPointVersion = EntryPointVersion,\n> = {\n  chainId: number\n  entryPointAddress: Address\n  entryPointVersion: entryPointVersion | EntryPointVersion\n  userOperation: UserOperation<entryPointVersion>\n}\n\nexport type GetUserOperationHashReturnType = Hash\n\nexport function getUserOperationHash<\n  entryPointVersion extends EntryPointVersion,\n>(\n  parameters: GetUserOperationHashParameters<entryPointVersion>,\n): GetUserOperationHashReturnType {\n  const { chainId, entryPointAddress, entryPointVersion } = parameters\n  const userOperation = parameters.userOperation as UserOperation\n  const {\n    authorization,\n    callData = '0x',\n    callGasLimit,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    paymasterAndData = '0x',\n    preVerificationGas,\n    sender,\n    verificationGasLimit,\n  } = userOperation\n\n  if (entryPointVersion === '0.8')\n    return hashTypedData(\n      getUserOperationTypedData({\n        chainId,\n        entryPointAddress,\n        userOperation,\n      }),\n    )\n\n  const packedUserOp = (() => {\n    if (entryPointVersion === '0.6') {\n      const factory = userOperation.initCode?.slice(0, 42) as Hex\n      const factoryData = userOperation.initCode?.slice(42) as Hex | undefined\n      const initCode = getInitCode({\n        authorization,\n        factory,\n        factoryData,\n      })\n      return encodeAbiParameters(\n        [\n          { type: 'address' },\n          { type: 'uint256' },\n          { type: 'bytes32' },\n          { type: 'bytes32' },\n          { type: 'uint256' },\n          { type: 'uint256' },\n          { type: 'uint256' },\n          { type: 'uint256' },\n          { type: 'uint256' },\n          { type: 'bytes32' },\n        ],\n        [\n          sender,\n          nonce,\n          keccak256(initCode),\n          keccak256(callData),\n          callGasLimit,\n          verificationGasLimit,\n          preVerificationGas,\n          maxFeePerGas,\n          maxPriorityFeePerGas,\n          keccak256(paymasterAndData),\n        ],\n      )\n    }\n\n    if (entryPointVersion === '0.7') {\n      const packedUserOp = toPackedUserOperation(userOperation)\n      return encodeAbiParameters(\n        [\n          { type: 'address' },\n          { type: 'uint256' },\n          { type: 'bytes32' },\n          { type: 'bytes32' },\n          { type: 'bytes32' },\n          { type: 'uint256' },\n          { type: 'bytes32' },\n          { type: 'bytes32' },\n        ],\n        [\n          packedUserOp.sender,\n          packedUserOp.nonce,\n          keccak256(packedUserOp.initCode),\n          keccak256(packedUserOp.callData),\n          packedUserOp.accountGasLimits,\n          packedUserOp.preVerificationGas,\n          packedUserOp.gasFees,\n          keccak256(packedUserOp.paymasterAndData),\n        ],\n      )\n    }\n\n    throw new Error(`entryPointVersion \"${entryPointVersion}\" not supported.`)\n  })()\n\n  return keccak256(\n    encodeAbiParameters(\n      [{ type: 'bytes32' }, { type: 'address' }, { type: 'uint256' }],\n      [keccak256(packedUserOp), entryPointAddress, BigInt(chainId)],\n    ),\n  )\n}\n",null,"export const entryPoint06Address =\n  '0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789' as const\nexport const entryPoint07Address =\n  '0x0000000071727De22E5E9d8BAf0edAc6f37da032' as const\nexport const entryPoint08Address =\n  '0x4337084D9E255Ff0702461CF8895CE9E3b5Ff108' as const\n","import { type Abi, parseAbi } from 'abitype'\n\nimport { getCode } from '../../actions/public/getCode.js'\nimport { readContract } from '../../actions/public/readContract.js'\nimport type { Prettify } from '../../types/utils.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { createNonceManager } from '../../utils/nonceManager.js'\nimport { serializeErc6492Signature } from '../../utils/signature/serializeErc6492Signature.js'\nimport type { EntryPointVersion } from '../types/entryPointVersion.js'\nimport type { SmartAccount, SmartAccountImplementation } from './types.js'\n\nexport type ToSmartAccountParameters<\n  entryPointAbi extends Abi | readonly unknown[] = Abi,\n  entryPointVersion extends EntryPointVersion = EntryPointVersion,\n  extend extends object = object,\n> = SmartAccountImplementation<entryPointAbi, entryPointVersion, extend>\n\nexport type ToSmartAccountReturnType<\n  implementation extends\n    SmartAccountImplementation = SmartAccountImplementation,\n> = Prettify<SmartAccount<implementation>>\n\n/**\n * @description Creates a Smart Account with a provided account implementation.\n *\n * @param parameters - {@link ToSmartAccountParameters}\n * @returns A Smart Account. {@link ToSmartAccountReturnType}\n */\nexport async function toSmartAccount<\n  implementation extends SmartAccountImplementation,\n>(\n  implementation: implementation,\n): Promise<ToSmartAccountReturnType<implementation>> {\n  const {\n    extend,\n    nonceKeyManager = createNonceManager({\n      source: {\n        get() {\n          return Date.now()\n        },\n        set() {},\n      },\n    }),\n    ...rest\n  } = implementation\n\n  let deployed = false\n\n  const address = await implementation.getAddress()\n\n  return {\n    ...extend,\n    ...rest,\n    address,\n    async getFactoryArgs() {\n      if ('isDeployed' in this && (await this.isDeployed()))\n        return { factory: undefined, factoryData: undefined }\n      return implementation.getFactoryArgs()\n    },\n    async getNonce(parameters) {\n      const key =\n        parameters?.key ??\n        BigInt(\n          await nonceKeyManager.consume({\n            address,\n            chainId: implementation.client.chain!.id!,\n            client: implementation.client,\n          }),\n        )\n\n      if (implementation.getNonce)\n        return await implementation.getNonce({ ...parameters, key })\n\n      const nonce = await readContract(implementation.client, {\n        abi: parseAbi([\n          'function getNonce(address, uint192) pure returns (uint256)',\n        ]),\n        address: implementation.entryPoint.address,\n        functionName: 'getNonce',\n        args: [address, key],\n      })\n      return nonce\n    },\n    async isDeployed() {\n      if (deployed) return true\n      const code = await getAction(\n        implementation.client,\n        getCode,\n        'getCode',\n      )({\n        address,\n      })\n      deployed = Boolean(code)\n      return deployed\n    },\n    ...(implementation.sign\n      ? {\n          async sign(parameters) {\n            const [{ factory, factoryData }, signature] = await Promise.all([\n              this.getFactoryArgs(),\n              implementation.sign!(parameters),\n            ])\n            if (factory && factoryData)\n              return serializeErc6492Signature({\n                address: factory,\n                data: factoryData,\n                signature,\n              })\n            return signature\n          },\n        }\n      : {}),\n    async signMessage(parameters) {\n      const [{ factory, factoryData }, signature] = await Promise.all([\n        this.getFactoryArgs(),\n        implementation.signMessage(parameters),\n      ])\n      if (factory && factoryData && factory !== '0x7702')\n        return serializeErc6492Signature({\n          address: factory,\n          data: factoryData,\n          signature,\n        })\n      return signature\n    },\n    async signTypedData(parameters) {\n      const [{ factory, factoryData }, signature] = await Promise.all([\n        this.getFactoryArgs(),\n        implementation.signTypedData(parameters),\n      ])\n      if (factory && factoryData && factory !== '0x7702')\n        return serializeErc6492Signature({\n          address: factory,\n          data: factoryData,\n          signature,\n        })\n      return signature\n    },\n    type: 'smart',\n  } as ToSmartAccountReturnType<implementation>\n}\n","import { secp256k1 } from '@noble/curves/secp256k1'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex, Signature } from '../../types/misc.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type ParseSignatureErrorType = NumberToHexErrorType | ErrorType\n\n/**\n * @description Parses a hex formatted signature into a structured signature.\n *\n * @param signatureHex Signature in hex format.\n * @returns The structured signature.\n *\n * @example\n * parseSignature('0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c')\n * // { r: '0x...', s: '0x...', v: 28n }\n */\nexport function parseSignature(signatureHex: Hex) {\n  const { r, s } = secp256k1.Signature.fromCompact(signatureHex.slice(2, 130))\n  const yParityOrV = Number(`0x${signatureHex.slice(130)}`)\n  const [v, yParity] = (() => {\n    if (yParityOrV === 0 || yParityOrV === 1) return [undefined, yParityOrV]\n    if (yParityOrV === 27) return [BigInt(yParityOrV), 0]\n    if (yParityOrV === 28) return [BigInt(yParityOrV), 1]\n    throw new Error('Invalid yParityOrV value')\n  })()\n\n  if (typeof v !== 'undefined')\n    return {\n      r: numberToHex(r, { size: 32 }),\n      s: numberToHex(s, { size: 32 }),\n      v,\n      yParity,\n    } satisfies Signature\n  return {\n    r: numberToHex(r, { size: 32 }),\n    s: numberToHex(s, { size: 32 }),\n    yParity,\n  } satisfies Signature\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,"function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`positive integer expected, not ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`boolean expected, not ${b}`);\n}\n\n// copied from utils\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(h: Hash) {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(h.outputLen);\n  number(h.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word: number, shift: number) =>\n  (word << shift) | ((word >>> (32 - shift)) >>> 0);\n\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word: number) =>\n  ((word << 24) & 0xff000000) |\n  ((word << 8) & 0xff0000) |\n  ((word >>> 8) & 0xff00) |\n  ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n: number) => n : (n: number) => byteSwap(n);\n\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr: Uint32Array) {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n}\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Choice: a ? b : c\nexport const Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nexport const Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport abstract class HashMD<T extends HashMD<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in\n    // current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends HashMD<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = SHA256_IV[0] | 0;\n  B = SHA256_IV[1] | 0;\n  C = SHA256_IV[2] | 0;\n  D = SHA256_IV[3] | 0;\n  E = SHA256_IV[4] | 0;\n  F = SHA256_IV[5] | 0;\n  G = SHA256_IV[6] | 0;\n  H = SHA256_IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n"],"names":["createJSONStorage","getStorage","options","storage","e","persistStorage","getItem","name","_a","parse","str2","JSON","undefined","reviver","str","Promise","then","setItem","newValue","stringify","replacer","removeItem","toThenable","fn","input","result","onFulfilled","catch","_onRejected","this","_onFulfilled","onRejected","persist","persistImpl","config","baseOptions","set","get","api","_objectSpread","localStorage","partialize","state","version","merge","persistedState","currentState","hasHydrated","hydrationListeners","Set","finishHydrationListeners","console","warn","concat","arguments","savedSetState","setState","replace","configResult","stateFromStorage","getInitialState","hydrate","_b","forEach","cb","_a2","postRehydrationCallback","onRehydrateStorage","call","bind","deserializedStorageValue","migrate","migration","error","migrationResult","migrated","migratedState","setOptions","newOptions","clearStorage","getOptions","rehydrate","onHydrate","add","delete","onFinishHydration","skipHydration","createStoreImpl","createState","listeners","partial","nextState","Object","is","previousState","assign","listener","getState","initialState","subscribe","createStore","VERSION","NAME","sdkstore","chains","keys","account","subAccount","spendPermissions","createConfigSlice","subAccountConfig","actions","subAccounts","address","clear","subAccountsConfig","key","value","store","loadTelemetryScript","resolve","reject","window","ClientAnalytics","script","document","createElement","textContent","type","head","appendChild","initCCA","removeChild","deviceId","_c","crypto","randomUUID","init","identify","PlatformName","isProd","amplitudeApiKey","platform","web","projectName","showDebugLogging","apiEndpoint","factoryAddress","spendPermissionManagerAddress","abi","inputs","stateMutability","anonymous","indexed","outputs","components","factoryAbi","standardErrorCodes","invalidInput","resourceNotFound","resourceUnavailable","transactionRejected","methodNotSupported","limitExceeded","invalidRequest","methodNotFound","invalidParams","internal","userRejectedRequest","unauthorized","unsupportedMethod","disconnected","chainDisconnected","unsupportedChain","errorValues","standard","message","FALLBACK_MESSAGE","getMessageFromCode","code","fallbackMessage","length","Number","isInteger","codeString","toString","hasKey","isJsonRpcServerError","serialize","shouldIncludeStack","serialized","Array","isArray","isValidCode","_error","data","originalError","assignOriginalError","hasStringProperty","stack","obj","prototype","hasOwnProperty","prop","standardErrors","rpc","arg","getEthJsonRpcError","server","opts","Error","provider","getEthProviderError","custom","EthereumProviderError","parseOpts","EthereumRpcError","constructor","isValidEthProviderCode","isActionableHttpRequestError","errorObject","isViemError","assertPresence","assertArrayPresence","checkCrossOriginOpenerPolicy","getCrossOriginOpenerPolicy","createCoopChecker","crossOriginOpenerPolicy","url","location","origin","pathname","response","fetch","method","ok","status","headers","validateSubAccount","toAccount","fetchRPCRequest","request","rpcUrl","requestBody","jsonrpc","id","res","body","mode","json","getCoinbaseInjectedProvider","_ref","metadata","preference","appName","appLogoUrl","appChainIds","extension","globalThis","coinbaseWalletExtension","setAppInfo","ethereum","top","getInjectedEthereum","isCoinbaseBrowser","CB_KEYS_URL","CB_WALLET_RPC_URL","WALLETLINK_URL","ComponentType","ActionType","AnalyticsEventImportance","logEvent","event","importance","sdkVersion","appOrigin","appPreferredSigner","_d","logSnackbarShown","snackbarContext","action","render","componentType","modal","high","logSnackbarActionClicked","_ref2","snackbarAction","click","button","injectCssReset","styleEl","createTextNode","documentElement","getLocation","frameElement","_","isInIFrame","isDarkMode","matchMedia","matches","Snackbar","items","Map","nextItemKey","root","darkMode","attach","el","className","presentItem","itemProps","h","SnackbarContainer","from","entries","map","SnackbarInstance","props","class","clsx","children","autoExpand","menuItems","hidden","setHidden","useState","expanded","setExpanded","useEffect","timers","setTimeout","clearTimeout","onClick","toggleExpanded","src","width","height","viewBox","fill","xmlns","cx","cy","r","title","i","isRed","svgWidth","svgHeight","defaultFillRule","defaultClipRule","d","path","info","RETRY_SVG_PATH","WalletLinkRelayUI","attached","snackbar","container","showConnecting","snackbarProps","isUnlinkedErrorState","onResetConnection","onCancel","RETRY_BUTTON","openPopup","left","innerWidth","screenX","innerHeight","screenY","tryOpenPopup","popupId","popup","open","focus","params","sdkName","coop","searchParams","has","append","appendAppInfoQueryParams","sb","initSnackbar","Communicator","postMessage","waitForPopupLoaded","postRequestAndWaitForResponse","responsePromise","onMessage","requestId","predicate","removeEventListener","addEventListener","disconnect","closed","close","_ref3","unknown","_ref4","_ref5","URL","isErrorResponse","errorMessage","serializeError","errorCode","match","getErrorObject","docUrl","href","ProviderEventEmitter","EventEmitter","ScopedLocalStorage","scope","module","storeObject","item","loadObject","scopedKey","prefix","keysToRemove","startsWith","push","clearAll","HexString","BigIntString","IntNumber","num","Math","floor","INT_STRING_REGEX","HEXADECIMAL_STRING_REGEX","randomBytesHex","uint8ArrayToHex","getRandomValues","Uint8Array","b","padStart","join","hexStringToUint8Array","hexString","byte","parseInt","hexStringFromBuffer","buf","includePrefix","hex","encodeToHexString","ensureBuffer","bigIntStringFromBigInt","bi","hexStringFromNumber","BigInt","has0xPrefix","strip0x","slice","prepend0x","isHexString","s","toLowerCase","test","ensureHexString","String","ensureEvenLengthHexString","ensureAddressString","Buffer","isBuffer","ensureIntNumber","ensureBigInt","val","constructor_","EUCLID","isBigNumber","ensureParsedJSONObject","correlationIdsStore","correlationIds","correlationId","newMap","parseErrorMessageFromAny","errorOrAny","AccountNotFoundError","BaseError","docsPath","super","docsSlug","AccountNotDeployedError","cause","metaMessages","defineProperty","ExecutionRevertedError","_message$replace","reason","FailedToSendToBeneficiaryError","GasValuesOverflowError","filter","Boolean","HandleOpsOutOfGasError","InitCodeFailedError","factory","factoryData","initCode","InitCodeMustCreateSenderError","_ref6","InitCodeMustReturnSenderError","_ref7","sender","InsufficientPrefundError","_ref8","InternalCallOnlyError","_ref9","InvalidAggregatorError","_ref0","InvalidAccountNonceError","_ref1","nonce","InvalidBeneficiaryError","_ref10","InvalidFieldsError","_ref11","InvalidPaymasterAndDataError","_ref12","paymasterAndData","PaymasterDepositTooLowError","_ref13","PaymasterFunctionRevertedError","_ref14","PaymasterNotDeployedError","_ref15","PaymasterRateLimitError","_ref16","PaymasterStakeTooLowError","_ref17","PaymasterPostOpFunctionRevertedError","_ref18","SenderAlreadyConstructedError","_ref19","SignatureCheckFailedError","_ref20","SmartAccountFunctionRevertedError","_ref21","UnsupportedSignatureAggregatorError","_ref22","UserOperationExpiredError","_ref23","UserOperationPaymasterExpiredError","_ref24","UserOperationSignatureError","_ref25","UserOperationPaymasterSignatureError","_ref26","UserOperationRejectedByEntryPointError","_ref27","UserOperationRejectedByPaymasterError","_ref28","UserOperationRejectedByOpCodeError","_ref29","UserOperationOutOfTimeRangeError","_ref30","UnknownBundlerError","_ref31","shortMessage","VerificationGasLimitExceededError","_ref32","VerificationGasLimitTooLowError","_ref33","UserOperationExecutionError","callData","callGasLimit","maxFeePerGas","maxPriorityFeePerGas","paymaster","paymasterData","paymasterPostOpGasLimit","paymasterVerificationGasLimit","preVerificationGas","signature","verificationGasLimit","prettyArgs","prettyPrint","formatGwei","UserOperationReceiptNotFoundError","hash","UserOperationNotFoundError","WaitForUserOperationReceiptTimeoutError","bundlerErrors","getUserOperationError","err","calls","args","_objectWithoutProperties","_excluded","details","walk","some","getBundlerError","revertData","_error$data","_match","_error$data2","getRevertData","contractCalls","parameters","functionName","to","compatContractCalls","decodeErrorResult","_unused","reduce","acc","ContractFunctionZeroDataError","ContractFunctionRevertedError","ContractFunctionExecutionError","contractAddress","getContractError","formatUserOperationRequest","rpcRequest","authorization","numberToHex","eip7702Auth","chainId","size","pad","yParity","async","getPaymasterData","client","_request$callGasLimit","_request$verification","_request$preVerificat","entryPointAddress","context","_await$client$request","rest","_excluded2","hexToBigInt","getPaymasterStubData","defaultParameters","prepareUserOperation","parameters_","_parameters$paymaster","account_","properties","stateOverride","parseAccount","bundlerClient","paymasterAddress","getAction","getPaymasterStubData_","getPaymasterData_","paymasterContext","fees","all","encodeCalls","call_","encodeFunctionData","includes","getFactoryArgs","entryPoint","_bundlerClient$userOp","userOperation","estimateFeesPerGas","_bundlerClient$client","client_","chain","getNonce","isDeployed","_parameters$contractA","_client$chain$id","_client$chain","executor","getChainId","getTransactionCount","blockTag","isAddressEqual","prepareAuthorization","chainId_","getChainId_","getStubSignature","isPaymasterPopulated","_await$getPaymasterSt","isFinal","sponsor","paymasterArgs","_account$userOperatio","estimateGas","gas","_request$paymasterPos","_request$paymasterVer","estimateUserOperationGas","rpcStateOverride","serializeStateOverride","_account$entryPoint","formatUserOperationGas","formatUserOperation","getUserOperationReceipt","receipt","dedupe","actualGasCost","actualGasUsed","logs","log","formatLog","formatTransactionReceipt","formatUserOperationReceipt","bundlerActions","getSupportedEntryPoints","getUserOperation","blockHash","blockNumber","transactionHash","sendUserOperation","_account$signUserOper","signUserOperation","rpcParameters","retryCount","waitForUserOperationReceipt","pollingInterval","timeout","count","observerId","uid","unobserve","observe","emit","done","unpoll","poll","emitOnBegin","interval","ChainClients","createClients","c","viemchain","defineChain","rpcUrls","default","http","nativeCurrency","symbol","_f","_e","decimals","_h","_g","decimal","createPublicClient","transport","_parameters$chain","createClient","extend","createBundlerClient","getClient","assertSubAccount","isAddress","isHex","getFormat","keyType","exportKeyToHexString","format","exported","subtle","exportKey","importKeyFromHexString","arrayBuffer","buffer","importKey","namedCurve","encryptContent","content","sharedSecret","plainText","iv","cipherText","encrypt","TextEncoder","encode","decryptContent","encryptedData","decrypt","TextDecoder","decode","isBytes","a","ArrayBuffer","isView","anumber","n","isSafeInteger","abytes","_len","lengths","_key","ahash","create","outputLen","blockLen","aexists","instance","checkFinished","destroyed","finished","clean","_len2","arrays","_key2","createView","arr","DataView","byteOffset","byteLength","rotr","word","shift","hasHexBuiltin","toHex","fromHex","hexes","bytesToHex","bytes","asciis","asciiToBase16","ch","hexToBytes","hl","al","array","ai","hi","n1","charCodeAt","n2","char","utf8ToBytes","toBytes","concatBytes","sum","Hash","createHasher","hashCons","hashC","msg","update","digest","tmp","randomBytes","bytesLength","Chi","Maj","HashMD","padOffset","isLE","pos","view","len","take","min","dataView","process","subarray","roundClean","digestInto","out","aoutput","setBigUint64","_32n","_u32_max","wh","wl","l","setUint32","oview","outLen","destroy","_cloneInto","clone","SHA256_IV","Uint32Array","SHA384_IV","SHA512_IV","U32_MASK64","fromBig","split","lst","le","Ah","Al","shrSH","_l","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","SHA256_K","SHA256_W","SHA256","A","B","C","D","E","F","G","H","offset","getUint32","W15","W2","s0","s1","T1","T2","K512","u64","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA384","sha256","sha512","sha384","HMAC","iHash","oHash","getPrototypeOf","hmac","_0n","_1n","_abool2","_abytes2","isBytes_","needsLen","ofLen","got","numberToHexUnpadded","hexToNumber","bytesToNumberBE","bytesToHex_","bytesToNumberLE","abytes_","reverse","numberToBytesBE","hexToBytes_","numberToBytesLE","ensureBytes","expectedLength","isPosBig","aInRange","max","inRange","bitLen","bitMask","_validateObject","object","fields","optFields","checkField","fieldName","expectedType","isOpt","current","k","v","memoized","WeakMap","computed","_2n","_3n","_4n","_5n","_7n","_8n","_9n","_16n","mod","invert","number","modulo","x","y","u","q","m","assertIsSquare","Fp","eql","sqr","sqrt3mod4","p1div4","ORDER","pow","sqrt5mod8","p5div8","mul","nv","sub","ONE","tonelliShanks","P","Q","S","Z","_Fp","Field","FpLegendre","cc","Q1div2","is0","M","t","R","ZERO","t_tmp","exponent","FpSqrt","Fp_","tn","c1","neg","c2","c3","c4","tv1","tv2","tv3","tv4","e1","e2","cmov","e3","sqrt9mod16","FIELD_FIELDS","FpPow","power","p","FpInvertBatch","nums","passZero","inverted","multipliedAcc","invertedAcc","inv","reduceRight","p1mod2","powered","yes","zero","no","nLength","nBitLength","_nBitLength","nByteLength","ceil","bitLenOrOpts","_nbitLength","_sqrt","allowedLengths","modFromBytes","sqrt","_opts","BITS","BYTES","sqrtP","f","freeze","MASK","isValid","isValidNot0","isOdd","lhs","rhs","div","sqrN","addN","subN","mulN","fromBytes","skipValidation","padded","scalar","invertBatch","getFieldBytesLength","fieldOrder","bitLength","getMinHashLength","negateCt","condition","negate","normalizeZ","points","invertedZs","fromAffine","toAffine","validateW","W","bits","calcWOpts","scalarBits","maxNumber","windows","windowSize","mask","shiftBy","calcOffsets","wOpts","wbits","nextN","offsetStart","abs","isZero","isNeg","isNegF","offsetF","validateMSMPoints","validateMSMScalars","scalars","field","pointPrecomputes","pointWindowSizes","getW","assert0","wNAF","Point","BASE","Fn","_unsafeLadder","elm","double","precomputeWindow","point","base","precomputes","wo","wNAFUnsafe","getPrecomputes","transform","comp","cached","unsafe","prev","createCache","hasCache","createField","order","validateField","divNearest","den","validateSigFormat","validateSigOpts","def","optsn","optName","abool","lowS","prehash","DERErr","DER","Err","_tlv","tag","dataLen","lenLen","first","lengthBytes","_int","toSig","int","tlv","seqBytes","seqLeftBytes","rBytes","rLeftBytes","sBytes","sLeftBytes","hexFromSig","sig","seq","_normFnElement","expected","weierstrassN","extraOpts","validated","CURVE","curveOpts","FpFnLE","_createCurveFields","cofactor","CURVE_ORDER","allowInfinityPoint","clearCofactor","isTorsionFree","endo","wrapPrivateKey","beta","basises","getWLengths","assertCompressionIsSupported","encodePoint","isCompressed","bx","pprefix","of","decodePoint","publicKey","publicKeyUncompressed","uncomp","tail","L","isValidXY","y2","weierstrassEquation","sqrtError","x2","x3","right","Gx","Gy","_4a3","_27b2","acoord","banZero","aprjpoint","other","splitEndoScalarN","basis","a1","b1","a2","b2","k1","k2","k1neg","k2neg","MAX_NUM","_splitEndoScalar","toAffineMemo","iz","X","Y","zz","assertValidMemo","finishEndo","endoBeta","k1p","k2p","assertValidity","precompute","isLazy","wnaf","multiply","hasEvenY","equals","X1","Y1","Z1","X2","Y2","Z2","U1","U2","b3","X3","Y3","Z3","t0","t1","t2","t3","t4","t5","subtract","fake","k1f","k2f","multiplyUnsafe","sc","p1","p2","mulEndoUnsafe","multiplyAndAddUnsafe","invertedZ","isSmallOrder","px","py","pz","toRawBytes","_setWindowSize","msm","fieldN","plength","slength","buckets","j","resI","sumI","pippenger","fromPrivateKey","privateKey","secretKey","publicKeyHasPrefix","ecdh","ecdhOpts","randomBytes_","randomBytesWeb","seed","isValidSecretKey","randomSecretKey","fieldLen","minLen","reduced","mapHashToField","getPublicKey","isProbPub","utils","isValidPublicKey","isValidPrivateKey","randomPrivateKey","normPrivateKeyToScalar","getSharedSecret","secretKeyA","publicKeyB","keygen","ecdsa","ecdsaOpts","bits2int","bits2int_modN","msgs","nobleHmac","fnBits","defaultSigOpts","extraEntropy","defaultSigOpts_format","isBiggerThanHalfOrder","validateRS","Signature","recovery","recid","validateSigLength","addRecoveryBit","recoverPublicKey","messageHash","FIELD_ORDER","rec","radj","ir","u1","u2","hasHighS","fromCompact","fromDER","normalizeS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","delta","ORDER_MASK","int2octets","validateMsgAndHash","sign","k2sig","h1int","seedArgs","kBytes","ik","normS","prepSig","drbg","hashLen","qByteLen","hmacFn","u8n","u8of","reset","reseed","gen","sl","concatBytes_","genUntil","pred","createHmacDrbg","verify","sg","isObj","derError","tryParsingSig","_weierstrass_legacy_opts_to_new","allowedPrivateKeyLengths","weierstrass","_ecdsa_legacy_opts_to_new","_ecdsa","ProjectivePoint","_ecdsa_new_output_to_legacy","createCurve","curveDef","defHash","p256_CURVE","p384_CURVE","p521_CURVE","Fp256","Fp384","Fp521","p256","p256n","_options$cause","docs","bigIntSuffix","space","assertSize","size_","Hex","givenSize","maxSize","hex_","dir","targetSize","encoder","_v","values","string","padRight","fromNumber","signed","value_","maxValue","MAX_SAFE_INTEGER","minValue","suffix","IntegerOutOfRangeError","stringValue","padLeft","fromString","start","end","strict","position","toBigInt","max_unsigned","validate","InvalidHexTypeError","InvalidHexValueError","assert","Errors","Json","SizeOverflowError","SliceOffsetOutOfBoundsError","SizeExceedsPaddingSizeError","charAt","toUpperCase","charCodeMap","charCodeToBase16","fromArray","internal_hex","index","nibbleLeft","nibbleRight","Bytes","InvalidBytesTypeError","BYTES_PER_ELEMENT","compressed","InvalidPrefixError","InvalidUncompressedPrefixError","InvalidError","InvalidCompressedPrefixError","InvalidSerializedSizeError","decoder","integerToCharacter","fromEntries","encoded","base64","replaceAll","sha256n","as","noble_sha256","getSignPayload","challenge","crossOrigin","extraClientData","flag","rpId","signCount","userVerification","authenticatorData","hostname","getAuthenticatorData","clientDataJSON","Base64","getClientDataJSON","clientDataJSONHash","challengeIndex","indexOf","typeIndex","userVerificationRequired","payload","maxUint256","recovered","MissingPropertiesError","Solidity","InvalidRError","InvalidSError","InvalidYParityError","isNaN","vToYParity","yParityToV","InvalidVError","promisifyRequest","oncomplete","onsuccess","onabort","onerror","dbName","storeName","indexedDB","onupgradeneeded","createObjectStore","dbp","txMode","callback","db","transaction","objectStore","defaultGetStoreFunc","defaultGetStore","ACTIVE_ID_KEY","del","put","createStorage","generateKeyPair","keypair","extractable","generateKey","publicKey_raw","PublicKey","WebCryptoP256","getKeypair","getAccount","kp","pubKey","getOrCreateKeypair","WebAuthnP256","signature_bytes","raw","webauthn","signMessage","hashMessage","signTypedData","hashTypedData","getCryptoKeyAccount","OWN_PRIVATE_KEY","storageKey","OWN_PUBLIC_KEY","PEER_PUBLIC_KEY","SCWKeyManager","ownPrivateKey","ownPublicKey","peerPublicKey","getOwnPublicKey","loadKeysIfNeeded","setPeerPublicKey","storeKey","newKeyPair","loadKey","deriveKey","public","deriveSharedSecret","BundleFailedError","statusCode","fallbackMagicIdentifier","fallbackTransactionErrorMagicIdentifier","getCallsStatus","_receipts$map","_await$getStatus","endsWith","trim","sliceHex","hashes","receipts","every","atomic","getStatus","gasUsed","receiptStatuses","waitForCallsStatus","retryDelay","throwOnFailure","promise","withResolvers","timer","withRetry","delay","WaitForCallsStatusTimeoutError","getSenderFromRequest","assertParamsChainId","injectRequestCapabilities","capabilities","modifiedRequest","requestCapabilities","initSubAccountConfig","enableAutoSubAccounts","owner","toOwnerAccount","addSubAccount","waitForCallsTransactionHash","createWalletSendCallsRequest","paymasterUrls","atomicRequired","paymasterService","makeDataSuffix","attribution","dappOrigin","auto","keccak256","dataSuffix","prependWithoutDuplicates","filtered","appendWithoutDuplicates","arrayBufferToBase64Url","base64String","btoa","fromCharCode","convertCredentialToJSON","signatureRaw","rawId","stringToBytes","asn1EncodeSignature","rLength","sLength","totalLength","InvalidAddressError","stringToHex","boolToHex","intMatch","integerRegex","_type","baseType","bytesMatch","bytesRegex","BytesSizeMismatchError","expectedSize","arrayMatch","arrayRegex","childType","concatHex","UnsupportedPackedAbiType","entryPoint06Abi","createNonceManager","source","deltaMap","nonceMap","LruMap","promiseMap","getKey","consume","increment","_deltaMap$get","_deltaMap$get2","_nonceMap$get","previousNonce","serializeErc6492Signature","signature_","encodeAbiParameters","getInitCode","delegation","toPackedUserOperation","_userOperation$nonce","_userOperation$preVer","accountGasLimits","gasFees","types","PackedUserOperation","getUserOperationHash","entryPointVersion","packedUserOp","primaryType","domain","verifyingContract","getUserOperationTypedData","_userOperation$initCo","_userOperation$initCo2","createSmartAccount","ownerIndex","implementation","nonceKeyManager","Date","now","deployed","getAddress","_parameters$key","readContract","parseAbi","getCode","toSmartAccount","decodeCalls","decodeFunctionData","target","wrapSignature","toReplaySafeHash","__rest","toWebAuthnSignature","CoinbaseSmartWalletMessage","signatureData","signatureHex","secp256k1","yParityOrV","parseSignature","AbiEncodingLengthMismatchError","givenLength","encodePacked","createSubAccountSigner","parentAddress","rawParams","sendCallsRequest","prepareCallsRequest","funding","autoApply","sources","prepareCallsResponse","signResponse","hexToString","signatureRequest","userOp","prepareCallsParams","typedData","newError","viemHttpErrorToProviderError","findOwnerIndex","initData","owners","findIndex","formatPublicKey","ownerCount","formatted","handleAddSubAccountOwner","ownerAccount","globalAccountRequest","globalAccount","accounts","find","decodeAbiParameters","selection","presentAddOwnerDialog","callsId","handleInsufficientBalanceError","errorData","globalAccountAddress","subAccountAddress","subAccountRequest","spendPermissionRequests","sourceAddress","token","amount","required","balance","requiredAmount","parseFundingOptions","userChoice","presentSubAccountFundingDialog","defaultPeriod","spendPermission","SpendPermission","spender","allowance","period","salt","extraData","createSpendPermissionMessage","random","spendPermissionBatch","SpendPermissionBatch","PermissionDetails","permissions","createSpendPermissionBatchMessage","transferCalls","erc20Abi","originalSendCallsParams","isEthSendTransactionParams","subAccountCallData","SCWSigner","communicator","keyManager","handshake","logHandshakeStarted","handshakeMessage","createRequestMessage","failure","decrypted","decryptResponseMessage","handleResponse","logHandshakeCompleted","logHandshakeError","logRequestStarted","_request","logRequestCompleted","logRequestError","capabilitiesToInject","capabilityName","requestHasCapability","sendRequestToPopup","shouldRequestUseSubAccountSigner","logSubAccountRequestStarted","sendRequestToSubAccountSigner","logSubAccountRequestCompleted","logSubAccountRequestError","_j","handleGetCapabilitiesRequest","handleSwitchChainRequest","cachedResponse","walletConnectAccounts","getCachedWalletConnectResponse","_k","_m","_o","assertFetchPermissionsRequest","completeRequest","accountFromStore","subAccountFromStore","fillMissingParamsForFetchPermissions","requestedChainId","_p","permission","sendEncryptedRequest","at","capabilityResponse","accounts_","cleanup","updateChain","popupResult","param","assertGetCapabilitiesParams","requestedAccount","filterChainIds","filterChainNumbers","capabilityKey","capabilityChainNumber","encrypted","timestamp","availableChains","nativeCurrencies","walletCapabilities","newAvailableChains","addSenderToRequest","logAddOwnerStarted","logAddOwnerCompleted","logAddOwnerError","logInsufficientBalanceErrorHandlingStarted","logInsufficientBalanceErrorHandlingCompleted","handlingError","logInsufficientBalanceErrorHandlingError","logWalletLinkConnectionConnectionFailed","measurement","LOCAL_STORAGE_ADDRESSES_KEY","WalletLinkCipher","secret","ivBytes","enc","encryptedResult","authTag","encryptedPlaintext","authTagBytes","encryptedPlaintextBytes","concatenatedBytes","algo","WalletLinkHTTP","linkAPIUrl","sessionId","sessionKey","credentials","auth","markUnseenEventsAsSeen","events","eventId","Authorization","fetchUnseenEvents","responseEvents","ConnectionState","WalletLinkWebSocket","setConnectionStateListener","connectionStateListener","setIncomingDataListener","incomingDataListener","WebSocketClass","WebSocket","webSocket","isDisconnecting","instanceId","instanceCounter","activeInstances","connect","CONNECTING","onclose","evt","clearWebSocket","readyState","OPEN","DISCONNECTED","onopen","CONNECTED","pendingData","sendData","onmessage","send","WalletLinkConnection","session","lastHeartbeatResponse","nextReqId","reconnectAttempts","isReconnecting","_connected","_linked","requestResolutions","handleSessionMetadataUpdated","handleDestroyed","handleAccountUpdated","handleWalletUsernameUpdated","handleAppVersionUpdated","JsonRpcUrl","handleChainUpdated","handler","__destroyed","resetAndReload","cipher","encryptedEthereumAddress","accountUpdated","handleMetadataUpdated","encryptedMetadataValue","decryptedValue","metadataUpdated","walletUsername","appVersion","encryptedChainId","encryptedJsonRpcUrl","jsonRpcUrl","chainUpdated","ws","createWebSocket","setupVisibilityChangeHandler","activeWsInstance","connected","heartbeatIntervalId","clearInterval","finally","reconnect","handleConnected","fetchUnseenEventsAPI","updateLastHeartbeat","setInterval","heartbeat","linked","onlineGuests","handleIncomingEvent","visibilityChangeHandler","reconnectWithFreshWebSocket","focusHandler","persisted","oldWs","makeRequest","onceLinked","linkedUpdated","setOnceLinked","decryptedData","handleWeb3ResponseMessage","checkUnseenEvents","publishEvent","unencryptedData","callWebhook","relaySource","HEARTBEAT_INTERVAL","reqId","timeoutId","race","RelayEventManager","_nextRequestId","callbacks","makeRequestId","idStr","exists","output","wrapConstructor","STORAGE_KEY_SESSION_ID","STORAGE_KEY_SESSION_SECRET","STORAGE_KEY_SESSION_LINKED","WalletLinkSession","save","load","persistLinked","RedirectDialog","present","RedirectDialogContent","onDismiss","buttonText","onButtonClick","theme","WLMobileRelayUI","redirectDialog","redirectToCoinbaseWallet","walletLinkUrl","anchorTag","rel","openCoinbaseWalletDeeplink","_options","WalletLinkRelay","chainCallbackParams","isMobileWeb","navigator","userAgent","isLinked","cachedAddresses","_session","addresses","wasConnectedViaStandalone","chainCallback","selectedAddress","accountsCallback","accountRequestCallbackIds","invokeCallback","ui","connection","relayEventManager","storedSession","reload","signEthereumTransaction","sendRequest","fromAddress","toAddress","weiValue","gasPriceInWei","gasLimit","shouldSubmit","signAndSubmitEthereumTransaction","submitEthereumTransaction","signedTransaction","getWalletLinkSession","hideSnackbarItem","cancel","publishWeb3RequestCanceledEvent","handleErrorResponse","publishWeb3RequestEvent","once","requestEthereumAccounts","watchAsset","image","addEthereumChain","iconUrls","blockExplorerUrls","chainName","switchEthereumChain","DEFAULT_CHAIN_ID_KEY","DEFAULT_JSON_RPC_URL","WalletLinkSigner","_relay","_addresses","_storage","initializeRelay","getSession","relay","_eth_requestAccounts","updateProviderInfo","originalChainId","chainIdNumber","isApproved","switchResponse","_setAddresses","newAddresses","ecRecover","personalSign","_eth_signTransaction","_eth_sendRawTransaction","_eth_sendTransaction","_ensureKnownAddress","addressString","addressStr","_prepareTransactionParams","tx","alloc","gasPrice","addPrefix","rawData","typedDataJson","eth_signTypedData_v1","eip712","hashForSignTypedDataLegacy","eth_signTypedData_v3","hashForSignTypedData_v3","eth_signTypedData_v4","hashForSignTypedData_v4","eth_signTypedData","SIGNER_TYPE_KEY","signerToSignerType","signer","fetchSignerType","handshakeRequest","walletlink","listenForWalletLinkSessionRequest","CoinbaseWalletProvider","keysUrl","isCoinbaseWallet","signerType","initSigner","logSignerLoadedFromStorage","logRequestResponded","checkErrorForInvalidRequestArgs","requestSignerSelection","storeSignerType","ephemeralSigner","enable","logSignerSelectionResponded","createSigner","DEFAULT_PREFERENCE","createCoinbaseWalletSDK","telemetry","validatePreferences","sdk","getProvider","createCoinbaseWalletProvider","addOwner","setToOwnerAccount","toSubAccountOwner"],"sourceRoot":""}