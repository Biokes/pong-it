"use strict";(self.webpackChunkpong_it_frontend=self.webpackChunkpong_it_frontend||[]).push([[7208],{87208:(e,t,n)=>{n.d(t,{coinbaseWallet:()=>h,safe:()=>w});var i=n(27051),a=n(53986),o=n(98677),c=n(38639),r=n(73696),s=n(39488),d=n(36657);const l=["chainId","withCapabilities"];function h(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return"3"===e.version||e.headlessMode?function(e){const t=!1;let a,l,u,v,w;return(0,o.U)(o=>({id:"coinbaseWalletSDK",name:"Coinbase Wallet",rdns:"com.coinbase.wallet",type:h.type,async connect(){let{chainId:e,withCapabilities:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{const i=await this.getProvider(),a=(await i.request({method:"eth_requestAccounts"})).map(e=>(0,r.b)(e));u||(u=this.onAccountsChanged.bind(this),i.on("accountsChanged",u)),v||(v=this.onChainChanged.bind(this),i.on("chainChanged",v)),w||(w=this.onDisconnect.bind(this),i.on("disconnect",w));let o=await this.getChainId();if(e&&o!==e){var n;const t=await this.switchChain({chainId:e}).catch(e=>{if(e.code===s.vx.code)throw e;return{id:o}});o=null!==(n=null===t||void 0===t?void 0:t.id)&&void 0!==n?n:o}return{accounts:t?a.map(e=>({address:e,capabilities:{}})):a,chainId:o}}catch(i){if(/(user closed modal|accounts received is empty|user denied account)/i.test(i.message))throw new s.vx(i);throw i}},async disconnect(){const e=await this.getProvider();u&&(e.removeListener("accountsChanged",u),u=void 0),v&&(e.removeListener("chainChanged",v),v=void 0),w&&(e.removeListener("disconnect",w),w=void 0),e.disconnect(),e.close()},async getAccounts(){const e=await this.getProvider();return(await e.request({method:"eth_accounts"})).map(e=>(0,r.b)(e))},async getChainId(){const e=await this.getProvider(),t=await e.request({method:"eth_chainId"});return Number(t)},async getProvider(){if(!l){var c;const r=await(async()=>{const{default:e}=await Promise.all([n.e(4208),n.e(3178),n.e(2128)]).then(n.t.bind(n,53178,19));return"function"!==typeof e&&"function"===typeof e.default?e.default:e})();a=new r((0,i.A)((0,i.A)({},e),{},{reloadOnDisconnect:t}));const s=null===(c=a.walletExtension)||void 0===c?void 0:c.getChainId(),d=o.chains.find(t=>e.chainId?t.id===e.chainId:t.id===s)||o.chains[0],h=e.chainId||(null===d||void 0===d?void 0:d.id),u=e.jsonRpcUrl||(null===d||void 0===d?void 0:d.rpcUrls.default.http[0]);l=a.makeWeb3Provider(u,h)}return l},async isAuthorized(){try{return!!(await this.getAccounts()).length}catch(e){return!1}},async switchChain(e){let{addEthereumChainParameter:t,chainId:n}=e;const i=o.chains.find(e=>e.id===n);if(!i)throw new s.ch(new c.nk);const a=await this.getProvider();try{return await a.request({method:"wallet_switchEthereumChain",params:[{chainId:(0,d.cK)(i.id)}]}),i}catch(g){if(4902===g.code)try{var r,l,h,u,v,w,m;let e,o;e=null!==t&&void 0!==t&&t.blockExplorerUrls?t.blockExplorerUrls:null!==(r=i.blockExplorers)&&void 0!==r&&r.default.url?[null===(l=i.blockExplorers)||void 0===l?void 0:l.default.url]:[],o=null!==t&&void 0!==t&&null!==(h=t.rpcUrls)&&void 0!==h&&h.length?t.rpcUrls:[null!==(u=null===(v=i.rpcUrls.default)||void 0===v?void 0:v.http[0])&&void 0!==u?u:""];const c={blockExplorerUrls:e,chainId:(0,d.cK)(n),chainName:null!==(w=null===t||void 0===t?void 0:t.chainName)&&void 0!==w?w:i.name,iconUrls:null===t||void 0===t?void 0:t.iconUrls,nativeCurrency:null!==(m=null===t||void 0===t?void 0:t.nativeCurrency)&&void 0!==m?m:i.nativeCurrency,rpcUrls:o};return await a.request({method:"wallet_addEthereumChain",params:[c]}),i}catch(g){throw new s.vx(g)}throw new s.ch(g)}},onAccountsChanged(e){0===e.length?this.onDisconnect():o.emitter.emit("change",{accounts:e.map(e=>(0,r.b)(e))})},onChainChanged(e){const t=Number(e);o.emitter.emit("change",{chainId:t})},async onDisconnect(e){o.emitter.emit("disconnect");const t=await this.getProvider();u&&(t.removeListener("accountsChanged",u),u=void 0),v&&(t.removeListener("chainChanged",v),v=void 0),w&&(t.removeListener("disconnect",w),w=void 0)}}))}(e):function(e){let t,u,v,w;return(0,o.U)(o=>({id:"coinbaseWalletSDK",name:"Coinbase Wallet",rdns:"com.coinbase.wallet",type:h.type,async connect(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{chainId:t,withCapabilities:n}=e,i=(0,a.A)(e,l);try{const e=await this.getProvider(),a=(await e.request({method:"eth_requestAccounts",params:"instantOnboarding"in i&&i.instantOnboarding?[{onboarding:"instant"}]:[]})).map(e=>(0,r.b)(e));u||(u=this.onAccountsChanged.bind(this),e.on("accountsChanged",u)),v||(v=this.onChainChanged.bind(this),e.on("chainChanged",v)),w||(w=this.onDisconnect.bind(this),e.on("disconnect",w));let c=await this.getChainId();if(t&&c!==t){var o;const e=await this.switchChain({chainId:t}).catch(e=>{if(e.code===s.vx.code)throw e;return{id:c}});c=null!==(o=null===e||void 0===e?void 0:e.id)&&void 0!==o?o:c}return{accounts:n?a.map(e=>({address:e,capabilities:{}})):a,chainId:c}}catch(c){if(/(user closed modal|accounts received is empty|user denied account|request rejected)/i.test(c.message))throw new s.vx(c);throw c}},async disconnect(){var e;const t=await this.getProvider();u&&(t.removeListener("accountsChanged",u),u=void 0),v&&(t.removeListener("chainChanged",v),v=void 0),w&&(t.removeListener("disconnect",w),w=void 0),t.disconnect(),null===(e=t.close)||void 0===e||e.call(t)},async getAccounts(){const e=await this.getProvider();return(await e.request({method:"eth_accounts"})).map(e=>(0,r.b)(e))},async getChainId(){const e=await this.getProvider(),t=await e.request({method:"eth_chainId"});return Number(t)},async getProvider(){if(!t){const r="string"===typeof e.preference?{options:e.preference}:(0,i.A)((0,i.A)({},e.preference),{},{options:null!==(a=null===(c=e.preference)||void 0===c?void 0:c.options)&&void 0!==a?a:"all"}),{createCoinbaseWalletSDK:s}=await Promise.all([n.e(8836),n.e(5710),n.e(4208),n.e(5591)]).then(n.bind(n,6902)),d=s((0,i.A)((0,i.A)({},e),{},{appChainIds:o.chains.map(e=>e.id),preference:r}));t=d.getProvider()}var a,c;return t},async isAuthorized(){try{return!!(await this.getAccounts()).length}catch(e){return!1}},async switchChain(e){let{addEthereumChainParameter:t,chainId:n}=e;const i=o.chains.find(e=>e.id===n);if(!i)throw new s.ch(new c.nk);const a=await this.getProvider();try{return await a.request({method:"wallet_switchEthereumChain",params:[{chainId:(0,d.cK)(i.id)}]}),i}catch(g){if(4902===g.code)try{var r,l,h,u,v,w,m;let e,o;e=null!==t&&void 0!==t&&t.blockExplorerUrls?t.blockExplorerUrls:null!==(r=i.blockExplorers)&&void 0!==r&&r.default.url?[null===(l=i.blockExplorers)||void 0===l?void 0:l.default.url]:[],o=null!==t&&void 0!==t&&null!==(h=t.rpcUrls)&&void 0!==h&&h.length?t.rpcUrls:[null!==(u=null===(v=i.rpcUrls.default)||void 0===v?void 0:v.http[0])&&void 0!==u?u:""];const c={blockExplorerUrls:e,chainId:(0,d.cK)(n),chainName:null!==(w=null===t||void 0===t?void 0:t.chainName)&&void 0!==w?w:i.name,iconUrls:null===t||void 0===t?void 0:t.iconUrls,nativeCurrency:null!==(m=null===t||void 0===t?void 0:t.nativeCurrency)&&void 0!==m?m:i.nativeCurrency,rpcUrls:o};return await a.request({method:"wallet_addEthereumChain",params:[c]}),i}catch(g){throw new s.vx(g)}throw new s.ch(g)}},onAccountsChanged(e){0===e.length?this.onDisconnect():o.emitter.emit("change",{accounts:e.map(e=>(0,r.b)(e))})},onChainChanged(e){const t=Number(e);o.emitter.emit("change",{chainId:t})},async onDisconnect(e){o.emitter.emit("disconnect");const t=await this.getProvider();u&&(t.removeListener("accountsChanged",u),u=void 0),v&&(t.removeListener("chainChanged",v),v=void 0),w&&(t.removeListener("disconnect",w),w=void 0)}}))}(e)}h.type="coinbaseWallet";var u=n(25146),v=n(55312);function w(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{shimDisconnect:t=!1}=e;let i,a;return(0,o.U)(o=>({id:"safe",name:"Safe",type:w.type,async connect(){var e;let{withCapabilities:n}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const i=await this.getProvider();if(!i)throw new u.N;const c=await this.getAccounts(),r=await this.getChainId();return a||(a=this.onDisconnect.bind(this),i.on("disconnect",a)),t&&await(null===(e=o.storage)||void 0===e?void 0:e.removeItem("safe.disconnected")),{accounts:n?c.map(e=>({address:e,capabilities:{}})):c,chainId:r}},async disconnect(){var e;const n=await this.getProvider();if(!n)throw new u.N;a&&(n.removeListener("disconnect",a),a=void 0),t&&await(null===(e=o.storage)||void 0===e?void 0:e.setItem("safe.disconnected",!0))},async getAccounts(){const e=await this.getProvider();if(!e)throw new u.N;return(await e.request({method:"eth_accounts"})).map(r.b)},async getProvider(){var t;if("undefined"!==typeof window&&(null===(t=window)||void 0===t?void 0:t.parent)!==window){if(!i){var a;const{default:t}=await Promise.all([n.e(8836),n.e(2842),n.e(1909)]).then(n.bind(n,71909)),o=new t(e),c=await(0,v.w)(()=>o.safe.getInfo(),{timeout:null!==(a=e.unstable_getInfoTimeout)&&void 0!==a?a:10});if(!c)throw new Error("Could not load Safe information");const r=await(async()=>{const e=await Promise.all([n.e(2842),n.e(4205)]).then(n.t.bind(n,44205,19));return"function"!==typeof e.SafeAppProvider&&"function"===typeof e.default.SafeAppProvider?e.default.SafeAppProvider:e.SafeAppProvider})();i=new r(c,o)}return i}},async getChainId(){const e=await this.getProvider();if(!e)throw new u.N;return Number(e.chainId)},async isAuthorized(){try{var e;if(t&&await(null===(e=o.storage)||void 0===e?void 0:e.getItem("safe.disconnected")))return!1;return!!(await this.getAccounts()).length}catch(n){return!1}},onAccountsChanged(){},onChainChanged(){},onDisconnect(){o.emitter.emit("disconnect")}}))}w.type="safe"}}]);
//# sourceMappingURL=7208.9089768c.chunk.js.map